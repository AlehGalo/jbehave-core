<xref>
  <stories>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/after_scenario_outcome.story</path>
        <description>
          <descriptionAsString>Story: Showing that @AfterScenario method are executed upon appropriate outcome (ANY, SUCCESS, FAILURE)</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Pass on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I pass</string>
            </steps>
          </scenario>
          <scenario>
            <title>Fail on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
        </scenarios>
        <name>after_scenario_outcome.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Pass on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I pass</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/after_scenario_outcome.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I pass</annotatedPattern>
                <resolvedPattern>I\s+pass</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then I pass</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then I pass</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Fail on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/after_scenario_outcome.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I fail</annotatedPattern>
                <resolvedPattern>I\s+fail</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <failed>
                <step>Then I fail</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>Then I fail</detailMessage>
                  <cause class="junit.framework.AssertionFailedError">
                    <detailMessage>I failed!</detailMessage>
                    <stackTrace>
                      <trace>junit.framework.Assert.fail(Assert.java:47)</trace>
                      <trace>org.jbehave.examples.trader.steps.SandpitSteps.doFail(SandpitSteps.java:17)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                      <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                      <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                      <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>20c4d8d7-a926-4be1-b87a-0627091d8024</uuid>
                </throwable>
                <parametrisedStep>Then I fail</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </failed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/and_step.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo>be more communicative</inOrderTo>
          <asA>story writer</asA>
          <iWantTo>explain the use of And steps and also show that I can use keywords in scenario title and comments</iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>An initial And step should be marked as pending as there is not previous step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- What is this And of?  JBehave treats as pending</string>
              <string>And the wind blows</string>
              <string>!-- Look Ma&apos; - I can also use keywords in scenario title and step comments!</string>
            </steps>
          </scenario>
          <scenario>
            <title>And steps should match the previous step type</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the wind blows</string>
              <string>!-- This And is equivalent to another Given</string>
              <string>And the wind blows</string>
              <string>!-- This And shows that we can chain multiple And steps</string>
              <string>And the wind blows</string>
              <string>When the wind blows</string>
              <string>!-- This And is equivalent to another When</string>
              <string>And the wind blows</string>
            </steps>
          </scenario>
        </scenarios>
        <name>and_step.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative>In order to be more communicative
As a story writer
I want to explain the use of And steps and also show that I can use keywords in scenario title and comments</localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>An initial And step should be marked as pending as there is not previous step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- What is this And of?  JBehave treats as pending</string>
              <string>And the wind blows</string>
              <string>!-- Look Ma&apos; - I can also use keywords in scenario title and step comments!</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/and_step.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the wind blows</annotatedPattern>
                <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the wind blows</annotatedPattern>
                <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <ignorable>
                <step>!-- What is this And of?  JBehave treats as pending</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <pending>
                <step>And the wind blows</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>And the wind blows</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>2090d4dc-4138-4f65-a09f-65d51ce5c4c7</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <ignorable>
                <step>!-- Look Ma&apos; - I can also use keywords in scenario title and step comments!</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>And steps should match the previous step type</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the wind blows</string>
              <string>!-- This And is equivalent to another Given</string>
              <string>And the wind blows</string>
              <string>!-- This And shows that we can chain multiple And steps</string>
              <string>And the wind blows</string>
              <string>When the wind blows</string>
              <string>!-- This And is equivalent to another When</string>
              <string>And the wind blows</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/and_step.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the wind blows</annotatedPattern>
                <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the wind blows</annotatedPattern>
                <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given the wind blows</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given the wind blows</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- This And is equivalent to another Given</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>And the wind blows</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>And the wind blows</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- This And shows that we can chain multiple And steps</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>And the wind blows</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>And the wind blows</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the wind blows</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the wind blows</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- This And is equivalent to another When</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>And the wind blows</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>And the wind blows</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/claims_with_null_calendar.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|date       |amount|
|none       |0.0   |
|01/06/2010 |2.15  |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>date</string>
                <string>amount</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>date</string>
                    <string>none</string>
                  </entry>
                  <entry>
                    <string>amount</string>
                    <string>0.0</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>date</string>
                    <string>01/06/2010</string>
                  </entry>
                  <entry>
                    <string>amount</string>
                    <string>2.15</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a plan with calendar date of &lt;date&gt;</string>
              <string>Then the claimant should receive an amount of &lt;amount&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>claims_with_null_calendar.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|date       |amount|
|none       |0.0   |
|01/06/2010 |2.15  |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>date</string>
                <string>amount</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>date</string>
                    <string>none</string>
                  </entry>
                  <entry>
                    <string>amount</string>
                    <string>0.0</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>date</string>
                    <string>01/06/2010</string>
                  </entry>
                  <entry>
                    <string>amount</string>
                    <string>2.15</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a plan with calendar date of &lt;date&gt;</string>
              <string>Then the claimant should receive an amount of &lt;amount&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/claims_with_null_calendar.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>date</string>
                  <string>none</string>
                </entry>
                <entry>
                  <string>amount</string>
                  <string>0.0</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a plan with calendar date of &lt;date&gt;</annotatedPattern>
                    <resolvedPattern>a\s+plan\s+with\s+calendar\s+date\s+of\s+&lt;date&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the claimant should receive an amount of &lt;amount&gt;</annotatedPattern>
                    <resolvedPattern>the\s+claimant\s+should\s+receive\s+an\s+amount\s+of\s+&lt;amount&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a plan with calendar date of &lt;date&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a plan with calendar date of ｟none｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the claimant should receive an amount of &lt;amount&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the claimant should receive an amount of ｟0.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>date</string>
                  <string>01/06/2010</string>
                </entry>
                <entry>
                  <string>amount</string>
                  <string>2.15</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a plan with calendar date of &lt;date&gt;</annotatedPattern>
                    <resolvedPattern>a\s+plan\s+with\s+calendar\s+date\s+of\s+&lt;date&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the claimant should receive an amount of &lt;amount&gt;</annotatedPattern>
                    <resolvedPattern>the\s+claimant\s+should\s+receive\s+an\s+amount\s+of\s+&lt;amount&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a plan with calendar date of &lt;date&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a plan with calendar date of ｟01/06/2010｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the claimant should receive an amount of &lt;amount&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the claimant should receive an amount of ｟2.15｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- GivenStories:  ignore_me.story</string>
              <string>Given I do nothing</string>
              <string>!-- Examples: 
|I|am|just|lazy|</string>
            </steps>
          </scenario>
        </scenarios>
        <name>do_nothing.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- GivenStories:  ignore_me.story</string>
              <string>Given I do nothing</string>
              <string>!-- Examples: 
|I|am|just|lazy|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/do_nothing.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <ignorable>
                <step>!-- GivenStories:  ignore_me.story</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- Examples: 
|I|am|just|lazy|</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/examples_table_loaded_from_classpath.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="theme" value="parametrisation"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title>Table parameter loaded from a classpath resource</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders: org/jbehave/examples/trader/stories/traders.table</string>
              <string>!-- This is a comment, which will be ignored in the execution</string>
              <string>When traders are subset to &quot;.*y&quot; by name</string>
              <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <scenario>
            <title>Parameters table loaded from a classpath resource</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>16.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
              <string>When the stock is traded with &lt;price&gt;</string>
              <string>Then the trader is alerted with &lt;status&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>examples_table_loaded_from_classpath.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Table parameter loaded from a classpath resource</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders: org/jbehave/examples/trader/stories/traders.table</string>
              <string>!-- This is a comment, which will be ignored in the execution</string>
              <string>When traders are subset to &quot;.*y&quot; by name</string>
              <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/examples_table_loaded_from_classpath.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>traders are subset to &quot;%regex&quot; by name</annotatedPattern>
                <resolvedPattern>traders\s+are\s+subset\s+to\s+&quot;(.*)&quot;\s+by\s+name</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
                <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the traders: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given the traders: org/jbehave/examples/trader/stories/traders.table</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given the traders: ［org/jbehave/examples/trader/stories/traders.table］</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- This is a comment, which will be ignored in the execution</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>When traders are subset to &quot;.*y&quot; by name</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When traders are subset to &quot;.*y&quot; by name</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the traders returned are:
［|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|］</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>1</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Parameters table loaded from a classpath resource</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>16.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
              <string>When the stock is traded with &lt;price&gt;</string>
              <string>Then the trader is alerted with &lt;status&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/examples_table_loaded_from_classpath.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>5.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>OFF</string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>parametrisation</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is traded with &lt;price&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is traded with ｟5.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the trader is alerted with &lt;status&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>11.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>OFF</string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>parametrisation</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is traded with &lt;price&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is traded with ｟11.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the trader is alerted with &lt;status&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>16.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>ON</string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>parametrisation</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                    <durationInMillis>1</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is traded with &lt;price&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is traded with ｟16.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the trader is alerted with &lt;status&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the trader is alerted with ｟ON｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>3</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/failing_after_stories.story</path>
        <description>
          <descriptionAsString>We want to show that failures in @AfterStories methods will appear in the AfterStories report.</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
        </scenarios>
        <name>failing_after_stories.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failing_after_stories.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a trader of name %trader</annotatedPattern>
                <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is left with no stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the trader sells all stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given the alert status is OFF</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Given a trader of name Mauro</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a trader of name ｟Mauro｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>And the alert status is OFF</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>And the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Given a stock of symbol STK1 and a threshold of 1.5</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟1.5｠</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded at price 2.0</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded at price ｟2.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <failed>
                <step>Then the alert status is ON</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>Then the alert status is ON</detailMessage>
                  <cause class="java.lang.AssertionError">
                    <detailMessage>
Expected: &quot;ON&quot;
     got: &quot;OFF&quot;
</detailMessage>
                    <stackTrace>
                      <trace>org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:21)</trace>
                      <trace>org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)</trace>
                      <trace>org.jbehave.examples.trader.steps.TraderSteps.theAlertStatusIs(TraderSteps.java:165)</trace>
                      <trace>sun.reflect.GeneratedMethodAccessor156.invoke(Unknown Source)</trace>
                      <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                      <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                      <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>19a3b8a4-063d-4ee8-bac5-3ee9373e61e1</uuid>
                </throwable>
                <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </failed>
              <notPerformed>
                <step>When the trader sells all stocks</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>When the trader sells all stocks</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Then the trader is left with no stocks</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Then the trader is left with no stocks</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/failure_correlation_one.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Fail on a step in story 1</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When a failure occurs in story 1</string>
            </steps>
          </scenario>
        </scenarios>
        <name>failure_correlation_one.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Fail on a step in story 1</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When a failure occurs in story 1</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failure_correlation_one.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>When a failure occurs in story 1</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When a failure occurs in story 1</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>2e6c6ceb-21c1-4c1d-a57b-efa92de27439</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/failure_correlation_two.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Fail on a step in story 2</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When a failure occurs in story 2</string>
            </steps>
          </scenario>
        </scenarios>
        <name>failure_correlation_two.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Fail on a step in story 2</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When a failure occurs in story 2</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failure_correlation_two.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>When a failure occurs in story 2</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When a failure occurs in story 2</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>a6e6e2ef-f8ed-4449-82e9-3ec4c357f6b9</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story</path>
        <description>
          <descriptionAsString>Story: Showing that using given stories in a passing scenario following a scenario where are a failure occurred resets the overall 
build result of the story</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Fail on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <scenario>
            <title>Pass after given stories</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I pass</string>
            </steps>
          </scenario>
        </scenarios>
        <name>failure_followed_by_given_stories.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Fail on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I fail</annotatedPattern>
                <resolvedPattern>I\s+fail</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </successful>
              <failed>
                <step>Then I fail</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>Then I fail</detailMessage>
                  <cause class="junit.framework.AssertionFailedError">
                    <detailMessage>I failed!</detailMessage>
                    <stackTrace>
                      <trace>junit.framework.Assert.fail(Assert.java:47)</trace>
                      <trace>org.jbehave.examples.trader.steps.SandpitSteps.doFail(SandpitSteps.java:17)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                      <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                      <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                      <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>8ccb1bf7-da6b-46e0-9998-cad3ae4db534</uuid>
                </throwable>
                <parametrisedStep>Then I fail</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </failed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Pass after given stories</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I pass</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties/>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>!-- GivenStories:  ignore_me.story</string>
                      <string>Given I do nothing</string>
                      <string>!-- Examples: 
|I|am|just|lazy|</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>do_nothing.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>!-- GivenStories:  ignore_me.story</string>
                      <string>Given I do nothing</string>
                      <string>!-- Examples: 
|I|am|just|lazy|</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/do_nothing.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>I do nothing</annotatedPattern>
                        <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
                      </stepMatch>
                    </matches>
                    <results>
                      <ignorable>
                        <step>!-- GivenStories:  ignore_me.story</step>
                        <type>IGNORABLE</type>
                        <durationInMillis>0</durationInMillis>
                      </ignorable>
                      <successful>
                        <step>Given I do nothing</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given I do nothing</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <ignorable>
                        <step>!-- Examples: 
|I|am|just|lazy|</step>
                        <type>IGNORABLE</type>
                        <durationInMillis>0</durationInMillis>
                      </ignorable>
                    </results>
                  </steps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                      <skipped>
                        <step></step>
                        <type>SKIPPED</type>
                        <durationInMillis>0</durationInMillis>
                      </skipped>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                </performableScenario>
              </scenarios>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
              <timing>
                <durationInMillis>0</durationInMillis>
              </timing>
            </performableStory>
          </givenStories>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I pass</annotatedPattern>
                <resolvedPattern>I\s+pass</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then I pass</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then I pass</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>1</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>2</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/given_non_successful.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario that depends on a non successful story</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/non_successful.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders:
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
        </scenarios>
        <name>given_non_successful.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario that depends on a non successful story</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/non_successful.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders:
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/given_non_successful.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/non_successful.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties/>
                </meta>
                <scenarios>
                  <scenario>
                    <title>A scenario with failed step</title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Then I fail</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>non_successful.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title>A scenario with failed step</title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Then I fail</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/non_successful.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>I fail</annotatedPattern>
                        <resolvedPattern>I\s+fail</resolvedPattern>
                      </stepMatch>
                    </matches>
                    <results>
                      <failed>
                        <step>Then I fail</step>
                        <type>FAILED</type>
                        <throwable>
                          <detailMessage>Then I fail</detailMessage>
                          <cause class="junit.framework.AssertionFailedError">
                            <detailMessage>I failed!</detailMessage>
                            <stackTrace>
                              <trace>junit.framework.Assert.fail(Assert.java:47)</trace>
                              <trace>org.jbehave.examples.trader.steps.SandpitSteps.doFail(SandpitSteps.java:17)</trace>
                              <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                              <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                              <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                              <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                              <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                              <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                              <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                              <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                              <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                              <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                              <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:703)</trace>
                              <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                              <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                              <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                              <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                              <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                              <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                              <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                              <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                              <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                              <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                              <trace>java.lang.Thread.run(Thread.java:680)</trace>
                            </stackTrace>
                          </cause>
                          <stackTrace>
                            <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                            <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                            <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                            <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                            <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                            <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                            <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:703)</trace>
                            <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                            <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                            <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                            <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                            <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                            <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                            <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                            <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                            <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                            <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                            <trace>java.lang.Thread.run(Thread.java:680)</trace>
                          </stackTrace>
                          <uuid>99897732-564b-4964-ad61-4465c7a289ac</uuid>
                        </throwable>
                        <parametrisedStep>Then I fail</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </failed>
                    </results>
                  </steps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                      <skipped>
                        <step></step>
                        <type>SKIPPED</type>
                        <durationInMillis>0</durationInMillis>
                      </skipped>
                    </results>
                  </afterSteps>
                </performableScenario>
              </scenarios>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
              <timing>
                <durationInMillis>0</durationInMillis>
              </timing>
            </performableStory>
          </givenStories>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the traders: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <notPerformed>
                <step>Given the traders:
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Given the traders:
［|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|］</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/given_stories_parametrised_by_anchor.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario that depends on a given story with parameters specified as anchor pointing to specific examples row. 
The presence of the anchor implies that the scenario is executed normally and not parametrised by examples, i.e. that the scenario is not executed for each examples row.</title>
            <meta>
              <properties>
                <property name="theme" value="parametrisation"/>
                <property name="assetClass" value="FX"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
                  <parameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </parameters>
                  <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                  <anchor>0</anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
              <examplesTable>
                <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers>
                  <string>symbol</string>
                  <string>threshold</string>
                </headers>
                <data>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </linked-hash-map>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK2</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>2.0</string>
                    </entry>
                  </linked-hash-map>
                </data>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>1.0</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK2</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>2.0</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
        </scenarios>
        <name>given_stories_parametrised_by_anchor.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario that depends on a given story with parameters specified as anchor pointing to specific examples row. 
The presence of the anchor implies that the scenario is executed normally and not parametrised by examples, i.e. that the scenario is not executed for each examples row.</title>
            <meta>
              <properties>
                <property name="theme" value="parametrisation"/>
                <property name="assetClass" value="FX"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
                  <parameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </parameters>
                  <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                  <anchor>0</anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
              <examplesTable>
                <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers>
                  <string>symbol</string>
                  <string>threshold</string>
                </headers>
                <data>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </linked-hash-map>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK2</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>2.0</string>
                    </entry>
                  </linked-hash-map>
                </data>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>1.0</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK2</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>2.0</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_anchor.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties>
                    <property name="theme" value="parametrisation"/>
                  </properties>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the asset class &lt;assetClass&gt;</string>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>parametrised.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the asset class &lt;assetClass&gt;</string>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the asset class %assetClass</annotatedPattern>
                        <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                      </stepMatch>
                    </matches>
                    <results>
                      <successful>
                        <step>Given the asset class &lt;assetClass&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given the asset class ｟FX｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given a stock of ｟STK1｠ and a ｟1.0｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                    </results>
                  </steps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                      <skipped>
                        <step></step>
                        <type>SKIPPED</type>
                        <durationInMillis>0</durationInMillis>
                      </skipped>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                </performableScenario>
              </scenarios>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
              <timing>
                <durationInMillis>0</durationInMillis>
              </timing>
            </performableStory>
          </givenStories>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>When the stock is traded at price 1.1</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded at price ｟1.1｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the alert status is ON</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/given_stories_parametrised_by_examples.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario that depends on given stories parametrised by examples. 
Here the entire scenario is parametrised by examples, i.e. the scenario is executed for each examples row.</title>
            <meta>
              <properties>
                <property name="assetClass" value="FX"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|stockExchange|symbol|threshold|price|status|
|NASDAQ|STK1|10.0|5.0|OFF|
|FTSE|STK1|10.0|11.0|ON|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>stockExchange</string>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>stockExchange</string>
                    <string>NASDAQ</string>
                  </entry>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>10.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>assetClass</string>
                    <string>FX</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>stockExchange</string>
                    <string>FTSE</string>
                  </entry>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>10.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                  <entry>
                    <string>assetClass</string>
                    <string>FX</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol &lt;symbol&gt; and a threshold of &lt;threshold&gt;</string>
              <string>When the stock is traded at price &lt;price&gt;</string>
              <string>Then the alert status is &lt;status&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>given_stories_parametrised_by_examples.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario that depends on given stories parametrised by examples. 
Here the entire scenario is parametrised by examples, i.e. the scenario is executed for each examples row.</title>
            <meta>
              <properties>
                <property name="assetClass" value="FX"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|stockExchange|symbol|threshold|price|status|
|NASDAQ|STK1|10.0|5.0|OFF|
|FTSE|STK1|10.0|11.0|ON|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>stockExchange</string>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>stockExchange</string>
                    <string>NASDAQ</string>
                  </entry>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>10.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>assetClass</string>
                    <string>FX</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>stockExchange</string>
                    <string>FTSE</string>
                  </entry>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>10.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                  <entry>
                    <string>assetClass</string>
                    <string>FX</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol &lt;symbol&gt; and a threshold of &lt;threshold&gt;</string>
              <string>When the stock is traded at price &lt;price&gt;</string>
              <string>Then the alert status is &lt;status&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_examples.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>stockExchange</string>
                  <string>NASDAQ</string>
                </entry>
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>10.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>5.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>OFF</string>
                </entry>
                <entry>
                  <string>assetClass</string>
                  <string>FX</string>
                </entry>
              </exampleParameters>
              <performableGivenStories>
                <performableStory>
                  <story>
                    <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                    <description>
                      <descriptionAsString></descriptionAsString>
                    </description>
                    <narrative>
                      <inOrderTo></inOrderTo>
                      <asA></asA>
                      <iWantTo></iWantTo>
                    </narrative>
                    <meta>
                      <properties/>
                    </meta>
                    <scenarios>
                      <scenario>
                        <title></title>
                        <meta>
                          <properties/>
                        </meta>
                        <givenStories>
                          <givenStories/>
                          <givenStoriesAsString></givenStoriesAsString>
                          <examplesTable>
                            <tableAsString></tableAsString>
                            <headerSeparator>|</headerSeparator>
                            <valueSeparator>|</valueSeparator>
                            <ignorableSeparator>|--</ignorableSeparator>
                            <tableTransformers>
                              <transformers>
                                <entry>
                                  <string>FROM_LANDSCAPE</string>
                                  <fromLandscape/>
                                </entry>
                              </transformers>
                            </tableTransformers>
                            <headers/>
                            <data/>
                            <properties>
                              <property name="headerSeparator" value="|"/>
                              <property name="valueSeparator" value="|"/>
                              <property name="ignorableSeparator" value="|--"/>
                            </properties>
                            <propertiesAsString></propertiesAsString>
                            <namedParameters/>
                            <trim>true</trim>
                          </examplesTable>
                        </givenStories>
                        <examplesTable>
                          <tableAsString></tableAsString>
                          <headerSeparator>|</headerSeparator>
                          <valueSeparator>|</valueSeparator>
                          <ignorableSeparator>|--</ignorableSeparator>
                          <tableTransformers>
                            <transformers>
                              <entry>
                                <string>FROM_LANDSCAPE</string>
                                <fromLandscape/>
                              </entry>
                            </transformers>
                          </tableTransformers>
                          <headers/>
                          <data/>
                          <properties>
                            <property name="headerSeparator" value="|"/>
                            <property name="valueSeparator" value="|"/>
                            <property name="ignorableSeparator" value="|--"/>
                          </properties>
                          <propertiesAsString></propertiesAsString>
                          <namedParameters/>
                          <trim>true</trim>
                        </examplesTable>
                        <steps>
                          <string>Given the stock exchange &lt;stockExchange&gt;</string>
                          <string>And the asset class &lt;assetClass&gt;</string>
                        </steps>
                      </scenario>
                    </scenarios>
                    <name>select_stock_exchange.story</name>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                  </story>
                  <localizedNarrative></localizedNarrative>
                  <allowed>true</allowed>
                  <givenStories/>
                  <scenarios>
                    <performableScenario>
                      <scenario>
                        <title></title>
                        <meta>
                          <properties/>
                        </meta>
                        <givenStories>
                          <givenStories/>
                          <givenStoriesAsString></givenStoriesAsString>
                          <examplesTable>
                            <tableAsString></tableAsString>
                            <headerSeparator>|</headerSeparator>
                            <valueSeparator>|</valueSeparator>
                            <ignorableSeparator>|--</ignorableSeparator>
                            <tableTransformers>
                              <transformers>
                                <entry>
                                  <string>FROM_LANDSCAPE</string>
                                  <fromLandscape/>
                                </entry>
                              </transformers>
                            </tableTransformers>
                            <headers/>
                            <data/>
                            <properties>
                              <property name="headerSeparator" value="|"/>
                              <property name="valueSeparator" value="|"/>
                              <property name="ignorableSeparator" value="|--"/>
                            </properties>
                            <propertiesAsString></propertiesAsString>
                            <namedParameters/>
                            <trim>true</trim>
                          </examplesTable>
                        </givenStories>
                        <examplesTable>
                          <tableAsString></tableAsString>
                          <headerSeparator>|</headerSeparator>
                          <valueSeparator>|</valueSeparator>
                          <ignorableSeparator>|--</ignorableSeparator>
                          <tableTransformers>
                            <transformers>
                              <entry>
                                <string>FROM_LANDSCAPE</string>
                                <fromLandscape/>
                              </entry>
                            </transformers>
                          </tableTransformers>
                          <headers/>
                          <data/>
                          <properties>
                            <property name="headerSeparator" value="|"/>
                            <property name="valueSeparator" value="|"/>
                            <property name="ignorableSeparator" value="|--"/>
                          </properties>
                          <propertiesAsString></propertiesAsString>
                          <namedParameters/>
                          <trim>true</trim>
                        </examplesTable>
                        <steps>
                          <string>Given the stock exchange &lt;stockExchange&gt;</string>
                          <string>And the asset class &lt;assetClass&gt;</string>
                        </steps>
                      </scenario>
                      <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
                      <allowed>true</allowed>
                      <exampleScenarios/>
                      <givenStories/>
                      <beforeSteps>
                        <results>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>1</durationInMillis>
                          </silent>
                        </results>
                      </beforeSteps>
                      <steps>
                        <matches>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>the asset class %assetClass</annotatedPattern>
                            <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
                            <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
                          </stepMatch>
                        </matches>
                        <results>
                          <successful>
                            <step>Given the stock exchange &lt;stockExchange&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>Given the stock exchange ｟NASDAQ｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                          <successful>
                            <step>And the asset class &lt;assetClass&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>And the asset class ｟FX｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                        </results>
                      </steps>
                      <afterSteps>
                        <results>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                          <skipped>
                            <step></step>
                            <type>SKIPPED</type>
                            <durationInMillis>0</durationInMillis>
                          </skipped>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                        </results>
                      </afterSteps>
                    </performableScenario>
                  </scenarios>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                  <timing>
                    <durationInMillis>1</durationInMillis>
                  </timing>
                </performableStory>
              </performableGivenStories>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the alert status is %status</annotatedPattern>
                    <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a stock of symbol &lt;symbol&gt; and a threshold of &lt;threshold&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟10.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is traded at price &lt;price&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is traded at price ｟5.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the alert status is &lt;status&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the alert status is ｟OFF｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>stockExchange</string>
                  <string>FTSE</string>
                </entry>
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>10.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>11.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>ON</string>
                </entry>
                <entry>
                  <string>assetClass</string>
                  <string>FX</string>
                </entry>
              </exampleParameters>
              <performableGivenStories>
                <performableStory>
                  <story>
                    <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                    <description>
                      <descriptionAsString></descriptionAsString>
                    </description>
                    <narrative>
                      <inOrderTo></inOrderTo>
                      <asA></asA>
                      <iWantTo></iWantTo>
                    </narrative>
                    <meta>
                      <properties/>
                    </meta>
                    <scenarios>
                      <scenario>
                        <title></title>
                        <meta>
                          <properties/>
                        </meta>
                        <givenStories>
                          <givenStories/>
                          <givenStoriesAsString></givenStoriesAsString>
                          <examplesTable>
                            <tableAsString></tableAsString>
                            <headerSeparator>|</headerSeparator>
                            <valueSeparator>|</valueSeparator>
                            <ignorableSeparator>|--</ignorableSeparator>
                            <tableTransformers>
                              <transformers>
                                <entry>
                                  <string>FROM_LANDSCAPE</string>
                                  <fromLandscape/>
                                </entry>
                              </transformers>
                            </tableTransformers>
                            <headers/>
                            <data/>
                            <properties>
                              <property name="headerSeparator" value="|"/>
                              <property name="valueSeparator" value="|"/>
                              <property name="ignorableSeparator" value="|--"/>
                            </properties>
                            <propertiesAsString></propertiesAsString>
                            <namedParameters/>
                            <trim>true</trim>
                          </examplesTable>
                        </givenStories>
                        <examplesTable>
                          <tableAsString></tableAsString>
                          <headerSeparator>|</headerSeparator>
                          <valueSeparator>|</valueSeparator>
                          <ignorableSeparator>|--</ignorableSeparator>
                          <tableTransformers>
                            <transformers>
                              <entry>
                                <string>FROM_LANDSCAPE</string>
                                <fromLandscape/>
                              </entry>
                            </transformers>
                          </tableTransformers>
                          <headers/>
                          <data/>
                          <properties>
                            <property name="headerSeparator" value="|"/>
                            <property name="valueSeparator" value="|"/>
                            <property name="ignorableSeparator" value="|--"/>
                          </properties>
                          <propertiesAsString></propertiesAsString>
                          <namedParameters/>
                          <trim>true</trim>
                        </examplesTable>
                        <steps>
                          <string>Given the stock exchange &lt;stockExchange&gt;</string>
                          <string>And the asset class &lt;assetClass&gt;</string>
                        </steps>
                      </scenario>
                    </scenarios>
                    <name>select_stock_exchange.story</name>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                  </story>
                  <localizedNarrative></localizedNarrative>
                  <allowed>true</allowed>
                  <givenStories/>
                  <scenarios>
                    <performableScenario>
                      <scenario>
                        <title></title>
                        <meta>
                          <properties/>
                        </meta>
                        <givenStories>
                          <givenStories/>
                          <givenStoriesAsString></givenStoriesAsString>
                          <examplesTable>
                            <tableAsString></tableAsString>
                            <headerSeparator>|</headerSeparator>
                            <valueSeparator>|</valueSeparator>
                            <ignorableSeparator>|--</ignorableSeparator>
                            <tableTransformers>
                              <transformers>
                                <entry>
                                  <string>FROM_LANDSCAPE</string>
                                  <fromLandscape/>
                                </entry>
                              </transformers>
                            </tableTransformers>
                            <headers/>
                            <data/>
                            <properties>
                              <property name="headerSeparator" value="|"/>
                              <property name="valueSeparator" value="|"/>
                              <property name="ignorableSeparator" value="|--"/>
                            </properties>
                            <propertiesAsString></propertiesAsString>
                            <namedParameters/>
                            <trim>true</trim>
                          </examplesTable>
                        </givenStories>
                        <examplesTable>
                          <tableAsString></tableAsString>
                          <headerSeparator>|</headerSeparator>
                          <valueSeparator>|</valueSeparator>
                          <ignorableSeparator>|--</ignorableSeparator>
                          <tableTransformers>
                            <transformers>
                              <entry>
                                <string>FROM_LANDSCAPE</string>
                                <fromLandscape/>
                              </entry>
                            </transformers>
                          </tableTransformers>
                          <headers/>
                          <data/>
                          <properties>
                            <property name="headerSeparator" value="|"/>
                            <property name="valueSeparator" value="|"/>
                            <property name="ignorableSeparator" value="|--"/>
                          </properties>
                          <propertiesAsString></propertiesAsString>
                          <namedParameters/>
                          <trim>true</trim>
                        </examplesTable>
                        <steps>
                          <string>Given the stock exchange &lt;stockExchange&gt;</string>
                          <string>And the asset class &lt;assetClass&gt;</string>
                        </steps>
                      </scenario>
                      <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
                      <allowed>true</allowed>
                      <exampleScenarios/>
                      <givenStories/>
                      <beforeSteps>
                        <results>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                        </results>
                      </beforeSteps>
                      <steps>
                        <matches>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>the asset class %assetClass</annotatedPattern>
                            <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
                            <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
                          </stepMatch>
                        </matches>
                        <results>
                          <successful>
                            <step>Given the stock exchange &lt;stockExchange&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>Given the stock exchange ｟FTSE｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                          <successful>
                            <step>And the asset class &lt;assetClass&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>And the asset class ｟FX｠</parametrisedStep>
                            <durationInMillis>1</durationInMillis>
                          </successful>
                        </results>
                      </steps>
                      <afterSteps>
                        <results>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                          <skipped>
                            <step></step>
                            <type>SKIPPED</type>
                            <durationInMillis>0</durationInMillis>
                          </skipped>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                        </results>
                      </afterSteps>
                    </performableScenario>
                  </scenarios>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                  <timing>
                    <durationInMillis>1</durationInMillis>
                  </timing>
                </performableStory>
              </performableGivenStories>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the alert status is %status</annotatedPattern>
                    <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a stock of symbol &lt;symbol&gt; and a threshold of &lt;threshold&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟10.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is traded at price &lt;price&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is traded at price ｟11.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the alert status is &lt;status&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>2</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/given_stories_parametrised_by_meta.story</path>
        <description>
          <descriptionAsString>A story using GivenStories at story level parametrised by meta properties</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="threshold" value="1.0"/>
            <property name="symbol" value="STK1"/>
            <property name="theme" value="parametrisation"/>
            <property name="assetClass" value="FX"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario that is executed after the given stories parametrised by meta</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
        </scenarios>
        <name>given_stories_parametrised_by_meta.story</name>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story</givenStoryAsString>
              <parameters/>
              <path>org/jbehave/examples/trader/stories/parametrised.story</path>
              <anchor></anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story</givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/parametrised.story</path>
            <description>
              <descriptionAsString></descriptionAsString>
            </description>
            <narrative>
              <inOrderTo></inOrderTo>
              <asA></asA>
              <iWantTo></iWantTo>
            </narrative>
            <meta>
              <properties>
                <property name="theme" value="parametrisation"/>
              </properties>
            </meta>
            <scenarios>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
            </scenarios>
            <name>parametrised.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative></localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>the asset class %assetClass</annotatedPattern>
                    <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableScenario>
          </scenarios>
          <beforeSteps/>
          <afterSteps/>
          <timing>
            <durationInMillis>0</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario that is executed after the given stories parametrised by meta</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_meta.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>When the stock is traded at price 1.1</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded at price ｟1.1｠</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </successful>
              <successful>
                <step>Then the alert status is ON</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/meta_filtering.story</path>
        <description>
          <descriptionAsString>A story description
over multiple lines</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="author" value="Mauro"/>
            <property name="theme" value="filtering"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario to be skipped
and not executed</title>
            <meta>
              <properties>
                <property name="skip" value=""/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <scenario>
            <title>A scenario with an author</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <scenario>
            <title>A scenario with examples whose rows can be filtered on meta</title>
            <meta>
              <properties>
                <property name="run" value=""/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|Meta:|Parameter|
|@run yes|value|
|@run not|value|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>Meta:</string>
                <string>Parameter</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>Meta:</string>
                    <string>@run yes</string>
                  </entry>
                  <entry>
                    <string>Parameter</string>
                    <string>value</string>
                  </entry>
                  <entry>
                    <string>author</string>
                    <string>Mauro</string>
                  </entry>
                  <entry>
                    <string>run</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>filtering</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>Meta:</string>
                    <string>@run not</string>
                  </entry>
                  <entry>
                    <string>Parameter</string>
                    <string>value</string>
                  </entry>
                  <entry>
                    <string>author</string>
                    <string>Mauro</string>
                  </entry>
                  <entry>
                    <string>run</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>filtering</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
        </scenarios>
        <name>meta_filtering.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario to be skipped
and not executed</title>
            <meta>
              <properties>
                <property name="skip" value=""/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>A scenario with an author</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>A scenario with examples whose rows can be filtered on meta</title>
            <meta>
              <properties>
                <property name="run" value=""/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|Meta:|Parameter|
|@run yes|value|
|@run not|value|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>Meta:</string>
                <string>Parameter</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>Meta:</string>
                    <string>@run yes</string>
                  </entry>
                  <entry>
                    <string>Parameter</string>
                    <string>value</string>
                  </entry>
                  <entry>
                    <string>author</string>
                    <string>Mauro</string>
                  </entry>
                  <entry>
                    <string>run</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>filtering</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>Meta:</string>
                    <string>@run not</string>
                  </entry>
                  <entry>
                    <string>Parameter</string>
                    <string>value</string>
                  </entry>
                  <entry>
                    <string>author</string>
                    <string>Mauro</string>
                  </entry>
                  <entry>
                    <string>run</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>filtering</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>Meta:</string>
                  <string>@run yes</string>
                </entry>
                <entry>
                  <string>Parameter</string>
                  <string>value</string>
                </entry>
                <entry>
                  <string>author</string>
                  <string>Mauro</string>
                </entry>
                <entry>
                  <string>run</string>
                  <string></string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>filtering</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>I do nothing</annotatedPattern>
                    <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given I do nothing</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given I do nothing</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>Meta:</string>
                  <string>@run not</string>
                </entry>
                <entry>
                  <string>Parameter</string>
                  <string>value</string>
                </entry>
                <entry>
                  <string>author</string>
                  <string>Mauro</string>
                </entry>
                <entry>
                  <string>run</string>
                  <string></string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>filtering</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>I do nothing</annotatedPattern>
                    <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given I do nothing</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given I do nothing</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>1</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/meta_parametrisation.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="theme" value="parameters"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title>scenario with explicitly mentioned meta params</title>
            <meta>
              <properties>
                <property name="variant" value="named"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I have specified the &lt;theme&gt;</string>
              <string>And a &lt;variant&gt;</string>
              <string>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</string>
            </steps>
          </scenario>
          <scenario>
            <title>scenario with hidden meta params</title>
            <meta>
              <properties>
                <property name="variant" value="foo"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I have some step that implicitly requires meta params</string>
              <string>Then the theme is &apos;parameters&apos; with variant &apos;foo&apos;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>meta_parametrisation.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>scenario with explicitly mentioned meta params</title>
            <meta>
              <properties>
                <property name="variant" value="named"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I have specified the &lt;theme&gt;</string>
              <string>And a &lt;variant&gt;</string>
              <string>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/meta_parametrisation.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a &lt;variant&gt;</annotatedPattern>
                <resolvedPattern>a\s+&lt;variant&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the theme is &apos;%theme&apos; with variant &apos;%variant&apos;</annotatedPattern>
                <resolvedPattern>the\s+theme\s+is\s+&apos;(.*)&apos;\s+with\s+variant\s+&apos;(.*)&apos;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I have specified the &lt;theme&gt;</annotatedPattern>
                <resolvedPattern>I\s+have\s+specified\s+the\s+&lt;theme&gt;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I have specified the &lt;theme&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I have specified the ｟parameters｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>And a &lt;variant&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>And a ｟foo｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <failed>
                <step>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</detailMessage>
                  <cause class="org.junit.ComparisonFailure">
                    <detailMessage></detailMessage>
                    <stackTrace>
                      <trace>org.junit.Assert.assertEquals(Assert.java:123)</trace>
                      <trace>org.junit.Assert.assertEquals(Assert.java:145)</trace>
                      <trace>org.jbehave.examples.trader.steps.MetaParametrisationSteps.thenTheThemeAndVariantAre(MetaParametrisationSteps.java:33)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                      <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                      <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                      <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                    <fExpected>named</fExpected>
                    <fActual>foo</fActual>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>52795a40-3bdf-486e-bdd4-3eb761cbd765</uuid>
                </throwable>
                <parametrisedStep>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </failed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>scenario with hidden meta params</title>
            <meta>
              <properties>
                <property name="variant" value="foo"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I have some step that implicitly requires meta params</string>
              <string>Then the theme is &apos;parameters&apos; with variant &apos;foo&apos;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/meta_parametrisation.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I have some step that implicitly requires meta params</annotatedPattern>
                <resolvedPattern>I\s+have\s+some\s+step\s+that\s+implicitly\s+requires\s+meta\s+params</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the theme is &apos;%theme&apos; with variant &apos;%variant&apos;</annotatedPattern>
                <resolvedPattern>the\s+theme\s+is\s+&apos;(.*)&apos;\s+with\s+variant\s+&apos;(.*)&apos;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I have some step that implicitly requires meta params</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I have some step that implicitly requires meta params</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the theme is &apos;parameters&apos; with variant &apos;foo&apos;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the theme is &apos;parameters&apos; with variant &apos;foo&apos;</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/named_annotations.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Supported action and/or event story</title>
            <meta>
              <properties>
                <property name="notSupportedActions" value="FIX,SCHEDULE,RESCHEDULE,DETERMINE"/>
                <property name="supportedActions" value="TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP"/>
                <property name="notSupportedEventTypes" value="DONE,FETCHED,CREATED,TESTED,FIXED"/>
                <property name="supportedEventTypes" value="NEW,FRESH,CANCELLED,AMENDED,TERMINATED"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|actionSupportability   |eventTypeSupportability|&#xd;
|supported              |supported              |&#xd;
|notSupported           |supported              |&#xd;
|supported              |notSupported           |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>actionSupportability</string>
                <string>eventTypeSupportability</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>notSupported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>notSupported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</string>
              <string>When it is received</string>
              <string>Then message is consumed without error</string>
            </steps>
          </scenario>
        </scenarios>
        <name>named_annotations.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Supported action and/or event story</title>
            <meta>
              <properties>
                <property name="notSupportedActions" value="FIX,SCHEDULE,RESCHEDULE,DETERMINE"/>
                <property name="supportedActions" value="TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP"/>
                <property name="notSupportedEventTypes" value="DONE,FETCHED,CREATED,TESTED,FIXED"/>
                <property name="supportedEventTypes" value="NEW,FRESH,CANCELLED,AMENDED,TERMINATED"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|actionSupportability   |eventTypeSupportability|&#xd;
|supported              |supported              |&#xd;
|notSupported           |supported              |&#xd;
|supported              |notSupported           |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>actionSupportability</string>
                <string>eventTypeSupportability</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>notSupported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>notSupported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</string>
              <string>When it is received</string>
              <string>Then message is consumed without error</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/named_annotations.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>actionSupportability</string>
                  <string>supported</string>
                </entry>
                <entry>
                  <string>eventTypeSupportability</string>
                  <string>supported</string>
                </entry>
                <entry>
                  <string>notSupportedActions</string>
                  <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                </entry>
                <entry>
                  <string>notSupportedEventTypes</string>
                  <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                </entry>
                <entry>
                  <string>supportedActions</string>
                  <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                </entry>
                <entry>
                  <string>supportedEventTypes</string>
                  <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches/>
                <results>
                  <pending>
                    <step>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>c769ec7c-dede-4edd-b364-5a331619fa50</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>When it is received</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>When it is received</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>57922245-8df7-442a-ba60-1fd72377611b</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>Then message is consumed without error</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Then message is consumed without error</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>e2cd1690-d6a5-47b4-b50b-6bea98311e53</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>actionSupportability</string>
                  <string>notSupported</string>
                </entry>
                <entry>
                  <string>eventTypeSupportability</string>
                  <string>supported</string>
                </entry>
                <entry>
                  <string>notSupportedActions</string>
                  <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                </entry>
                <entry>
                  <string>notSupportedEventTypes</string>
                  <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                </entry>
                <entry>
                  <string>supportedActions</string>
                  <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                </entry>
                <entry>
                  <string>supportedEventTypes</string>
                  <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches/>
                <results>
                  <pending>
                    <step>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>be59c03d-de17-4f65-a2df-c32b6b1f963e</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>When it is received</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>When it is received</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>82d69e25-435d-4781-957a-6e42b57acbc4</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>Then message is consumed without error</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Then message is consumed without error</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>80deed28-50ea-443d-9f4e-31c31e81b158</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>actionSupportability</string>
                  <string>supported</string>
                </entry>
                <entry>
                  <string>eventTypeSupportability</string>
                  <string>notSupported</string>
                </entry>
                <entry>
                  <string>notSupportedActions</string>
                  <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                </entry>
                <entry>
                  <string>notSupportedEventTypes</string>
                  <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                </entry>
                <entry>
                  <string>supportedActions</string>
                  <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                </entry>
                <entry>
                  <string>supportedEventTypes</string>
                  <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches/>
                <results>
                  <pending>
                    <step>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>b2061d88-581a-458f-8e9d-c39496dd329a</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>When it is received</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>When it is received</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>aa76f83a-8956-4ca8-8161-c66cb128a173</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>Then message is consumed without error</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Then message is consumed without error</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>4db9c74e-8baf-49ff-879e-097b98a03ea4</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/named_parameters.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>We want to verify that parameters can be matched by name preserving the natural order</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given parameters matched by name in natural order one and two</string>
              <string>Then parameters values are one and two</string>
            </steps>
          </scenario>
          <scenario>
            <title>We want to verify that parameters can be matched by name inverting the natural order</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given parameters matched by name in inverse order one and two</string>
              <string>Then parameters values are one and two</string>
            </steps>
          </scenario>
        </scenarios>
        <name>named_parameters.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>We want to verify that parameters can be matched by name preserving the natural order</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given parameters matched by name in natural order one and two</string>
              <string>Then parameters values are one and two</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/named_parameters.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>parameters matched by name in natural order %ith and %nth</annotatedPattern>
                <resolvedPattern>parameters\s+matched\s+by\s+name\s+in\s+natural\s+order\s+(.*)\s+and\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>parameters values are %ith and %nth</annotatedPattern>
                <resolvedPattern>parameters\s+values\s+are\s+(.*)\s+and\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given parameters matched by name in natural order one and two</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given parameters matched by name in natural order ｟one｠ and ｟two｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then parameters values are one and two</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then parameters values are ｟one｠ and ｟two｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>1</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>We want to verify that parameters can be matched by name inverting the natural order</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given parameters matched by name in inverse order one and two</string>
              <string>Then parameters values are one and two</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/named_parameters.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>parameters matched by name in inverse order %ith and %nth</annotatedPattern>
                <resolvedPattern>parameters\s+matched\s+by\s+name\s+in\s+inverse\s+order\s+(.*)\s+and\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>parameters values are %ith and %nth</annotatedPattern>
                <resolvedPattern>parameters\s+values\s+are\s+(.*)\s+and\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given parameters matched by name in inverse order one and two</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given parameters matched by name in inverse order ｟one｠ and ｟two｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then parameters values are one and two</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then parameters values are ｟one｠ and ｟two｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/non_successful.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario with failed step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Then I fail</string>
            </steps>
          </scenario>
        </scenarios>
        <name>non_successful.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario with failed step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/non_successful.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I fail</annotatedPattern>
                <resolvedPattern>I\s+fail</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <failed>
                <step>Then I fail</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>Then I fail</detailMessage>
                  <cause class="junit.framework.AssertionFailedError">
                    <detailMessage>I failed!</detailMessage>
                    <stackTrace>
                      <trace>junit.framework.Assert.fail(Assert.java:47)</trace>
                      <trace>org.jbehave.examples.trader.steps.SandpitSteps.doFail(SandpitSteps.java:17)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                      <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                      <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                      <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>bf1fad71-4543-456e-be6e-b7dfcd53a0b2</uuid>
                </throwable>
                <parametrisedStep>Then I fail</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </failed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/parameter_delimiters.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>I want to show that different parameter delimiters can be configured via the ParameterControls</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|parameter|
|value|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>parameter</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>parameter</string>
                    <string>value</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a [parameter]</string>
            </steps>
          </scenario>
          <scenario>
            <title>I want to show that parameter values are correctly delimited, even when the values are overlapping</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol 10ABCDEF and a threshold of 10</string>
              <string>Given a stock of symbol ABC10DEF and a threshold of 10</string>
              <string>Given a stock of symbol ABCDEF10 and a threshold of 10</string>
            </steps>
          </scenario>
          <scenario>
            <title>I want to show that parameter values are correctly delimited, but not in the table parameter</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders: 
|name | rank   |
|joe  | topdog |</string>
              <string>And a stock of symbol topdog and a threshold of 10</string>
            </steps>
          </scenario>
        </scenarios>
        <name>parameter_delimiters.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>I want to show that different parameter delimiters can be configured via the ParameterControls</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|parameter|
|value|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>parameter</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>parameter</string>
                    <string>value</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a [parameter]</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>parameter</string>
                  <string>value</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches/>
                <results>
                  <pending>
                    <step>Given a [parameter]</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Given a [parameter]</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>dcb8b273-5f6f-4a4a-a554-5620e70c95b2</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>I want to show that parameter values are correctly delimited, even when the values are overlapping</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol 10ABCDEF and a threshold of 10</string>
              <string>Given a stock of symbol ABC10DEF and a threshold of 10</string>
              <string>Given a stock of symbol ABCDEF10 and a threshold of 10</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a stock of symbol 10ABCDEF and a threshold of 10</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of symbol ｟10ABCDEF｠ and a threshold of ｟10｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Given a stock of symbol ABC10DEF and a threshold of 10</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of symbol ｟ABC10DEF｠ and a threshold of ｟10｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Given a stock of symbol ABCDEF10 and a threshold of 10</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of symbol ｟ABCDEF10｠ and a threshold of ｟10｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>I want to show that parameter values are correctly delimited, but not in the table parameter</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders: 
|name | rank   |
|joe  | topdog |</string>
              <string>And a stock of symbol topdog and a threshold of 10</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the traders: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given the traders: 
|name | rank   |
|joe  | topdog |</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given the traders: 
［|name | rank   |
|joe  | topdog |］</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </successful>
              <successful>
                <step>And a stock of symbol topdog and a threshold of 10</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>And a stock of symbol ｟topdog｠ and a threshold of ｟10｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/parametrisation_by_delimited_name.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Use flexible parameters with examples table</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|client|item|
|Rui|chocolate|
|Figueira|car|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>client</string>
                <string>item</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>client</string>
                    <string>Rui</string>
                  </entry>
                  <entry>
                    <string>item</string>
                    <string>chocolate</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>client</string>
                    <string>Figueira</string>
                  </entry>
                  <entry>
                    <string>item</string>
                    <string>car</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given &lt;client&gt; is logged in</string>
              <string>And &lt;client&gt; has a cart</string>
              <string>When a &lt;item&gt; is added to the cart</string>
              <string>Then cart contains &lt;item&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>parametrisation_by_delimited_name.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Use flexible parameters with examples table</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|client|item|
|Rui|chocolate|
|Figueira|car|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>client</string>
                <string>item</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>client</string>
                    <string>Rui</string>
                  </entry>
                  <entry>
                    <string>item</string>
                    <string>chocolate</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>client</string>
                    <string>Figueira</string>
                  </entry>
                  <entry>
                    <string>item</string>
                    <string>car</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given &lt;client&gt; is logged in</string>
              <string>And &lt;client&gt; has a cart</string>
              <string>When a &lt;item&gt; is added to the cart</string>
              <string>Then cart contains &lt;item&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parametrisation_by_delimited_name.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>client</string>
                  <string>Rui</string>
                </entry>
                <entry>
                  <string>item</string>
                  <string>chocolate</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches/>
                <results>
                  <pending>
                    <step>Given &lt;client&gt; is logged in</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Given &lt;client&gt; is logged in</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>5ef67851-e26e-4693-9c8a-d0acf3dcca59</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>And &lt;client&gt; has a cart</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>And &lt;client&gt; has a cart</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>03e7ef8b-3d42-48b1-8aa6-a59e2f81a80a</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>When a &lt;item&gt; is added to the cart</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>When a &lt;item&gt; is added to the cart</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>9db6813f-ac29-43dc-aa91-c5ca589a2bf7</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>Then cart contains &lt;item&gt;</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Then cart contains &lt;item&gt;</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>fa91ca72-3132-47c1-878c-85cb5ad42523</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>client</string>
                  <string>Figueira</string>
                </entry>
                <entry>
                  <string>item</string>
                  <string>car</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches/>
                <results>
                  <pending>
                    <step>Given &lt;client&gt; is logged in</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Given &lt;client&gt; is logged in</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>7a390f4d-5cc9-4a8d-ae21-38b7c17ffff0</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>And &lt;client&gt; has a cart</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>And &lt;client&gt; has a cart</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>b73a1962-3262-4b08-b862-321eadb249f1</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>When a &lt;item&gt; is added to the cart</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>When a &lt;item&gt; is added to the cart</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>7dbd694e-1412-4d7f-a12f-7f0fdf5df6be</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <pending>
                    <step>Then cart contains &lt;item&gt;</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Then cart contains &lt;item&gt;</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>b895eff3-660a-45db-bacf-a185a86da9c7</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/parametrised.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="theme" value="parametrisation"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the asset class &lt;assetClass&gt;</string>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>parametrised.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the asset class &lt;assetClass&gt;</string>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the asset class %assetClass</annotatedPattern>
                <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given the asset class &lt;assetClass&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given the asset class ｟&lt;assetClass&gt;｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <pending>
                <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:559)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>f95ba3ce-6ece-4999-ad01-f967484c2d60</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/parametrised_table.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|scheme| 
|scheme1| 
|scheme2|
|scheme3|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>scheme</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme1</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme2</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme3</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a parametrised table:
|name|value|
|name1|scheme|</string>
            </steps>
          </scenario>
        </scenarios>
        <name>parametrised_table.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|scheme| 
|scheme1| 
|scheme2|
|scheme3|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>scheme</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme1</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme2</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme3</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a parametrised table:
|name|value|
|name1|scheme|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parametrised_table.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>scheme</string>
                  <string>scheme1</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches/>
                <results>
                  <pending>
                    <step>Given a parametrised table:
|name|value|
|name1|scheme|</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Given a parametrised table:
|name|value|
|name1|scheme|</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>af15406f-9c6e-4b77-bb35-f858c36474b6</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>scheme</string>
                  <string>scheme2</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches/>
                <results>
                  <pending>
                    <step>Given a parametrised table:
|name|value|
|name1|scheme|</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Given a parametrised table:
|name|value|
|name1|scheme|</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>22b4130e-577e-4be8-8e3d-b8b2a4a028e3</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>scheme</string>
                  <string>scheme3</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches/>
                <results>
                  <pending>
                    <step>Given a parametrised table:
|name|value|
|name1|scheme|</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>Given a parametrised table:
|name|value|
|name1|scheme|</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>35a11abe-1903-4da1-ac8e-fc2270b30493</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/pending.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo>make story development easier</inOrderTo>
          <asA>Story Developer</asA>
          <iWantTo>auto-generate method stubs for pending steps annotated by @Pending</iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Show that steps that don&apos;t match methods are treated as pending and @Pending annotated method stubs are generated</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a step has not been defined</string>
              <string>And another step has not been defined</string>
              <string>When a step has not been defined</string>
              <string>Then a step has not been defined</string>
            </steps>
          </scenario>
          <scenario>
            <title>Show that steps that match methods already annotated by @Pending are treated as pending but no method stubs are generated</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a step is annotated as pending</string>
              <string>When a step is annotated as pending</string>
              <string>Then a step is annotated as pending</string>
            </steps>
          </scenario>
          <scenario>
            <title>Show that multiple And steps can be used</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I am not logged in</string>
              <string>And I have been redirected from my intended page to the login page</string>
              <string>When I log in with good credentials</string>
              <string>Then I am redirected to my intended page</string>
              <string>And I am logged in</string>
            </steps>
          </scenario>
        </scenarios>
        <name>pending.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative>In order to make story development easier
As a Story Developer
I want to auto-generate method stubs for pending steps annotated by @Pending</localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Show that steps that don&apos;t match methods are treated as pending and @Pending annotated method stubs are generated</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a step has not been defined</string>
              <string>And another step has not been defined</string>
              <string>When a step has not been defined</string>
              <string>Then a step has not been defined</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given a step has not been defined</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a step has not been defined</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>5fa25ace-a05e-48b7-bf7c-675ca0002314</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>And another step has not been defined</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>And another step has not been defined</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>f2d113eb-b521-48d7-8bc5-80df120d1328</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>When a step has not been defined</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When a step has not been defined</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>e2189668-ea26-426a-b4a4-0f3e143334c7</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>Then a step has not been defined</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then a step has not been defined</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>a4e6b515-a686-42b1-9533-09ca09905196</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>1</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Show that steps that match methods already annotated by @Pending are treated as pending but no method stubs are generated</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a step is annotated as pending</string>
              <string>When a step is annotated as pending</string>
              <string>Then a step is annotated as pending</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a step is annotated as pending</annotatedPattern>
                <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>a step is annotated as pending</annotatedPattern>
                <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>a step is annotated as pending</annotatedPattern>
                <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <pending>
                <step>Given a step is annotated as pending</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a step is annotated as pending</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>a46dffa0-d1b5-49c6-80f8-b2e3a7916428</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>When a step is annotated as pending</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When a step is annotated as pending</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>c52524d6-5dfd-4d92-8a28-338638c6016f</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>Then a step is annotated as pending</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then a step is annotated as pending</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>24eae202-6aeb-446a-91a1-f1b9afc83830</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Show that multiple And steps can be used</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I am not logged in</string>
              <string>And I have been redirected from my intended page to the login page</string>
              <string>When I log in with good credentials</string>
              <string>Then I am redirected to my intended page</string>
              <string>And I am logged in</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given I am not logged in</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given I am not logged in</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>42adfe1d-a38a-4206-b0ff-2b681bf67796</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>And I have been redirected from my intended page to the login page</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>And I have been redirected from my intended page to the login page</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>6d577997-5a57-43d2-ae3b-7ba8a8a68292</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>When I log in with good credentials</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When I log in with good credentials</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>3fc41da3-ecb9-4bd3-a458-85f1142de962</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>Then I am redirected to my intended page</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then I am redirected to my intended page</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>a7f615e1-0d73-4708-a47a-ab5b87bade68</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>And I am logged in</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>And I am logged in</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>867ec746-e065-444c-9be4-bea0718fab25</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>1</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>2</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/pending_stats.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps/>
          </scenario>
          <scenario>
            <title>A scenario with some pending steps</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I am pending</string>
            </steps>
          </scenario>
        </scenarios>
        <name>pending_stats.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps/>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/pending_stats.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>A scenario with some pending steps</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I am pending</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/pending_stats.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given I am pending</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given I am pending</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>c02dedd0-0ffa-4e96-bb95-d71b88365c4c</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>7</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>7</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/priority_matching.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario that verifies priority matching of steps, with the less-greedy pattern given higher priority</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Matching regex &quot;a step that has %param&quot;</string>
              <string>Given a step that has a parameter</string>
              <string>Then the parameter value is &quot;a parameter&quot;</string>
              <string>!-- Matching regex &quot;a step that has exactly one %param&quot;</string>
              <string>Given a step that has exactly one of the parameters</string>
              <string>Then the parameter value is &quot;of the parameters&quot;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>priority_matching.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario that verifies priority matching of steps, with the less-greedy pattern given higher priority</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Matching regex &quot;a step that has %param&quot;</string>
              <string>Given a step that has a parameter</string>
              <string>Then the parameter value is &quot;a parameter&quot;</string>
              <string>!-- Matching regex &quot;a step that has exactly one %param&quot;</string>
              <string>Given a step that has exactly one of the parameters</string>
              <string>Then the parameter value is &quot;of the parameters&quot;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/priority_matching.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a step that has %param</annotatedPattern>
                <resolvedPattern>a\s+step\s+that\s+has\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a step that has exactly one %param</annotatedPattern>
                <resolvedPattern>a\s+step\s+that\s+has\s+exactly\s+one\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the parameter value is &quot;%param&quot;</annotatedPattern>
                <resolvedPattern>the\s+parameter\s+value\s+is\s+&quot;(.*)&quot;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <ignorable>
                <step>!-- Matching regex &quot;a step that has %param&quot;</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>Given a step that has a parameter</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a step that has ｟a parameter｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the parameter value is &quot;a parameter&quot;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the parameter value is &quot;a parameter&quot;</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- Matching regex &quot;a step that has exactly one %param&quot;</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>Given a step that has exactly one of the parameters</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a step that has exactly one ｟of the parameters｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the parameter value is &quot;of the parameters&quot;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the parameter value is &quot;of the parameters&quot;</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the stock exchange &lt;stockExchange&gt;</string>
              <string>And the asset class &lt;assetClass&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>select_stock_exchange.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the stock exchange &lt;stockExchange&gt;</string>
              <string>And the asset class &lt;assetClass&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>1</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the asset class %assetClass</annotatedPattern>
                <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
                <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given the stock exchange &lt;stockExchange&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given the stock exchange ｟&lt;stockExchange&gt;｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>And the asset class &lt;assetClass&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>And the asset class ｟&lt;assetClass&gt;｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/skip_before_and_after_scenario_steps_if_given_story.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario where before and after steps are executed only once even if there is a given story</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
                  <parameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </parameters>
                  <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                  <anchor>0</anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
              <examplesTable>
                <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers>
                  <string>symbol</string>
                  <string>threshold</string>
                </headers>
                <data>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </linked-hash-map>
                </data>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>1.0</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
        </scenarios>
        <name>skip_before_and_after_scenario_steps_if_given_story.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario where before and after steps are executed only once even if there is a given story</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
                  <parameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </parameters>
                  <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                  <anchor>0</anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
              <examplesTable>
                <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers>
                  <string>symbol</string>
                  <string>threshold</string>
                </headers>
                <data>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </linked-hash-map>
                </data>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>1.0</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/skip_before_and_after_scenario_steps_if_given_story.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties>
                    <property name="theme" value="parametrisation"/>
                  </properties>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the asset class &lt;assetClass&gt;</string>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>parametrised.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the asset class &lt;assetClass&gt;</string>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the asset class %assetClass</annotatedPattern>
                        <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                      </stepMatch>
                    </matches>
                    <results>
                      <successful>
                        <step>Given the asset class &lt;assetClass&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given the asset class ｟&lt;assetClass&gt;｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given a stock of ｟STK1｠ and a ｟1.0｠</parametrisedStep>
                        <durationInMillis>1</durationInMillis>
                      </successful>
                    </results>
                  </steps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                      <skipped>
                        <step></step>
                        <type>SKIPPED</type>
                        <durationInMillis>0</durationInMillis>
                      </skipped>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                </performableScenario>
              </scenarios>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
              <timing>
                <durationInMillis>1</durationInMillis>
              </timing>
            </performableStory>
          </givenStories>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>When the stock is traded at price 1.1</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded at price ｟1.1｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the alert status is ON</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario with failed step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <scenario>
            <title>A scenario that is not executed because if followed a failed scenario</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
        </scenarios>
        <name>skip_scenarios_after_failure.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario with failed step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I fail</annotatedPattern>
                <resolvedPattern>I\s+fail</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <failed>
                <step>Then I fail</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>Then I fail</detailMessage>
                  <cause class="junit.framework.AssertionFailedError">
                    <detailMessage>I failed!</detailMessage>
                    <stackTrace>
                      <trace>junit.framework.Assert.fail(Assert.java:47)</trace>
                      <trace>org.jbehave.examples.trader.steps.SandpitSteps.doFail(SandpitSteps.java:17)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                      <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                      <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                      <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>53dde8e7-ecb6-4e4f-993e-68196f281293</uuid>
                </throwable>
                <parametrisedStep>Then I fail</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </failed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>A scenario that is not executed because if followed a failed scenario</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/step_composition.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="theme" value="parametrisation"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title>Composite steps in action.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Composite steps are identified by the @Composite method-level annotation, which is independent of the</string>
              <string>!-- @Given/@When/@Then annotations.  The @Composite is optional and complements any of the @Given/@When/@Then annotations.</string>
              <string>!-- Once the composite step is matched (via any of the supported mechanisms, e.g. normal parameters matching or a parametrised scenario),</string>
              <string>!-- if the @Composite annotation is found on the matched method, the &quot;composed&quot; steps defined in the @Composite annotations are created</string>
              <string>!-- using the parameters specified in the @Named annotations of the composite step.   In other words, the composed steps are treated</string>
              <string>!-- as a group of parametrised steps, much in the same way as the steps in a parametrised scenario.</string>
            </steps>
          </scenario>
          <scenario>
            <title>Using a composite step with normal parameter matching</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;%customer has previously bought a %product&quot;) // used in normal parameter matching</string>
              <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
              <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given Mr Jones has previously bought a ticket</string>
            </steps>
          </scenario>
          <scenario>
            <title>Using a composite step in a parameterised scenario</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|customer|product|
|Mr Jones|ticket|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>customer</string>
                <string>product</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>customer</string>
                    <string>Mr Jones</string>
                  </entry>
                  <entry>
                    <string>product</string>
                    <string>ticket</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;&lt;customer&gt; has previously bought a &lt;product&gt;&quot;) // used in parameterised scenario</string>
              <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
              <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given &lt;customer&gt; has previously bought a &lt;product&gt;</string>
            </steps>
          </scenario>
          <scenario>
            <title>Using a composite step where one of the composed steps is not found.  
The composed step not found should be reported as pending and the subsequent composed steps not performed.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;%customer returns to cart&quot;)</string>
              <string>!-- @Composite(steps = { &quot;Given step not found&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;, })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given Mr Jones returns to cart</string>
            </steps>
          </scenario>
        </scenarios>
        <name>step_composition.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Composite steps in action.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Composite steps are identified by the @Composite method-level annotation, which is independent of the</string>
              <string>!-- @Given/@When/@Then annotations.  The @Composite is optional and complements any of the @Given/@When/@Then annotations.</string>
              <string>!-- Once the composite step is matched (via any of the supported mechanisms, e.g. normal parameters matching or a parametrised scenario),</string>
              <string>!-- if the @Composite annotation is found on the matched method, the &quot;composed&quot; steps defined in the @Composite annotations are created</string>
              <string>!-- using the parameters specified in the @Named annotations of the composite step.   In other words, the composed steps are treated</string>
              <string>!-- as a group of parametrised steps, much in the same way as the steps in a parametrised scenario.</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>1</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <ignorable>
                <step>!-- Composite steps are identified by the @Composite method-level annotation, which is independent of the</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!-- @Given/@When/@Then annotations.  The @Composite is optional and complements any of the @Given/@When/@Then annotations.</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!-- Once the composite step is matched (via any of the supported mechanisms, e.g. normal parameters matching or a parametrised scenario),</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!-- if the @Composite annotation is found on the matched method, the &quot;composed&quot; steps defined in the @Composite annotations are created</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!-- using the parameters specified in the @Named annotations of the composite step.   In other words, the composed steps are treated</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!-- as a group of parametrised steps, much in the same way as the steps in a parametrised scenario.</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Using a composite step with normal parameter matching</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;%customer has previously bought a %product&quot;) // used in normal parameter matching</string>
              <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
              <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given Mr Jones has previously bought a ticket</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>%customer has previously bought a %product</annotatedPattern>
                <resolvedPattern>(.*)\s+has\s+previously\s+bought\s+a\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <ignorable>
                <step>!-- Annotated method:</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!-- @Given(&quot;%customer has previously bought a %product&quot;) // used in normal parameter matching</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <ignorable>
                <step>!-- }</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <pending>
                <step>!--
</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>!--
</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>03d6906a-29e5-43ca-8745-20cf1dd66206</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <notPerformed>
                <step>Given Mr Jones has previously bought a ticket</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Given ｟Mr Jones｠ has previously bought a ｟ticket｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Given &lt;customer&gt; is logged in</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Given ｟Mr Jones｠ is logged in</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Given &lt;customer&gt; has a cart</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Given ｟Mr Jones｠ has a cart</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>When a &lt;product&gt; is added to the cart</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>When a ｟ticket｠ is added to the cart</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
            </results>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Using a composite step in a parameterised scenario</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|customer|product|
|Mr Jones|ticket|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>customer</string>
                <string>product</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>customer</string>
                    <string>Mr Jones</string>
                  </entry>
                  <entry>
                    <string>product</string>
                    <string>ticket</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;&lt;customer&gt; has previously bought a &lt;product&gt;&quot;) // used in parameterised scenario</string>
              <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
              <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given &lt;customer&gt; has previously bought a &lt;product&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>customer</string>
                  <string>Mr Jones</string>
                </entry>
                <entry>
                  <string>product</string>
                  <string>ticket</string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>parametrisation</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>%customer has previously bought a %product</annotatedPattern>
                    <resolvedPattern>(.*)\s+has\s+previously\s+bought\s+a\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Using a composite step where one of the composed steps is not found.  
The composed step not found should be reported as pending and the subsequent composed steps not performed.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;%customer returns to cart&quot;)</string>
              <string>!-- @Composite(steps = { &quot;Given step not found&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;, })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given Mr Jones returns to cart</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>%customer returns to cart</annotatedPattern>
                <resolvedPattern>(.*)\s+returns\s+to\s+cart</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps/>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/step_monitoring.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>As a story implementer I want to monitor parametrised successful step - before and after execution</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a successful step</string>
              <string>Then following step should be performed</string>
            </steps>
          </scenario>
          <scenario>
            <title>As a story implementer I want to monitor parametrized failing step - before and after execution</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a failing step</string>
              <string>Then following step should not be performed</string>
            </steps>
          </scenario>
        </scenarios>
        <name>step_monitoring.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>As a story implementer I want to monitor parametrised successful step - before and after execution</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a successful step</string>
              <string>Then following step should be performed</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_monitoring.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given a successful step</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a successful step</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>0667fa1f-6e00-4b09-b7cc-b5d32abafde5</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>Then following step should be performed</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then following step should be performed</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>3e2de5f1-153d-430d-bdd1-29524b2246ff</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>As a story implementer I want to monitor parametrized failing step - before and after execution</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a failing step</string>
              <string>Then following step should not be performed</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_monitoring.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given a failing step</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a failing step</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>156ba18a-8663-495d-a18d-3ee5b564386b</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>Then following step should not be performed</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then following step should not be performed</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>8544efec-49c6-41fc-818e-b84263edce0a</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/step_nested_composition.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Composite nested steps in action.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Then all buttons are enabled</string>
            </steps>
          </scenario>
        </scenarios>
        <name>step_nested_composition.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Composite nested steps in action.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Then all buttons are enabled</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_nested_composition.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Then all buttons are enabled</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then all buttons are enabled</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>81f382d5-0ad3-4f8f-8376-b5bb7af251f9</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
        <description>
          <descriptionAsString>Trader is alerted of status</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo>ensure a quick response</inOrderTo>
          <asA>trader</asA>
          <iWantTo>monitor stock prices</iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
              <string>When the stock is traded at price 5.0</string>
              <string>Then the alert status is OFF</string>
              <string>When the stock is sold at price 11.0</string>
              <string>Then the alert status is OFF</string>
              <string>When the stock is sold at price 16.0</string>
              <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
              <string>Then the alert status is ON</string>
              <string>Then the alert status is currently ON</string>
            </steps>
          </scenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>16.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
              <string>When the stock is traded with &lt;price&gt;</string>
              <string>Then the trader is alerted with &lt;status&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>trader_is_alerted_of_status.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative>In order to ensure a quick response
As a trader
I want to monitor stock prices</localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
              <string>When the stock is traded at price 5.0</string>
              <string>Then the alert status is OFF</string>
              <string>When the stock is sold at price 11.0</string>
              <string>Then the alert status is OFF</string>
              <string>When the stock is sold at price 16.0</string>
              <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
              <string>Then the alert status is ON</string>
              <string>Then the alert status is currently ON</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is sold at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+sold\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is currently %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+currently\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a stock of symbol STK1 and a threshold of 15.0</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟15.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded at price 5.0</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded at price ｟5.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the alert status is OFF</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is sold at price 11.0</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is sold at price ｟11.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the alert status is OFF</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is sold at price 16.0</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is sold at price ｟16.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>Then the alert status is ON</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the alert status is currently ON</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the alert status is currently ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>16.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
              <string>When the stock is traded with &lt;price&gt;</string>
              <string>Then the trader is alerted with &lt;status&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>5.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>OFF</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is traded with &lt;price&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is traded with ｟5.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the trader is alerted with &lt;status&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>11.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>OFF</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                    <durationInMillis>1</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is traded with &lt;price&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is traded with ｟11.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the trader is alerted with &lt;status&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>16.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>ON</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is traded with &lt;price&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is traded with ｟16.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the trader is alerted with &lt;status&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the trader is alerted with ｟ON｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>2</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/trader_sells_all_stocks.story</path>
        <description>
          <descriptionAsString>Story: Any free-text description can go here (and Story: is also optional)</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo>cut my losses</inOrderTo>
          <asA>Trader</asA>
          <iWantTo>sell all stocks when alerted</iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Trader sells it all and goes to Bermuda.
This scenario shows that the same step pattern can be used for different step types</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
          <scenario>
            <title>Trader counts the days to go to Bermuda.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a date of 2010-06-21</string>
              <string>When 2 days pass</string>
              <string>Then the date is 2010-06-23</string>
            </steps>
          </scenario>
        </scenarios>
        <name>trader_sells_all_stocks.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative>In order to cut my losses
As a Trader
I want to sell all stocks when alerted</localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Trader sells it all and goes to Bermuda.
This scenario shows that the same step pattern can be used for different step types</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/trader_sells_all_stocks.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
                <description>
                  <descriptionAsString>Trader is alerted of status</descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo>ensure a quick response</inOrderTo>
                  <asA>trader</asA>
                  <iWantTo>monitor stock prices</iWantTo>
                </narrative>
                <meta>
                  <properties/>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
                      <string>When the stock is traded at price 5.0</string>
                      <string>Then the alert status is OFF</string>
                      <string>When the stock is sold at price 11.0</string>
                      <string>Then the alert status is OFF</string>
                      <string>When the stock is sold at price 16.0</string>
                      <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
                      <string>Then the alert status is ON</string>
                      <string>Then the alert status is currently ON</string>
                    </steps>
                  </scenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers>
                        <string>symbol</string>
                        <string>threshold</string>
                        <string>price</string>
                        <string>status</string>
                      </headers>
                      <data>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>5.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>OFF</string>
                          </entry>
                        </linked-hash-map>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>11.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>OFF</string>
                          </entry>
                        </linked-hash-map>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>16.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>ON</string>
                          </entry>
                        </linked-hash-map>
                      </data>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                      <string>When the stock is traded with &lt;price&gt;</string>
                      <string>Then the trader is alerted with &lt;status&gt;</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>trader_is_alerted_of_status.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative>In order to ensure a quick response
As a trader
I want to monitor stock prices</localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
                      <string>When the stock is traded at price 5.0</string>
                      <string>Then the alert status is OFF</string>
                      <string>When the stock is sold at price 11.0</string>
                      <string>Then the alert status is OFF</string>
                      <string>When the stock is sold at price 16.0</string>
                      <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
                      <string>Then the alert status is ON</string>
                      <string>Then the alert status is currently ON</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>WHEN</type>
                        <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>the alert status is %status</annotatedPattern>
                        <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>WHEN</type>
                        <annotatedPattern>the stock is sold at price %price</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+is\s+sold\s+at\s+price\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>the alert status is currently %status</annotatedPattern>
                        <resolvedPattern>the\s+alert\s+status\s+is\s+currently\s+(.*)</resolvedPattern>
                      </stepMatch>
                    </matches>
                    <results>
                      <successful>
                        <step>Given a stock of symbol STK1 and a threshold of 15.0</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟15.0｠</parametrisedStep>
                        <durationInMillis>1</durationInMillis>
                      </successful>
                      <successful>
                        <step>When the stock is traded at price 5.0</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>When the stock is traded at price ｟5.0｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>Then the alert status is OFF</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Then the alert status is ｟OFF｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>When the stock is sold at price 11.0</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>When the stock is sold at price ｟11.0｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>Then the alert status is OFF</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Then the alert status is ｟OFF｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>When the stock is sold at price 16.0</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>When the stock is sold at price ｟16.0｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <ignorable>
                        <step>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</step>
                        <type>IGNORABLE</type>
                        <durationInMillis>0</durationInMillis>
                      </ignorable>
                      <successful>
                        <step>Then the alert status is ON</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>Then the alert status is currently ON</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Then the alert status is currently ｟ON｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                    </results>
                  </steps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                      <skipped>
                        <step></step>
                        <type>SKIPPED</type>
                        <durationInMillis>0</durationInMillis>
                      </skipped>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                </performableScenario>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers>
                        <string>symbol</string>
                        <string>threshold</string>
                        <string>price</string>
                        <string>status</string>
                      </headers>
                      <data>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>5.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>OFF</string>
                          </entry>
                        </linked-hash-map>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>11.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>OFF</string>
                          </entry>
                        </linked-hash-map>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>16.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>ON</string>
                          </entry>
                        </linked-hash-map>
                      </data>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                      <string>When the stock is traded with &lt;price&gt;</string>
                      <string>Then the trader is alerted with &lt;status&gt;</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios>
                    <performableExample>
                      <exampleParameters class="linked-hash-map">
                        <entry>
                          <string>symbol</string>
                          <string>STK1</string>
                        </entry>
                        <entry>
                          <string>threshold</string>
                          <string>15.0</string>
                        </entry>
                        <entry>
                          <string>price</string>
                          <string>5.0</string>
                        </entry>
                        <entry>
                          <string>status</string>
                          <string>OFF</string>
                        </entry>
                      </exampleParameters>
                      <performableGivenStories/>
                      <beforeSteps>
                        <results>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                        </results>
                      </beforeSteps>
                      <steps>
                        <matches>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                            <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>WHEN</type>
                            <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                            <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>THEN</type>
                            <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                            <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                          </stepMatch>
                        </matches>
                        <results>
                          <successful>
                            <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                            <durationInMillis>1</durationInMillis>
                          </successful>
                          <successful>
                            <step>When the stock is traded with &lt;price&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>When the stock is traded with ｟5.0｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                          <successful>
                            <step>Then the trader is alerted with &lt;status&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                        </results>
                      </steps>
                      <afterSteps>
                        <results>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                        </results>
                      </afterSteps>
                    </performableExample>
                    <performableExample>
                      <exampleParameters class="linked-hash-map">
                        <entry>
                          <string>symbol</string>
                          <string>STK1</string>
                        </entry>
                        <entry>
                          <string>threshold</string>
                          <string>15.0</string>
                        </entry>
                        <entry>
                          <string>price</string>
                          <string>11.0</string>
                        </entry>
                        <entry>
                          <string>status</string>
                          <string>OFF</string>
                        </entry>
                      </exampleParameters>
                      <performableGivenStories/>
                      <beforeSteps>
                        <results>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                        </results>
                      </beforeSteps>
                      <steps>
                        <matches>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                            <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>WHEN</type>
                            <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                            <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>THEN</type>
                            <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                            <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                          </stepMatch>
                        </matches>
                        <results>
                          <successful>
                            <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                          <successful>
                            <step>When the stock is traded with &lt;price&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>When the stock is traded with ｟11.0｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                          <successful>
                            <step>Then the trader is alerted with &lt;status&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                        </results>
                      </steps>
                      <afterSteps>
                        <results>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                        </results>
                      </afterSteps>
                    </performableExample>
                    <performableExample>
                      <exampleParameters class="linked-hash-map">
                        <entry>
                          <string>symbol</string>
                          <string>STK1</string>
                        </entry>
                        <entry>
                          <string>threshold</string>
                          <string>15.0</string>
                        </entry>
                        <entry>
                          <string>price</string>
                          <string>16.0</string>
                        </entry>
                        <entry>
                          <string>status</string>
                          <string>ON</string>
                        </entry>
                      </exampleParameters>
                      <performableGivenStories/>
                      <beforeSteps>
                        <results>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                        </results>
                      </beforeSteps>
                      <steps>
                        <matches>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                            <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>WHEN</type>
                            <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                            <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>THEN</type>
                            <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                            <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                          </stepMatch>
                        </matches>
                        <results>
                          <successful>
                            <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                          <successful>
                            <step>When the stock is traded with &lt;price&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>When the stock is traded with ｟16.0｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                          <successful>
                            <step>Then the trader is alerted with &lt;status&gt;</step>
                            <type>SUCCESSFUL</type>
                            <parametrisedStep>Then the trader is alerted with ｟ON｠</parametrisedStep>
                            <durationInMillis>0</durationInMillis>
                          </successful>
                        </results>
                      </steps>
                      <afterSteps>
                        <results>
                          <silent>
                            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                            <type>SUCCESSFUL</type>
                            <durationInMillis>0</durationInMillis>
                          </silent>
                        </results>
                      </afterSteps>
                    </performableExample>
                  </exampleScenarios>
                  <givenStories/>
                  <beforeSteps/>
                  <steps/>
                  <afterSteps/>
                </performableScenario>
              </scenarios>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
              <timing>
                <durationInMillis>3</durationInMillis>
              </timing>
            </performableStory>
          </givenStories>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a trader of name %trader</annotatedPattern>
                <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is left with no stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the trader sells all stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given the alert status is OFF</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Given a trader of name Mauro</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a trader of name ｟Mauro｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>And the alert status is OFF</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>And the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Given a stock of symbol STK1 and a threshold of 1.5</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟1.5｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded at price 2.0</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded at price ｟2.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the alert status is ON</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the trader sells all stocks</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the trader sells all stocks</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the trader is left with no stocks</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the trader is left with no stocks</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>1</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Trader counts the days to go to Bermuda.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a date of 2010-06-21</string>
              <string>When 2 days pass</string>
              <string>Then the date is 2010-06-23</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/trader_sells_all_stocks.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a date of %date</annotatedPattern>
                <resolvedPattern>a\s+date\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the date is %date</annotatedPattern>
                <resolvedPattern>the\s+date\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>%days days pass</annotatedPattern>
                <resolvedPattern>(.*)\s+days\s+pass</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a date of 2010-06-21</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a date of ｟2010-06-21｠</parametrisedStep>
                <durationInMillis>4</durationInMillis>
              </successful>
              <successful>
                <step>When 2 days pass</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When ｟2｠ days pass</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the date is 2010-06-23</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the date is ｟2010-06-23｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>8</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/traders_can_be_subset.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Traders can be searched by name</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
              <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
              <string>!-- This is a comment, which will be ignored in the execution</string>
              <string>When traders are subset to &quot;.*y&quot; by name</string>
              <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <scenario>
            <title>Traders can be searched by name in landscape format</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
{transformer=FROM_LANDSCAPE}
|name |Larry   |Moe     |Curly   |
|rank |Stooge 1|Stooge 2|Stooge 3|</string>
              <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <scenario>
            <title>Traders search fails</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
              <string>!-- Verification fails</string>
              <string>Then the traders returned are:
|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
        </scenarios>
        <name>traders_can_be_subset.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Traders can be searched by name</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
              <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
              <string>!-- This is a comment, which will be ignored in the execution</string>
              <string>When traders are subset to &quot;.*y&quot; by name</string>
              <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>traders are subset to &quot;%regex&quot; by name</annotatedPattern>
                <resolvedPattern>traders\s+are\s+subset\s+to\s+&quot;(.*)&quot;\s+by\s+name</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the current trader activity is: %activityTable</annotatedPattern>
                <resolvedPattern>the\s+current\s+trader\s+activity\s+is:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
                <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given the trader ranks: 
［|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|］</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the current trader activity is: 
［|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |］</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- This is a comment, which will be ignored in the execution</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>When traders are subset to &quot;.*y&quot; by name</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When traders are subset to &quot;.*y&quot; by name</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <successful>
                <step>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the traders returned are:
［|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|］</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Traders can be searched by name in landscape format</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
{transformer=FROM_LANDSCAPE}
|name |Larry   |Moe     |Curly   |
|rank |Stooge 1|Stooge 2|Stooge 3|</string>
              <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the current trader activity is: %activityTable</annotatedPattern>
                <resolvedPattern>the\s+current\s+trader\s+activity\s+is:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
                <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given the trader ranks: 
{transformer=FROM_LANDSCAPE}
|name |Larry   |Moe     |Curly   |
|rank |Stooge 1|Stooge 2|Stooge 3|</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given the trader ranks: 
［{transformer=FROM_LANDSCAPE}
|name |Larry   |Moe     |Curly   |
|rank |Stooge 1|Stooge 2|Stooge 3|］</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the current trader activity is: 
［|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |］</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </successful>
              <successful>
                <step>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the traders returned are:
［|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|］</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>1</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Traders search fails</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
              <string>!-- Verification fails</string>
              <string>Then the traders returned are:
|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
                <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given the trader ranks: 
［|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|］</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <ignorable>
                <step>!-- Verification fails</step>
                <type>IGNORABLE</type>
                <durationInMillis>0</durationInMillis>
              </ignorable>
              <failed>
                <step>Then the traders returned are:
|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>Then the traders returned are:
|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|</detailMessage>
                  <cause class="org.jbehave.core.model.OutcomesTable$OutcomesFailed">
                    <stackTrace>
                      <trace>org.jbehave.core.model.OutcomesTable.verify(OutcomesTable.java:55)</trace>
                      <trace>org.jbehave.examples.trader.steps.TraderSteps.theTradersReturnedAre(TraderSteps.java:115)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                      <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                      <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                      <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                      <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                    <uuid>b982bc08-7682-4c4c-bd98-15d2ff816113</uuid>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>6e7bd25f-5330-49ec-9a7a-34d0cc33a5c6</uuid>
                </throwable>
                <parametrisedStep>Then the traders returned are:
［|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|］</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </failed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>6</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/unmatched_search_term.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Search term does match examples table header</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|ridiculousSearchTerm|&#xd;
|Hello Kitty|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>ridiculousSearchTerm</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>ridiculousSearchTerm</string>
                    <string>Hello Kitty</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given that I am on Google&apos;s Homepage</string>
              <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
              <string>Then I should see ridiculous things</string>
            </steps>
          </scenario>
          <scenario>
            <title>Search term does not match examples table header and step is marked as pending</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|ridiculoussearchterm|&#xd;
|Hello Kitty|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>ridiculoussearchterm</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>ridiculoussearchterm</string>
                    <string>Hello Kitty</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given that I am on Google&apos;s Homepage</string>
              <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
              <string>Then I should see ridiculous things</string>
            </steps>
          </scenario>
        </scenarios>
        <name>unmatched_search_term.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Search term does match examples table header</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|ridiculousSearchTerm|&#xd;
|Hello Kitty|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>ridiculousSearchTerm</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>ridiculousSearchTerm</string>
                    <string>Hello Kitty</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given that I am on Google&apos;s Homepage</string>
              <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
              <string>Then I should see ridiculous things</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/unmatched_search_term.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>ridiculousSearchTerm</string>
                  <string>Hello Kitty</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>I should see ridiculous things</annotatedPattern>
                    <resolvedPattern>I\s+should\s+see\s+ridiculous\s+things</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>that I am on Google&apos;s Homepage</annotatedPattern>
                    <resolvedPattern>that\s+I\s+am\s+on\s+Google&apos;s\s+Homepage</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</annotatedPattern>
                    <resolvedPattern>I\s+enter\s+the\s+search\s+term\s+&lt;ridiculousSearchTerm&gt;\s+and\s+proceed</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given that I am on Google&apos;s Homepage</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given that I am on Google&apos;s Homepage</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When I enter the search term ｟Hello Kitty｠ and proceed</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then I should see ridiculous things</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then I should see ridiculous things</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Search term does not match examples table header and step is marked as pending</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|ridiculoussearchterm|&#xd;
|Hello Kitty|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>ridiculoussearchterm</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>ridiculoussearchterm</string>
                    <string>Hello Kitty</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given that I am on Google&apos;s Homepage</string>
              <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
              <string>Then I should see ridiculous things</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/unmatched_search_term.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>ridiculoussearchterm</string>
                  <string>Hello Kitty</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>I should see ridiculous things</annotatedPattern>
                    <resolvedPattern>I\s+should\s+see\s+ridiculous\s+things</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>that I am on Google&apos;s Homepage</annotatedPattern>
                    <resolvedPattern>that\s+I\s+am\s+on\s+Google&apos;s\s+Homepage</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</annotatedPattern>
                    <resolvedPattern>I\s+enter\s+the\s+search\s+term\s+&lt;ridiculousSearchTerm&gt;\s+and\s+proceed</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given that I am on Google&apos;s Homepage</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given that I am on Google&apos;s Homepage</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <pending>
                    <step>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</step>
                    <type>PENDING</type>
                    <throwable class="org.jbehave.core.failures.PendingStepFound">
                      <detailMessage>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                        <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:559)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>0f9d358d-b95b-495b-b27b-6751c18d29cd</uuid>
                    </throwable>
                    <durationInMillis>0</durationInMillis>
                  </pending>
                  <notPerformed>
                    <step>Then I should see ridiculous things</step>
                    <type>NOT_PERFORMED</type>
                    <parametrisedStep>Then I should see ridiculous things</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </notPerformed>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>1</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/failing_before_after.story</path>
        <description>
          <descriptionAsString>We want to show that failures in @BeforeScenario methods will not prevent rest of scenario steps to run (marked as NOT PERFORMED).
Also, the @Before/AfterScenario, @Before/AfterStory failure messages should be displayed in the story reports, while   
the @BeforeAfterStories failures are displayed in the Before/AfterStories reports.</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
        </scenarios>
        <name>failing_before_after.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failing_before_after.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <failed>
                <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeScenario()</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method beforeScenario (annotated with @BeforeScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before scenario</detailMessage>
                  <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                    <detailMessage>Method beforeScenario (annotated with @BeforeScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before scenario</detailMessage>
                    <cause class="java.lang.RuntimeException">
                      <detailMessage>Failure before scenario</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeScenario(FailingBeforeAfterSteps.java:17)</trace>
                        <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                        <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                        <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                        <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                    </cause>
                    <stackTrace>
                      <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>465ae15d-62ac-426c-b13f-4f0027f1ac01</uuid>
                </throwable>
                <durationInMillis>2</durationInMillis>
              </failed>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a trader of name %trader</annotatedPattern>
                <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is left with no stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the trader sells all stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <notPerformed>
                <step>Given the alert status is OFF</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Given the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Given a trader of name Mauro</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Given a trader of name ｟Mauro｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>And the alert status is OFF</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>And the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Given a stock of symbol STK1 and a threshold of 1.5</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟1.5｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>When the stock is traded at price 2.0</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>When the stock is traded at price ｟2.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Then the alert status is ON</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>When the trader sells all stocks</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>When the trader sells all stocks</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Then the trader is left with no stocks</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Then the trader is left with no stocks</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <failed>
                <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterScenario()</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method afterScenario (annotated with @AfterScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after scenario</detailMessage>
                  <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                    <detailMessage>Method afterScenario (annotated with @AfterScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after scenario</detailMessage>
                    <cause class="java.lang.RuntimeException">
                      <detailMessage>Failure after scenario</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterScenario(FailingBeforeAfterSteps.java:22)</trace>
                        <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                        <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                        <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                        <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                    </cause>
                    <stackTrace>
                      <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                      <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>85789c3c-4d52-4ed8-a595-30202731f40f</uuid>
                </throwable>
                <durationInMillis>1</durationInMillis>
              </failed>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <failed>
            <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeStory()</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method beforeStory (annotated with @BeforeStory in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before story</detailMessage>
              <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                <detailMessage>Method beforeStory (annotated with @BeforeStory in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before story</detailMessage>
                <cause class="java.lang.RuntimeException">
                  <detailMessage>Failure before story</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeStory(FailingBeforeAfterSteps.java:27)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                    <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                    <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:602)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                </cause>
                <stackTrace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:602)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:602)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>91e8b4b9-324c-4a94-aceb-de804b70b6c6</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </failed>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <failed>
            <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterStory()</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method afterStory (annotated with @AfterStory in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after story</detailMessage>
              <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                <detailMessage>Method afterStory (annotated with @AfterStory in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after story</detailMessage>
                <cause class="java.lang.RuntimeException">
                  <detailMessage>Failure after story</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterStory(FailingBeforeAfterSteps.java:32)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                    <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                    <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:606)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                </cause>
                <stackTrace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:606)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:606)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>d3ea1b96-55aa-4325-966a-20498b4d2230</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </failed>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>15</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/failing_before_stories.story</path>
        <description>
          <descriptionAsString>We want to show that failures in @BeforeStories methods will mark rest of steps as NOT PERFORMED, if story and scenario state is not reset via the StoryControls</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
        </scenarios>
        <name>failing_before_stories.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failing_before_stories.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <failed>
                <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeScenario()</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method beforeScenario (annotated with @BeforeScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before scenario</detailMessage>
                  <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                    <detailMessage>Method beforeScenario (annotated with @BeforeScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before scenario</detailMessage>
                    <cause class="java.lang.RuntimeException">
                      <detailMessage>Failure before scenario</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeScenario(FailingBeforeAfterSteps.java:17)</trace>
                        <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                        <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                        <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                        <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                    </cause>
                    <stackTrace>
                      <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>6b91c260-4d05-4037-9bbb-7531bd20d8d8</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </failed>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a trader of name %trader</annotatedPattern>
                <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is left with no stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the trader sells all stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <notPerformed>
                <step>Given the alert status is OFF</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Given the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Given a trader of name Mauro</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Given a trader of name ｟Mauro｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>And the alert status is OFF</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>And the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Given a stock of symbol STK1 and a threshold of 1.5</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟1.5｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>When the stock is traded at price 2.0</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>When the stock is traded at price ｟2.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Then the alert status is ON</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>When the trader sells all stocks</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>When the trader sells all stocks</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
              <notPerformed>
                <step>Then the trader is left with no stocks</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Then the trader is left with no stocks</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <failed>
                <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterScenario()</step>
                <type>FAILED</type>
                <throwable>
                  <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method afterScenario (annotated with @AfterScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after scenario</detailMessage>
                  <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                    <detailMessage>Method afterScenario (annotated with @AfterScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after scenario</detailMessage>
                    <cause class="java.lang.RuntimeException">
                      <detailMessage>Failure after scenario</detailMessage>
                      <stackTrace>
                        <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterScenario(FailingBeforeAfterSteps.java:22)</trace>
                        <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                        <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                        <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                        <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                        <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                    </cause>
                    <stackTrace>
                      <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                      <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                      <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                      <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                      <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                      <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                      <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                      <trace>java.lang.Thread.run(Thread.java:680)</trace>
                    </stackTrace>
                  </cause>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>79a18238-0732-4643-8065-e5e322366059</uuid>
                </throwable>
                <durationInMillis>1</durationInMillis>
              </failed>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
              <skipped>
                <step></step>
                <type>SKIPPED</type>
                <durationInMillis>0</durationInMillis>
              </skipped>
            </results>
          </afterSteps>
        </performableScenario>
      </scenarios>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <failed>
            <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeStory()</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method beforeStory (annotated with @BeforeStory in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before story</detailMessage>
              <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                <detailMessage>Method beforeStory (annotated with @BeforeStory in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before story</detailMessage>
                <cause class="java.lang.RuntimeException">
                  <detailMessage>Failure before story</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeStory(FailingBeforeAfterSteps.java:27)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                    <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                    <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:602)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                </cause>
                <stackTrace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:602)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:602)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>4ef9b789-676f-487c-99fe-ff2b6b25d1ec</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </failed>
        </results>
      </beforeSteps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterStory(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.SearchSteps.killBrowser()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <failed>
            <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterStory()</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method afterStory (annotated with @AfterStory in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after story</detailMessage>
              <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                <detailMessage>Method afterStory (annotated with @AfterStory in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after story</detailMessage>
                <cause class="java.lang.RuntimeException">
                  <detailMessage>Failure after story</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterStory(FailingBeforeAfterSteps.java:32)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                    <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                    <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:606)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                </cause>
                <stackTrace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:606)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:606)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>9988728a-0b49-4361-b29a-d74e73f80ac5</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </failed>
        </results>
      </afterSteps>
      <timing>
        <durationInMillis>2</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/after_scenario_outcome.story</path>
        <description>
          <descriptionAsString>Story: Showing that @AfterScenario method are executed upon appropriate outcome (ANY, SUCCESS, FAILURE)</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Pass on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I pass</string>
            </steps>
          </scenario>
          <scenario>
            <title>Fail on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
        </scenarios>
        <name>after_scenario_outcome.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Pass on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I pass</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/after_scenario_outcome.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I pass</annotatedPattern>
                <resolvedPattern>I\s+pass</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Fail on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/after_scenario_outcome.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I fail</annotatedPattern>
                <resolvedPattern>I\s+fail</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/and_step.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo>be more communicative</inOrderTo>
          <asA>story writer</asA>
          <iWantTo>explain the use of And steps and also show that I can use keywords in scenario title and comments</iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>An initial And step should be marked as pending as there is not previous step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- What is this And of?  JBehave treats as pending</string>
              <string>And the wind blows</string>
              <string>!-- Look Ma&apos; - I can also use keywords in scenario title and step comments!</string>
            </steps>
          </scenario>
          <scenario>
            <title>And steps should match the previous step type</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the wind blows</string>
              <string>!-- This And is equivalent to another Given</string>
              <string>And the wind blows</string>
              <string>!-- This And shows that we can chain multiple And steps</string>
              <string>And the wind blows</string>
              <string>When the wind blows</string>
              <string>!-- This And is equivalent to another When</string>
              <string>And the wind blows</string>
            </steps>
          </scenario>
        </scenarios>
        <name>and_step.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative>In order to be more communicative
As a story writer
I want to explain the use of And steps and also show that I can use keywords in scenario title and comments</localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>An initial And step should be marked as pending as there is not previous step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- What is this And of?  JBehave treats as pending</string>
              <string>And the wind blows</string>
              <string>!-- Look Ma&apos; - I can also use keywords in scenario title and step comments!</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/and_step.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the wind blows</annotatedPattern>
                <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the wind blows</annotatedPattern>
                <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>And steps should match the previous step type</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the wind blows</string>
              <string>!-- This And is equivalent to another Given</string>
              <string>And the wind blows</string>
              <string>!-- This And shows that we can chain multiple And steps</string>
              <string>And the wind blows</string>
              <string>When the wind blows</string>
              <string>!-- This And is equivalent to another When</string>
              <string>And the wind blows</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/and_step.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the wind blows</annotatedPattern>
                <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the wind blows</annotatedPattern>
                <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/claims_with_null_calendar.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|date       |amount|
|none       |0.0   |
|01/06/2010 |2.15  |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>date</string>
                <string>amount</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>date</string>
                    <string>none</string>
                  </entry>
                  <entry>
                    <string>amount</string>
                    <string>0.0</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>date</string>
                    <string>01/06/2010</string>
                  </entry>
                  <entry>
                    <string>amount</string>
                    <string>2.15</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a plan with calendar date of &lt;date&gt;</string>
              <string>Then the claimant should receive an amount of &lt;amount&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>claims_with_null_calendar.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|date       |amount|
|none       |0.0   |
|01/06/2010 |2.15  |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>date</string>
                <string>amount</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>date</string>
                    <string>none</string>
                  </entry>
                  <entry>
                    <string>amount</string>
                    <string>0.0</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>date</string>
                    <string>01/06/2010</string>
                  </entry>
                  <entry>
                    <string>amount</string>
                    <string>2.15</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a plan with calendar date of &lt;date&gt;</string>
              <string>Then the claimant should receive an amount of &lt;amount&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/claims_with_null_calendar.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>date</string>
                  <string>none</string>
                </entry>
                <entry>
                  <string>amount</string>
                  <string>0.0</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a plan with calendar date of &lt;date&gt;</annotatedPattern>
                    <resolvedPattern>a\s+plan\s+with\s+calendar\s+date\s+of\s+&lt;date&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the claimant should receive an amount of &lt;amount&gt;</annotatedPattern>
                    <resolvedPattern>the\s+claimant\s+should\s+receive\s+an\s+amount\s+of\s+&lt;amount&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>date</string>
                  <string>01/06/2010</string>
                </entry>
                <entry>
                  <string>amount</string>
                  <string>2.15</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a plan with calendar date of &lt;date&gt;</annotatedPattern>
                    <resolvedPattern>a\s+plan\s+with\s+calendar\s+date\s+of\s+&lt;date&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the claimant should receive an amount of &lt;amount&gt;</annotatedPattern>
                    <resolvedPattern>the\s+claimant\s+should\s+receive\s+an\s+amount\s+of\s+&lt;amount&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- GivenStories:  ignore_me.story</string>
              <string>Given I do nothing</string>
              <string>!-- Examples: 
|I|am|just|lazy|</string>
            </steps>
          </scenario>
        </scenarios>
        <name>do_nothing.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- GivenStories:  ignore_me.story</string>
              <string>Given I do nothing</string>
              <string>!-- Examples: 
|I|am|just|lazy|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/do_nothing.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/examples_table_loaded_from_classpath.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="theme" value="parametrisation"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title>Table parameter loaded from a classpath resource</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders: org/jbehave/examples/trader/stories/traders.table</string>
              <string>!-- This is a comment, which will be ignored in the execution</string>
              <string>When traders are subset to &quot;.*y&quot; by name</string>
              <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <scenario>
            <title>Parameters table loaded from a classpath resource</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>16.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
              <string>When the stock is traded with &lt;price&gt;</string>
              <string>Then the trader is alerted with &lt;status&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>examples_table_loaded_from_classpath.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Table parameter loaded from a classpath resource</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders: org/jbehave/examples/trader/stories/traders.table</string>
              <string>!-- This is a comment, which will be ignored in the execution</string>
              <string>When traders are subset to &quot;.*y&quot; by name</string>
              <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/examples_table_loaded_from_classpath.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>traders are subset to &quot;%regex&quot; by name</annotatedPattern>
                <resolvedPattern>traders\s+are\s+subset\s+to\s+&quot;(.*)&quot;\s+by\s+name</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
                <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the traders: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Parameters table loaded from a classpath resource</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>16.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
              <string>When the stock is traded with &lt;price&gt;</string>
              <string>Then the trader is alerted with &lt;status&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/examples_table_loaded_from_classpath.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>5.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>OFF</string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>parametrisation</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>11.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>OFF</string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>parametrisation</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>16.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>ON</string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>parametrisation</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/failing_after_stories.story</path>
        <description>
          <descriptionAsString>We want to show that failures in @AfterStories methods will appear in the AfterStories report.</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
        </scenarios>
        <name>failing_after_stories.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failing_after_stories.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a trader of name %trader</annotatedPattern>
                <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is left with no stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the trader sells all stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/failure_correlation_one.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Fail on a step in story 1</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When a failure occurs in story 1</string>
            </steps>
          </scenario>
        </scenarios>
        <name>failure_correlation_one.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Fail on a step in story 1</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When a failure occurs in story 1</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failure_correlation_one.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/failure_correlation_two.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Fail on a step in story 2</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When a failure occurs in story 2</string>
            </steps>
          </scenario>
        </scenarios>
        <name>failure_correlation_two.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Fail on a step in story 2</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When a failure occurs in story 2</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failure_correlation_two.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story</path>
        <description>
          <descriptionAsString>Story: Showing that using given stories in a passing scenario following a scenario where are a failure occurred resets the overall 
build result of the story</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Fail on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <scenario>
            <title>Pass after given stories</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I pass</string>
            </steps>
          </scenario>
        </scenarios>
        <name>failure_followed_by_given_stories.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Fail on a step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I fail</annotatedPattern>
                <resolvedPattern>I\s+fail</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Pass after given stories</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I pass</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties/>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>!-- GivenStories:  ignore_me.story</string>
                      <string>Given I do nothing</string>
                      <string>!-- Examples: 
|I|am|just|lazy|</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>do_nothing.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>!-- GivenStories:  ignore_me.story</string>
                      <string>Given I do nothing</string>
                      <string>!-- Examples: 
|I|am|just|lazy|</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/do_nothing.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps/>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>I do nothing</annotatedPattern>
                        <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
                      </stepMatch>
                    </matches>
                  </steps>
                  <afterSteps/>
                </performableScenario>
              </scenarios>
              <beforeSteps/>
              <afterSteps/>
              <timing>
                <durationInMillis>0</durationInMillis>
              </timing>
            </performableStory>
          </givenStories>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I pass</annotatedPattern>
                <resolvedPattern>I\s+pass</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/given_non_successful.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario that depends on a non successful story</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/non_successful.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders:
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
        </scenarios>
        <name>given_non_successful.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario that depends on a non successful story</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/non_successful.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders:
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/given_non_successful.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/non_successful.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties/>
                </meta>
                <scenarios>
                  <scenario>
                    <title>A scenario with failed step</title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Then I fail</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>non_successful.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title>A scenario with failed step</title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Then I fail</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/non_successful.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps/>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>I fail</annotatedPattern>
                        <resolvedPattern>I\s+fail</resolvedPattern>
                      </stepMatch>
                    </matches>
                  </steps>
                  <afterSteps/>
                </performableScenario>
              </scenarios>
              <beforeSteps/>
              <afterSteps/>
              <timing>
                <durationInMillis>0</durationInMillis>
              </timing>
            </performableStory>
          </givenStories>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the traders: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/given_stories_parametrised_by_anchor.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario that depends on a given story with parameters specified as anchor pointing to specific examples row. 
The presence of the anchor implies that the scenario is executed normally and not parametrised by examples, i.e. that the scenario is not executed for each examples row.</title>
            <meta>
              <properties>
                <property name="theme" value="parametrisation"/>
                <property name="assetClass" value="FX"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
                  <parameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </parameters>
                  <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                  <anchor>0</anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
              <examplesTable>
                <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers>
                  <string>symbol</string>
                  <string>threshold</string>
                </headers>
                <data>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </linked-hash-map>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK2</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>2.0</string>
                    </entry>
                  </linked-hash-map>
                </data>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>1.0</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK2</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>2.0</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
        </scenarios>
        <name>given_stories_parametrised_by_anchor.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario that depends on a given story with parameters specified as anchor pointing to specific examples row. 
The presence of the anchor implies that the scenario is executed normally and not parametrised by examples, i.e. that the scenario is not executed for each examples row.</title>
            <meta>
              <properties>
                <property name="theme" value="parametrisation"/>
                <property name="assetClass" value="FX"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
                  <parameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </parameters>
                  <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                  <anchor>0</anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
              <examplesTable>
                <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers>
                  <string>symbol</string>
                  <string>threshold</string>
                </headers>
                <data>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </linked-hash-map>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK2</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>2.0</string>
                    </entry>
                  </linked-hash-map>
                </data>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>1.0</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK2</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>2.0</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_anchor.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties>
                    <property name="theme" value="parametrisation"/>
                  </properties>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the asset class &lt;assetClass&gt;</string>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>parametrised.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the asset class &lt;assetClass&gt;</string>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps/>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the asset class %assetClass</annotatedPattern>
                        <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                      </stepMatch>
                    </matches>
                  </steps>
                  <afterSteps/>
                </performableScenario>
              </scenarios>
              <beforeSteps/>
              <afterSteps/>
              <timing>
                <durationInMillis>0</durationInMillis>
              </timing>
            </performableStory>
          </givenStories>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/given_stories_parametrised_by_examples.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario that depends on given stories parametrised by examples. 
Here the entire scenario is parametrised by examples, i.e. the scenario is executed for each examples row.</title>
            <meta>
              <properties>
                <property name="assetClass" value="FX"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|stockExchange|symbol|threshold|price|status|
|NASDAQ|STK1|10.0|5.0|OFF|
|FTSE|STK1|10.0|11.0|ON|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>stockExchange</string>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>stockExchange</string>
                    <string>NASDAQ</string>
                  </entry>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>10.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>assetClass</string>
                    <string>FX</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>stockExchange</string>
                    <string>FTSE</string>
                  </entry>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>10.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                  <entry>
                    <string>assetClass</string>
                    <string>FX</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol &lt;symbol&gt; and a threshold of &lt;threshold&gt;</string>
              <string>When the stock is traded at price &lt;price&gt;</string>
              <string>Then the alert status is &lt;status&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>given_stories_parametrised_by_examples.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario that depends on given stories parametrised by examples. 
Here the entire scenario is parametrised by examples, i.e. the scenario is executed for each examples row.</title>
            <meta>
              <properties>
                <property name="assetClass" value="FX"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|stockExchange|symbol|threshold|price|status|
|NASDAQ|STK1|10.0|5.0|OFF|
|FTSE|STK1|10.0|11.0|ON|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>stockExchange</string>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>stockExchange</string>
                    <string>NASDAQ</string>
                  </entry>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>10.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                  <entry>
                    <string>assetClass</string>
                    <string>FX</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>stockExchange</string>
                    <string>FTSE</string>
                  </entry>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>10.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                  <entry>
                    <string>assetClass</string>
                    <string>FX</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol &lt;symbol&gt; and a threshold of &lt;threshold&gt;</string>
              <string>When the stock is traded at price &lt;price&gt;</string>
              <string>Then the alert status is &lt;status&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_examples.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>stockExchange</string>
                  <string>NASDAQ</string>
                </entry>
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>10.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>5.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>OFF</string>
                </entry>
                <entry>
                  <string>assetClass</string>
                  <string>FX</string>
                </entry>
              </exampleParameters>
              <performableGivenStories>
                <performableStory>
                  <story>
                    <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                    <description>
                      <descriptionAsString></descriptionAsString>
                    </description>
                    <narrative>
                      <inOrderTo></inOrderTo>
                      <asA></asA>
                      <iWantTo></iWantTo>
                    </narrative>
                    <meta>
                      <properties/>
                    </meta>
                    <scenarios>
                      <scenario>
                        <title></title>
                        <meta>
                          <properties/>
                        </meta>
                        <givenStories>
                          <givenStories/>
                          <givenStoriesAsString></givenStoriesAsString>
                          <examplesTable>
                            <tableAsString></tableAsString>
                            <headerSeparator>|</headerSeparator>
                            <valueSeparator>|</valueSeparator>
                            <ignorableSeparator>|--</ignorableSeparator>
                            <tableTransformers>
                              <transformers>
                                <entry>
                                  <string>FROM_LANDSCAPE</string>
                                  <fromLandscape/>
                                </entry>
                              </transformers>
                            </tableTransformers>
                            <headers/>
                            <data/>
                            <properties>
                              <property name="headerSeparator" value="|"/>
                              <property name="valueSeparator" value="|"/>
                              <property name="ignorableSeparator" value="|--"/>
                            </properties>
                            <propertiesAsString></propertiesAsString>
                            <namedParameters/>
                            <trim>true</trim>
                          </examplesTable>
                        </givenStories>
                        <examplesTable>
                          <tableAsString></tableAsString>
                          <headerSeparator>|</headerSeparator>
                          <valueSeparator>|</valueSeparator>
                          <ignorableSeparator>|--</ignorableSeparator>
                          <tableTransformers>
                            <transformers>
                              <entry>
                                <string>FROM_LANDSCAPE</string>
                                <fromLandscape/>
                              </entry>
                            </transformers>
                          </tableTransformers>
                          <headers/>
                          <data/>
                          <properties>
                            <property name="headerSeparator" value="|"/>
                            <property name="valueSeparator" value="|"/>
                            <property name="ignorableSeparator" value="|--"/>
                          </properties>
                          <propertiesAsString></propertiesAsString>
                          <namedParameters/>
                          <trim>true</trim>
                        </examplesTable>
                        <steps>
                          <string>Given the stock exchange &lt;stockExchange&gt;</string>
                          <string>And the asset class &lt;assetClass&gt;</string>
                        </steps>
                      </scenario>
                    </scenarios>
                    <name>select_stock_exchange.story</name>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                  </story>
                  <localizedNarrative></localizedNarrative>
                  <allowed>true</allowed>
                  <givenStories/>
                  <scenarios>
                    <performableScenario>
                      <scenario>
                        <title></title>
                        <meta>
                          <properties/>
                        </meta>
                        <givenStories>
                          <givenStories/>
                          <givenStoriesAsString></givenStoriesAsString>
                          <examplesTable>
                            <tableAsString></tableAsString>
                            <headerSeparator>|</headerSeparator>
                            <valueSeparator>|</valueSeparator>
                            <ignorableSeparator>|--</ignorableSeparator>
                            <tableTransformers>
                              <transformers>
                                <entry>
                                  <string>FROM_LANDSCAPE</string>
                                  <fromLandscape/>
                                </entry>
                              </transformers>
                            </tableTransformers>
                            <headers/>
                            <data/>
                            <properties>
                              <property name="headerSeparator" value="|"/>
                              <property name="valueSeparator" value="|"/>
                              <property name="ignorableSeparator" value="|--"/>
                            </properties>
                            <propertiesAsString></propertiesAsString>
                            <namedParameters/>
                            <trim>true</trim>
                          </examplesTable>
                        </givenStories>
                        <examplesTable>
                          <tableAsString></tableAsString>
                          <headerSeparator>|</headerSeparator>
                          <valueSeparator>|</valueSeparator>
                          <ignorableSeparator>|--</ignorableSeparator>
                          <tableTransformers>
                            <transformers>
                              <entry>
                                <string>FROM_LANDSCAPE</string>
                                <fromLandscape/>
                              </entry>
                            </transformers>
                          </tableTransformers>
                          <headers/>
                          <data/>
                          <properties>
                            <property name="headerSeparator" value="|"/>
                            <property name="valueSeparator" value="|"/>
                            <property name="ignorableSeparator" value="|--"/>
                          </properties>
                          <propertiesAsString></propertiesAsString>
                          <namedParameters/>
                          <trim>true</trim>
                        </examplesTable>
                        <steps>
                          <string>Given the stock exchange &lt;stockExchange&gt;</string>
                          <string>And the asset class &lt;assetClass&gt;</string>
                        </steps>
                      </scenario>
                      <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
                      <allowed>true</allowed>
                      <exampleScenarios/>
                      <givenStories/>
                      <beforeSteps/>
                      <steps>
                        <matches>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>the asset class %assetClass</annotatedPattern>
                            <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
                            <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
                          </stepMatch>
                        </matches>
                      </steps>
                      <afterSteps/>
                    </performableScenario>
                  </scenarios>
                  <beforeSteps/>
                  <afterSteps/>
                  <timing>
                    <durationInMillis>0</durationInMillis>
                  </timing>
                </performableStory>
              </performableGivenStories>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the alert status is %status</annotatedPattern>
                    <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>stockExchange</string>
                  <string>FTSE</string>
                </entry>
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>10.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>11.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>ON</string>
                </entry>
                <entry>
                  <string>assetClass</string>
                  <string>FX</string>
                </entry>
              </exampleParameters>
              <performableGivenStories>
                <performableStory>
                  <story>
                    <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                    <description>
                      <descriptionAsString></descriptionAsString>
                    </description>
                    <narrative>
                      <inOrderTo></inOrderTo>
                      <asA></asA>
                      <iWantTo></iWantTo>
                    </narrative>
                    <meta>
                      <properties/>
                    </meta>
                    <scenarios>
                      <scenario>
                        <title></title>
                        <meta>
                          <properties/>
                        </meta>
                        <givenStories>
                          <givenStories/>
                          <givenStoriesAsString></givenStoriesAsString>
                          <examplesTable>
                            <tableAsString></tableAsString>
                            <headerSeparator>|</headerSeparator>
                            <valueSeparator>|</valueSeparator>
                            <ignorableSeparator>|--</ignorableSeparator>
                            <tableTransformers>
                              <transformers>
                                <entry>
                                  <string>FROM_LANDSCAPE</string>
                                  <fromLandscape/>
                                </entry>
                              </transformers>
                            </tableTransformers>
                            <headers/>
                            <data/>
                            <properties>
                              <property name="headerSeparator" value="|"/>
                              <property name="valueSeparator" value="|"/>
                              <property name="ignorableSeparator" value="|--"/>
                            </properties>
                            <propertiesAsString></propertiesAsString>
                            <namedParameters/>
                            <trim>true</trim>
                          </examplesTable>
                        </givenStories>
                        <examplesTable>
                          <tableAsString></tableAsString>
                          <headerSeparator>|</headerSeparator>
                          <valueSeparator>|</valueSeparator>
                          <ignorableSeparator>|--</ignorableSeparator>
                          <tableTransformers>
                            <transformers>
                              <entry>
                                <string>FROM_LANDSCAPE</string>
                                <fromLandscape/>
                              </entry>
                            </transformers>
                          </tableTransformers>
                          <headers/>
                          <data/>
                          <properties>
                            <property name="headerSeparator" value="|"/>
                            <property name="valueSeparator" value="|"/>
                            <property name="ignorableSeparator" value="|--"/>
                          </properties>
                          <propertiesAsString></propertiesAsString>
                          <namedParameters/>
                          <trim>true</trim>
                        </examplesTable>
                        <steps>
                          <string>Given the stock exchange &lt;stockExchange&gt;</string>
                          <string>And the asset class &lt;assetClass&gt;</string>
                        </steps>
                      </scenario>
                    </scenarios>
                    <name>select_stock_exchange.story</name>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                  </story>
                  <localizedNarrative></localizedNarrative>
                  <allowed>true</allowed>
                  <givenStories/>
                  <scenarios>
                    <performableScenario>
                      <scenario>
                        <title></title>
                        <meta>
                          <properties/>
                        </meta>
                        <givenStories>
                          <givenStories/>
                          <givenStoriesAsString></givenStoriesAsString>
                          <examplesTable>
                            <tableAsString></tableAsString>
                            <headerSeparator>|</headerSeparator>
                            <valueSeparator>|</valueSeparator>
                            <ignorableSeparator>|--</ignorableSeparator>
                            <tableTransformers>
                              <transformers>
                                <entry>
                                  <string>FROM_LANDSCAPE</string>
                                  <fromLandscape/>
                                </entry>
                              </transformers>
                            </tableTransformers>
                            <headers/>
                            <data/>
                            <properties>
                              <property name="headerSeparator" value="|"/>
                              <property name="valueSeparator" value="|"/>
                              <property name="ignorableSeparator" value="|--"/>
                            </properties>
                            <propertiesAsString></propertiesAsString>
                            <namedParameters/>
                            <trim>true</trim>
                          </examplesTable>
                        </givenStories>
                        <examplesTable>
                          <tableAsString></tableAsString>
                          <headerSeparator>|</headerSeparator>
                          <valueSeparator>|</valueSeparator>
                          <ignorableSeparator>|--</ignorableSeparator>
                          <tableTransformers>
                            <transformers>
                              <entry>
                                <string>FROM_LANDSCAPE</string>
                                <fromLandscape/>
                              </entry>
                            </transformers>
                          </tableTransformers>
                          <headers/>
                          <data/>
                          <properties>
                            <property name="headerSeparator" value="|"/>
                            <property name="valueSeparator" value="|"/>
                            <property name="ignorableSeparator" value="|--"/>
                          </properties>
                          <propertiesAsString></propertiesAsString>
                          <namedParameters/>
                          <trim>true</trim>
                        </examplesTable>
                        <steps>
                          <string>Given the stock exchange &lt;stockExchange&gt;</string>
                          <string>And the asset class &lt;assetClass&gt;</string>
                        </steps>
                      </scenario>
                      <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
                      <allowed>true</allowed>
                      <exampleScenarios/>
                      <givenStories/>
                      <beforeSteps/>
                      <steps>
                        <matches>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>the asset class %assetClass</annotatedPattern>
                            <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
                            <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
                          </stepMatch>
                        </matches>
                      </steps>
                      <afterSteps/>
                    </performableScenario>
                  </scenarios>
                  <beforeSteps/>
                  <afterSteps/>
                  <timing>
                    <durationInMillis>0</durationInMillis>
                  </timing>
                </performableStory>
              </performableGivenStories>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the alert status is %status</annotatedPattern>
                    <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/given_stories_parametrised_by_meta.story</path>
        <description>
          <descriptionAsString>A story using GivenStories at story level parametrised by meta properties</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="threshold" value="1.0"/>
            <property name="symbol" value="STK1"/>
            <property name="theme" value="parametrisation"/>
            <property name="assetClass" value="FX"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario that is executed after the given stories parametrised by meta</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
        </scenarios>
        <name>given_stories_parametrised_by_meta.story</name>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story</givenStoryAsString>
              <parameters/>
              <path>org/jbehave/examples/trader/stories/parametrised.story</path>
              <anchor></anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story</givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/parametrised.story</path>
            <description>
              <descriptionAsString></descriptionAsString>
            </description>
            <narrative>
              <inOrderTo></inOrderTo>
              <asA></asA>
              <iWantTo></iWantTo>
            </narrative>
            <meta>
              <properties>
                <property name="theme" value="parametrisation"/>
              </properties>
            </meta>
            <scenarios>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
            </scenarios>
            <name>parametrised.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative></localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>the asset class %assetClass</annotatedPattern>
                    <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableScenario>
          </scenarios>
          <beforeSteps/>
          <afterSteps/>
          <timing>
            <durationInMillis>0</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario that is executed after the given stories parametrised by meta</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_meta.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/meta_filtering.story</path>
        <description>
          <descriptionAsString>A story description
over multiple lines</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="author" value="Mauro"/>
            <property name="theme" value="filtering"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario to be skipped
and not executed</title>
            <meta>
              <properties>
                <property name="skip" value=""/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <scenario>
            <title>A scenario with an author</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <scenario>
            <title>A scenario with examples whose rows can be filtered on meta</title>
            <meta>
              <properties>
                <property name="run" value=""/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|Meta:|Parameter|
|@run yes|value|
|@run not|value|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>Meta:</string>
                <string>Parameter</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>Meta:</string>
                    <string>@run yes</string>
                  </entry>
                  <entry>
                    <string>Parameter</string>
                    <string>value</string>
                  </entry>
                  <entry>
                    <string>author</string>
                    <string>Mauro</string>
                  </entry>
                  <entry>
                    <string>run</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>filtering</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>Meta:</string>
                    <string>@run not</string>
                  </entry>
                  <entry>
                    <string>Parameter</string>
                    <string>value</string>
                  </entry>
                  <entry>
                    <string>author</string>
                    <string>Mauro</string>
                  </entry>
                  <entry>
                    <string>run</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>filtering</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
        </scenarios>
        <name>meta_filtering.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario to be skipped
and not executed</title>
            <meta>
              <properties>
                <property name="skip" value=""/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>A scenario with an author</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>A scenario with examples whose rows can be filtered on meta</title>
            <meta>
              <properties>
                <property name="run" value=""/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|Meta:|Parameter|
|@run yes|value|
|@run not|value|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>Meta:</string>
                <string>Parameter</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>Meta:</string>
                    <string>@run yes</string>
                  </entry>
                  <entry>
                    <string>Parameter</string>
                    <string>value</string>
                  </entry>
                  <entry>
                    <string>author</string>
                    <string>Mauro</string>
                  </entry>
                  <entry>
                    <string>run</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>filtering</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>Meta:</string>
                    <string>@run not</string>
                  </entry>
                  <entry>
                    <string>Parameter</string>
                    <string>value</string>
                  </entry>
                  <entry>
                    <string>author</string>
                    <string>Mauro</string>
                  </entry>
                  <entry>
                    <string>run</string>
                    <string></string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>filtering</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>Meta:</string>
                  <string>@run yes</string>
                </entry>
                <entry>
                  <string>Parameter</string>
                  <string>value</string>
                </entry>
                <entry>
                  <string>author</string>
                  <string>Mauro</string>
                </entry>
                <entry>
                  <string>run</string>
                  <string></string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>filtering</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>I do nothing</annotatedPattern>
                    <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>Meta:</string>
                  <string>@run not</string>
                </entry>
                <entry>
                  <string>Parameter</string>
                  <string>value</string>
                </entry>
                <entry>
                  <string>author</string>
                  <string>Mauro</string>
                </entry>
                <entry>
                  <string>run</string>
                  <string></string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>filtering</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>I do nothing</annotatedPattern>
                    <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/meta_parametrisation.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="theme" value="parameters"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title>scenario with explicitly mentioned meta params</title>
            <meta>
              <properties>
                <property name="variant" value="named"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I have specified the &lt;theme&gt;</string>
              <string>And a &lt;variant&gt;</string>
              <string>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</string>
            </steps>
          </scenario>
          <scenario>
            <title>scenario with hidden meta params</title>
            <meta>
              <properties>
                <property name="variant" value="foo"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I have some step that implicitly requires meta params</string>
              <string>Then the theme is &apos;parameters&apos; with variant &apos;foo&apos;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>meta_parametrisation.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>scenario with explicitly mentioned meta params</title>
            <meta>
              <properties>
                <property name="variant" value="named"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I have specified the &lt;theme&gt;</string>
              <string>And a &lt;variant&gt;</string>
              <string>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/meta_parametrisation.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a &lt;variant&gt;</annotatedPattern>
                <resolvedPattern>a\s+&lt;variant&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the theme is &apos;%theme&apos; with variant &apos;%variant&apos;</annotatedPattern>
                <resolvedPattern>the\s+theme\s+is\s+&apos;(.*)&apos;\s+with\s+variant\s+&apos;(.*)&apos;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I have specified the &lt;theme&gt;</annotatedPattern>
                <resolvedPattern>I\s+have\s+specified\s+the\s+&lt;theme&gt;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>scenario with hidden meta params</title>
            <meta>
              <properties>
                <property name="variant" value="foo"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I have some step that implicitly requires meta params</string>
              <string>Then the theme is &apos;parameters&apos; with variant &apos;foo&apos;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/meta_parametrisation.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I have some step that implicitly requires meta params</annotatedPattern>
                <resolvedPattern>I\s+have\s+some\s+step\s+that\s+implicitly\s+requires\s+meta\s+params</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the theme is &apos;%theme&apos; with variant &apos;%variant&apos;</annotatedPattern>
                <resolvedPattern>the\s+theme\s+is\s+&apos;(.*)&apos;\s+with\s+variant\s+&apos;(.*)&apos;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/named_annotations.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Supported action and/or event story</title>
            <meta>
              <properties>
                <property name="notSupportedActions" value="FIX,SCHEDULE,RESCHEDULE,DETERMINE"/>
                <property name="supportedActions" value="TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP"/>
                <property name="notSupportedEventTypes" value="DONE,FETCHED,CREATED,TESTED,FIXED"/>
                <property name="supportedEventTypes" value="NEW,FRESH,CANCELLED,AMENDED,TERMINATED"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|actionSupportability   |eventTypeSupportability|&#xd;
|supported              |supported              |&#xd;
|notSupported           |supported              |&#xd;
|supported              |notSupported           |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>actionSupportability</string>
                <string>eventTypeSupportability</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>notSupported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>notSupported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</string>
              <string>When it is received</string>
              <string>Then message is consumed without error</string>
            </steps>
          </scenario>
        </scenarios>
        <name>named_annotations.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Supported action and/or event story</title>
            <meta>
              <properties>
                <property name="notSupportedActions" value="FIX,SCHEDULE,RESCHEDULE,DETERMINE"/>
                <property name="supportedActions" value="TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP"/>
                <property name="notSupportedEventTypes" value="DONE,FETCHED,CREATED,TESTED,FIXED"/>
                <property name="supportedEventTypes" value="NEW,FRESH,CANCELLED,AMENDED,TERMINATED"/>
              </properties>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|actionSupportability   |eventTypeSupportability|&#xd;
|supported              |supported              |&#xd;
|notSupported           |supported              |&#xd;
|supported              |notSupported           |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>actionSupportability</string>
                <string>eventTypeSupportability</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>notSupported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>actionSupportability</string>
                    <string>supported</string>
                  </entry>
                  <entry>
                    <string>eventTypeSupportability</string>
                    <string>notSupported</string>
                  </entry>
                  <entry>
                    <string>notSupportedActions</string>
                    <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                  </entry>
                  <entry>
                    <string>notSupportedEventTypes</string>
                    <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                  </entry>
                  <entry>
                    <string>supportedActions</string>
                    <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                  </entry>
                  <entry>
                    <string>supportedEventTypes</string>
                    <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</string>
              <string>When it is received</string>
              <string>Then message is consumed without error</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/named_annotations.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>actionSupportability</string>
                  <string>supported</string>
                </entry>
                <entry>
                  <string>eventTypeSupportability</string>
                  <string>supported</string>
                </entry>
                <entry>
                  <string>notSupportedActions</string>
                  <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                </entry>
                <entry>
                  <string>notSupportedEventTypes</string>
                  <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                </entry>
                <entry>
                  <string>supportedActions</string>
                  <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                </entry>
                <entry>
                  <string>supportedEventTypes</string>
                  <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches/>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>actionSupportability</string>
                  <string>notSupported</string>
                </entry>
                <entry>
                  <string>eventTypeSupportability</string>
                  <string>supported</string>
                </entry>
                <entry>
                  <string>notSupportedActions</string>
                  <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                </entry>
                <entry>
                  <string>notSupportedEventTypes</string>
                  <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                </entry>
                <entry>
                  <string>supportedActions</string>
                  <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                </entry>
                <entry>
                  <string>supportedEventTypes</string>
                  <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches/>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>actionSupportability</string>
                  <string>supported</string>
                </entry>
                <entry>
                  <string>eventTypeSupportability</string>
                  <string>notSupported</string>
                </entry>
                <entry>
                  <string>notSupportedActions</string>
                  <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
                </entry>
                <entry>
                  <string>notSupportedEventTypes</string>
                  <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
                </entry>
                <entry>
                  <string>supportedActions</string>
                  <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
                </entry>
                <entry>
                  <string>supportedEventTypes</string>
                  <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches/>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/named_parameters.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>We want to verify that parameters can be matched by name preserving the natural order</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given parameters matched by name in natural order one and two</string>
              <string>Then parameters values are one and two</string>
            </steps>
          </scenario>
          <scenario>
            <title>We want to verify that parameters can be matched by name inverting the natural order</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given parameters matched by name in inverse order one and two</string>
              <string>Then parameters values are one and two</string>
            </steps>
          </scenario>
        </scenarios>
        <name>named_parameters.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>We want to verify that parameters can be matched by name preserving the natural order</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given parameters matched by name in natural order one and two</string>
              <string>Then parameters values are one and two</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/named_parameters.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>parameters matched by name in natural order %ith and %nth</annotatedPattern>
                <resolvedPattern>parameters\s+matched\s+by\s+name\s+in\s+natural\s+order\s+(.*)\s+and\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>parameters values are %ith and %nth</annotatedPattern>
                <resolvedPattern>parameters\s+values\s+are\s+(.*)\s+and\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>We want to verify that parameters can be matched by name inverting the natural order</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given parameters matched by name in inverse order one and two</string>
              <string>Then parameters values are one and two</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/named_parameters.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>parameters matched by name in inverse order %ith and %nth</annotatedPattern>
                <resolvedPattern>parameters\s+matched\s+by\s+name\s+in\s+inverse\s+order\s+(.*)\s+and\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>parameters values are %ith and %nth</annotatedPattern>
                <resolvedPattern>parameters\s+values\s+are\s+(.*)\s+and\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/non_successful.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario with failed step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Then I fail</string>
            </steps>
          </scenario>
        </scenarios>
        <name>non_successful.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario with failed step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/non_successful.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I fail</annotatedPattern>
                <resolvedPattern>I\s+fail</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/parameter_delimiters.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>I want to show that different parameter delimiters can be configured via the ParameterControls</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|parameter|
|value|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>parameter</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>parameter</string>
                    <string>value</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a [parameter]</string>
            </steps>
          </scenario>
          <scenario>
            <title>I want to show that parameter values are correctly delimited, even when the values are overlapping</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol 10ABCDEF and a threshold of 10</string>
              <string>Given a stock of symbol ABC10DEF and a threshold of 10</string>
              <string>Given a stock of symbol ABCDEF10 and a threshold of 10</string>
            </steps>
          </scenario>
          <scenario>
            <title>I want to show that parameter values are correctly delimited, but not in the table parameter</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders: 
|name | rank   |
|joe  | topdog |</string>
              <string>And a stock of symbol topdog and a threshold of 10</string>
            </steps>
          </scenario>
        </scenarios>
        <name>parameter_delimiters.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>I want to show that different parameter delimiters can be configured via the ParameterControls</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|parameter|
|value|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>parameter</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>parameter</string>
                    <string>value</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a [parameter]</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>parameter</string>
                  <string>value</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches/>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>I want to show that parameter values are correctly delimited, even when the values are overlapping</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol 10ABCDEF and a threshold of 10</string>
              <string>Given a stock of symbol ABC10DEF and a threshold of 10</string>
              <string>Given a stock of symbol ABCDEF10 and a threshold of 10</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>I want to show that parameter values are correctly delimited, but not in the table parameter</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the traders: 
|name | rank   |
|joe  | topdog |</string>
              <string>And a stock of symbol topdog and a threshold of 10</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the traders: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/parametrisation_by_delimited_name.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Use flexible parameters with examples table</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|client|item|
|Rui|chocolate|
|Figueira|car|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>client</string>
                <string>item</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>client</string>
                    <string>Rui</string>
                  </entry>
                  <entry>
                    <string>item</string>
                    <string>chocolate</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>client</string>
                    <string>Figueira</string>
                  </entry>
                  <entry>
                    <string>item</string>
                    <string>car</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given &lt;client&gt; is logged in</string>
              <string>And &lt;client&gt; has a cart</string>
              <string>When a &lt;item&gt; is added to the cart</string>
              <string>Then cart contains &lt;item&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>parametrisation_by_delimited_name.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Use flexible parameters with examples table</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|client|item|
|Rui|chocolate|
|Figueira|car|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>client</string>
                <string>item</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>client</string>
                    <string>Rui</string>
                  </entry>
                  <entry>
                    <string>item</string>
                    <string>chocolate</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>client</string>
                    <string>Figueira</string>
                  </entry>
                  <entry>
                    <string>item</string>
                    <string>car</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given &lt;client&gt; is logged in</string>
              <string>And &lt;client&gt; has a cart</string>
              <string>When a &lt;item&gt; is added to the cart</string>
              <string>Then cart contains &lt;item&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parametrisation_by_delimited_name.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>client</string>
                  <string>Rui</string>
                </entry>
                <entry>
                  <string>item</string>
                  <string>chocolate</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches/>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>client</string>
                  <string>Figueira</string>
                </entry>
                <entry>
                  <string>item</string>
                  <string>car</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches/>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/parametrised.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="theme" value="parametrisation"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the asset class &lt;assetClass&gt;</string>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>parametrised.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the asset class &lt;assetClass&gt;</string>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the asset class %assetClass</annotatedPattern>
                <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/parametrised_table.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|scheme| 
|scheme1| 
|scheme2|
|scheme3|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>scheme</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme1</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme2</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme3</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a parametrised table:
|name|value|
|name1|scheme|</string>
            </steps>
          </scenario>
        </scenarios>
        <name>parametrised_table.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|scheme| 
|scheme1| 
|scheme2|
|scheme3|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>scheme</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme1</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme2</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>scheme</string>
                    <string>scheme3</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a parametrised table:
|name|value|
|name1|scheme|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/parametrised_table.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>scheme</string>
                  <string>scheme1</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches/>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>scheme</string>
                  <string>scheme2</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches/>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>scheme</string>
                  <string>scheme3</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches/>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/pending.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo>make story development easier</inOrderTo>
          <asA>Story Developer</asA>
          <iWantTo>auto-generate method stubs for pending steps annotated by @Pending</iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Show that steps that don&apos;t match methods are treated as pending and @Pending annotated method stubs are generated</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a step has not been defined</string>
              <string>And another step has not been defined</string>
              <string>When a step has not been defined</string>
              <string>Then a step has not been defined</string>
            </steps>
          </scenario>
          <scenario>
            <title>Show that steps that match methods already annotated by @Pending are treated as pending but no method stubs are generated</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a step is annotated as pending</string>
              <string>When a step is annotated as pending</string>
              <string>Then a step is annotated as pending</string>
            </steps>
          </scenario>
          <scenario>
            <title>Show that multiple And steps can be used</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I am not logged in</string>
              <string>And I have been redirected from my intended page to the login page</string>
              <string>When I log in with good credentials</string>
              <string>Then I am redirected to my intended page</string>
              <string>And I am logged in</string>
            </steps>
          </scenario>
        </scenarios>
        <name>pending.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative>In order to make story development easier
As a Story Developer
I want to auto-generate method stubs for pending steps annotated by @Pending</localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Show that steps that don&apos;t match methods are treated as pending and @Pending annotated method stubs are generated</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a step has not been defined</string>
              <string>And another step has not been defined</string>
              <string>When a step has not been defined</string>
              <string>Then a step has not been defined</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Show that steps that match methods already annotated by @Pending are treated as pending but no method stubs are generated</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a step is annotated as pending</string>
              <string>When a step is annotated as pending</string>
              <string>Then a step is annotated as pending</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a step is annotated as pending</annotatedPattern>
                <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>a step is annotated as pending</annotatedPattern>
                <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>a step is annotated as pending</annotatedPattern>
                <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Show that multiple And steps can be used</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I am not logged in</string>
              <string>And I have been redirected from my intended page to the login page</string>
              <string>When I log in with good credentials</string>
              <string>Then I am redirected to my intended page</string>
              <string>And I am logged in</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/pending_stats.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps/>
          </scenario>
          <scenario>
            <title>A scenario with some pending steps</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I am pending</string>
            </steps>
          </scenario>
        </scenarios>
        <name>pending_stats.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps/>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/pending_stats.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>A scenario with some pending steps</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I am pending</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/pending_stats.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/priority_matching.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario that verifies priority matching of steps, with the less-greedy pattern given higher priority</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Matching regex &quot;a step that has %param&quot;</string>
              <string>Given a step that has a parameter</string>
              <string>Then the parameter value is &quot;a parameter&quot;</string>
              <string>!-- Matching regex &quot;a step that has exactly one %param&quot;</string>
              <string>Given a step that has exactly one of the parameters</string>
              <string>Then the parameter value is &quot;of the parameters&quot;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>priority_matching.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario that verifies priority matching of steps, with the less-greedy pattern given higher priority</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Matching regex &quot;a step that has %param&quot;</string>
              <string>Given a step that has a parameter</string>
              <string>Then the parameter value is &quot;a parameter&quot;</string>
              <string>!-- Matching regex &quot;a step that has exactly one %param&quot;</string>
              <string>Given a step that has exactly one of the parameters</string>
              <string>Then the parameter value is &quot;of the parameters&quot;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/priority_matching.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a step that has %param</annotatedPattern>
                <resolvedPattern>a\s+step\s+that\s+has\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a step that has exactly one %param</annotatedPattern>
                <resolvedPattern>a\s+step\s+that\s+has\s+exactly\s+one\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the parameter value is &quot;%param&quot;</annotatedPattern>
                <resolvedPattern>the\s+parameter\s+value\s+is\s+&quot;(.*)&quot;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the stock exchange &lt;stockExchange&gt;</string>
              <string>And the asset class &lt;assetClass&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>select_stock_exchange.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the stock exchange &lt;stockExchange&gt;</string>
              <string>And the asset class &lt;assetClass&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the asset class %assetClass</annotatedPattern>
                <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
                <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/skip_before_and_after_scenario_steps_if_given_story.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario where before and after steps are executed only once even if there is a given story</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
                  <parameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </parameters>
                  <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                  <anchor>0</anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
              <examplesTable>
                <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers>
                  <string>symbol</string>
                  <string>threshold</string>
                </headers>
                <data>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </linked-hash-map>
                </data>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>1.0</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
        </scenarios>
        <name>skip_before_and_after_scenario_steps_if_given_story.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario where before and after steps are executed only once even if there is a given story</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
                  <parameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </parameters>
                  <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                  <anchor>0</anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
              <examplesTable>
                <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers>
                  <string>symbol</string>
                  <string>threshold</string>
                </headers>
                <data>
                  <linked-hash-map>
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>1.0</string>
                    </entry>
                  </linked-hash-map>
                </data>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>1.0</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>When the stock is traded at price 1.1</string>
              <string>Then the alert status is ON</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/skip_before_and_after_scenario_steps_if_given_story.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/parametrised.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties>
                    <property name="theme" value="parametrisation"/>
                  </properties>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the asset class &lt;assetClass&gt;</string>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>parametrised.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the asset class &lt;assetClass&gt;</string>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps/>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the asset class %assetClass</annotatedPattern>
                        <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                      </stepMatch>
                    </matches>
                  </steps>
                  <afterSteps/>
                </performableScenario>
              </scenarios>
              <beforeSteps/>
              <afterSteps/>
              <timing>
                <durationInMillis>0</durationInMillis>
              </timing>
            </performableStory>
          </givenStories>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>A scenario with failed step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <scenario>
            <title>A scenario that is not executed because if followed a failed scenario</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
        </scenarios>
        <name>skip_scenarios_after_failure.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>A scenario with failed step</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
              <string>Then I fail</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I fail</annotatedPattern>
                <resolvedPattern>I\s+fail</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>A scenario that is not executed because if followed a failed scenario</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given I do nothing</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/step_composition.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties>
            <property name="theme" value="parametrisation"/>
          </properties>
        </meta>
        <scenarios>
          <scenario>
            <title>Composite steps in action.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Composite steps are identified by the @Composite method-level annotation, which is independent of the</string>
              <string>!-- @Given/@When/@Then annotations.  The @Composite is optional and complements any of the @Given/@When/@Then annotations.</string>
              <string>!-- Once the composite step is matched (via any of the supported mechanisms, e.g. normal parameters matching or a parametrised scenario),</string>
              <string>!-- if the @Composite annotation is found on the matched method, the &quot;composed&quot; steps defined in the @Composite annotations are created</string>
              <string>!-- using the parameters specified in the @Named annotations of the composite step.   In other words, the composed steps are treated</string>
              <string>!-- as a group of parametrised steps, much in the same way as the steps in a parametrised scenario.</string>
            </steps>
          </scenario>
          <scenario>
            <title>Using a composite step with normal parameter matching</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;%customer has previously bought a %product&quot;) // used in normal parameter matching</string>
              <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
              <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given Mr Jones has previously bought a ticket</string>
            </steps>
          </scenario>
          <scenario>
            <title>Using a composite step in a parameterised scenario</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|customer|product|
|Mr Jones|ticket|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>customer</string>
                <string>product</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>customer</string>
                    <string>Mr Jones</string>
                  </entry>
                  <entry>
                    <string>product</string>
                    <string>ticket</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;&lt;customer&gt; has previously bought a &lt;product&gt;&quot;) // used in parameterised scenario</string>
              <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
              <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given &lt;customer&gt; has previously bought a &lt;product&gt;</string>
            </steps>
          </scenario>
          <scenario>
            <title>Using a composite step where one of the composed steps is not found.  
The composed step not found should be reported as pending and the subsequent composed steps not performed.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;%customer returns to cart&quot;)</string>
              <string>!-- @Composite(steps = { &quot;Given step not found&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;, })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given Mr Jones returns to cart</string>
            </steps>
          </scenario>
        </scenarios>
        <name>step_composition.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Composite steps in action.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Composite steps are identified by the @Composite method-level annotation, which is independent of the</string>
              <string>!-- @Given/@When/@Then annotations.  The @Composite is optional and complements any of the @Given/@When/@Then annotations.</string>
              <string>!-- Once the composite step is matched (via any of the supported mechanisms, e.g. normal parameters matching or a parametrised scenario),</string>
              <string>!-- if the @Composite annotation is found on the matched method, the &quot;composed&quot; steps defined in the @Composite annotations are created</string>
              <string>!-- using the parameters specified in the @Named annotations of the composite step.   In other words, the composed steps are treated</string>
              <string>!-- as a group of parametrised steps, much in the same way as the steps in a parametrised scenario.</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Using a composite step with normal parameter matching</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;%customer has previously bought a %product&quot;) // used in normal parameter matching</string>
              <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
              <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given Mr Jones has previously bought a ticket</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>%customer has previously bought a %product</annotatedPattern>
                <resolvedPattern>(.*)\s+has\s+previously\s+bought\s+a\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Using a composite step in a parameterised scenario</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|customer|product|
|Mr Jones|ticket|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>customer</string>
                <string>product</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>customer</string>
                    <string>Mr Jones</string>
                  </entry>
                  <entry>
                    <string>product</string>
                    <string>ticket</string>
                  </entry>
                  <entry>
                    <string>theme</string>
                    <string>parametrisation</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;&lt;customer&gt; has previously bought a &lt;product&gt;&quot;) // used in parameterised scenario</string>
              <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
              <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given &lt;customer&gt; has previously bought a &lt;product&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>customer</string>
                  <string>Mr Jones</string>
                </entry>
                <entry>
                  <string>product</string>
                  <string>ticket</string>
                </entry>
                <entry>
                  <string>theme</string>
                  <string>parametrisation</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>%customer has previously bought a %product</annotatedPattern>
                    <resolvedPattern>(.*)\s+has\s+previously\s+bought\s+a\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Using a composite step where one of the composed steps is not found.  
The composed step not found should be reported as pending and the subsequent composed steps not performed.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>!-- Annotated method:</string>
              <string>!-- @Given(&quot;%customer returns to cart&quot;)</string>
              <string>!-- @Composite(steps = { &quot;Given step not found&quot;,</string>
              <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;, })</string>
              <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer) { // composed steps use these named parameters</string>
              <string>!-- }</string>
              <string>!--
</string>
              <string>Given Mr Jones returns to cart</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>%customer returns to cart</annotatedPattern>
                <resolvedPattern>(.*)\s+returns\s+to\s+cart</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/step_monitoring.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>As a story implementer I want to monitor parametrised successful step - before and after execution</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a successful step</string>
              <string>Then following step should be performed</string>
            </steps>
          </scenario>
          <scenario>
            <title>As a story implementer I want to monitor parametrized failing step - before and after execution</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a failing step</string>
              <string>Then following step should not be performed</string>
            </steps>
          </scenario>
        </scenarios>
        <name>step_monitoring.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>As a story implementer I want to monitor parametrised successful step - before and after execution</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a successful step</string>
              <string>Then following step should be performed</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_monitoring.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>As a story implementer I want to monitor parametrized failing step - before and after execution</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a failing step</string>
              <string>Then following step should not be performed</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_monitoring.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/step_nested_composition.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Composite nested steps in action.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Then all buttons are enabled</string>
            </steps>
          </scenario>
        </scenarios>
        <name>step_nested_composition.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Composite nested steps in action.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Then all buttons are enabled</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/step_nested_composition.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
        <description>
          <descriptionAsString>Trader is alerted of status</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo>ensure a quick response</inOrderTo>
          <asA>trader</asA>
          <iWantTo>monitor stock prices</iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
              <string>When the stock is traded at price 5.0</string>
              <string>Then the alert status is OFF</string>
              <string>When the stock is sold at price 11.0</string>
              <string>Then the alert status is OFF</string>
              <string>When the stock is sold at price 16.0</string>
              <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
              <string>Then the alert status is ON</string>
              <string>Then the alert status is currently ON</string>
            </steps>
          </scenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>16.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
              <string>When the stock is traded with &lt;price&gt;</string>
              <string>Then the trader is alerted with &lt;status&gt;</string>
            </steps>
          </scenario>
        </scenarios>
        <name>trader_is_alerted_of_status.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative>In order to ensure a quick response
As a trader
I want to monitor stock prices</localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
              <string>When the stock is traded at price 5.0</string>
              <string>Then the alert status is OFF</string>
              <string>When the stock is sold at price 11.0</string>
              <string>Then the alert status is OFF</string>
              <string>When the stock is sold at price 16.0</string>
              <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
              <string>Then the alert status is ON</string>
              <string>Then the alert status is currently ON</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is sold at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+sold\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is currently %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+currently\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title></title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>symbol</string>
                <string>threshold</string>
                <string>price</string>
                <string>status</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>5.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>11.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>OFF</string>
                  </entry>
                </linked-hash-map>
                <linked-hash-map>
                  <entry>
                    <string>symbol</string>
                    <string>STK1</string>
                  </entry>
                  <entry>
                    <string>threshold</string>
                    <string>15.0</string>
                  </entry>
                  <entry>
                    <string>price</string>
                    <string>16.0</string>
                  </entry>
                  <entry>
                    <string>status</string>
                    <string>ON</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
              <string>When the stock is traded with &lt;price&gt;</string>
              <string>Then the trader is alerted with &lt;status&gt;</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>5.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>OFF</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>11.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>OFF</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>15.0</string>
                </entry>
                <entry>
                  <string>price</string>
                  <string>16.0</string>
                </entry>
                <entry>
                  <string>status</string>
                  <string>ON</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                    <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/trader_sells_all_stocks.story</path>
        <description>
          <descriptionAsString>Story: Any free-text description can go here (and Story: is also optional)</descriptionAsString>
        </description>
        <narrative>
          <inOrderTo>cut my losses</inOrderTo>
          <asA>Trader</asA>
          <iWantTo>sell all stocks when alerted</iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Trader sells it all and goes to Bermuda.
This scenario shows that the same step pattern can be used for different step types</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
          <scenario>
            <title>Trader counts the days to go to Bermuda.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a date of 2010-06-21</string>
              <string>When 2 days pass</string>
              <string>Then the date is 2010-06-23</string>
            </steps>
          </scenario>
        </scenarios>
        <name>trader_sells_all_stocks.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative>In order to cut my losses
As a Trader
I want to sell all stocks when alerted</localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Trader sells it all and goes to Bermuda.
This scenario shows that the same step pattern can be used for different step types</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories>
                <givenStory>
                  <givenStoryAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoryAsString>
                  <parameters/>
                  <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
                  <anchor></anchor>
                </givenStory>
              </givenStories>
              <givenStoriesAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the alert status is OFF</string>
              <string>Given a trader of name Mauro</string>
              <string>And the alert status is OFF</string>
              <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
              <string>When the stock is traded at price 2.0</string>
              <string>Then the alert status is ON</string>
              <string>When the trader sells all stocks</string>
              <string>Then the trader is left with no stocks</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/trader_sells_all_stocks.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
                <description>
                  <descriptionAsString>Trader is alerted of status</descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo>ensure a quick response</inOrderTo>
                  <asA>trader</asA>
                  <iWantTo>monitor stock prices</iWantTo>
                </narrative>
                <meta>
                  <properties/>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
                      <string>When the stock is traded at price 5.0</string>
                      <string>Then the alert status is OFF</string>
                      <string>When the stock is sold at price 11.0</string>
                      <string>Then the alert status is OFF</string>
                      <string>When the stock is sold at price 16.0</string>
                      <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
                      <string>Then the alert status is ON</string>
                      <string>Then the alert status is currently ON</string>
                    </steps>
                  </scenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers>
                        <string>symbol</string>
                        <string>threshold</string>
                        <string>price</string>
                        <string>status</string>
                      </headers>
                      <data>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>5.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>OFF</string>
                          </entry>
                        </linked-hash-map>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>11.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>OFF</string>
                          </entry>
                        </linked-hash-map>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>16.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>ON</string>
                          </entry>
                        </linked-hash-map>
                      </data>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                      <string>When the stock is traded with &lt;price&gt;</string>
                      <string>Then the trader is alerted with &lt;status&gt;</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>trader_is_alerted_of_status.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative>In order to ensure a quick response
As a trader
I want to monitor stock prices</localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
                      <string>When the stock is traded at price 5.0</string>
                      <string>Then the alert status is OFF</string>
                      <string>When the stock is sold at price 11.0</string>
                      <string>Then the alert status is OFF</string>
                      <string>When the stock is sold at price 16.0</string>
                      <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
                      <string>Then the alert status is ON</string>
                      <string>Then the alert status is currently ON</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps/>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>WHEN</type>
                        <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>the alert status is %status</annotatedPattern>
                        <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>WHEN</type>
                        <annotatedPattern>the stock is sold at price %price</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+is\s+sold\s+at\s+price\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>the alert status is currently %status</annotatedPattern>
                        <resolvedPattern>the\s+alert\s+status\s+is\s+currently\s+(.*)</resolvedPattern>
                      </stepMatch>
                    </matches>
                  </steps>
                  <afterSteps/>
                </performableScenario>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers>
                        <string>symbol</string>
                        <string>threshold</string>
                        <string>price</string>
                        <string>status</string>
                      </headers>
                      <data>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>5.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>OFF</string>
                          </entry>
                        </linked-hash-map>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>11.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>OFF</string>
                          </entry>
                        </linked-hash-map>
                        <linked-hash-map>
                          <entry>
                            <string>symbol</string>
                            <string>STK1</string>
                          </entry>
                          <entry>
                            <string>threshold</string>
                            <string>15.0</string>
                          </entry>
                          <entry>
                            <string>price</string>
                            <string>16.0</string>
                          </entry>
                          <entry>
                            <string>status</string>
                            <string>ON</string>
                          </entry>
                        </linked-hash-map>
                      </data>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                      <string>When the stock is traded with &lt;price&gt;</string>
                      <string>Then the trader is alerted with &lt;status&gt;</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios>
                    <performableExample>
                      <exampleParameters class="linked-hash-map">
                        <entry>
                          <string>symbol</string>
                          <string>STK1</string>
                        </entry>
                        <entry>
                          <string>threshold</string>
                          <string>15.0</string>
                        </entry>
                        <entry>
                          <string>price</string>
                          <string>5.0</string>
                        </entry>
                        <entry>
                          <string>status</string>
                          <string>OFF</string>
                        </entry>
                      </exampleParameters>
                      <performableGivenStories/>
                      <beforeSteps/>
                      <steps>
                        <matches>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                            <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>WHEN</type>
                            <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                            <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>THEN</type>
                            <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                            <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                          </stepMatch>
                        </matches>
                      </steps>
                      <afterSteps/>
                    </performableExample>
                    <performableExample>
                      <exampleParameters class="linked-hash-map">
                        <entry>
                          <string>symbol</string>
                          <string>STK1</string>
                        </entry>
                        <entry>
                          <string>threshold</string>
                          <string>15.0</string>
                        </entry>
                        <entry>
                          <string>price</string>
                          <string>11.0</string>
                        </entry>
                        <entry>
                          <string>status</string>
                          <string>OFF</string>
                        </entry>
                      </exampleParameters>
                      <performableGivenStories/>
                      <beforeSteps/>
                      <steps>
                        <matches>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                            <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>WHEN</type>
                            <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                            <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>THEN</type>
                            <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                            <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                          </stepMatch>
                        </matches>
                      </steps>
                      <afterSteps/>
                    </performableExample>
                    <performableExample>
                      <exampleParameters class="linked-hash-map">
                        <entry>
                          <string>symbol</string>
                          <string>STK1</string>
                        </entry>
                        <entry>
                          <string>threshold</string>
                          <string>15.0</string>
                        </entry>
                        <entry>
                          <string>price</string>
                          <string>16.0</string>
                        </entry>
                        <entry>
                          <string>status</string>
                          <string>ON</string>
                        </entry>
                      </exampleParameters>
                      <performableGivenStories/>
                      <beforeSteps/>
                      <steps>
                        <matches>
                          <stepMatch>
                            <type>GIVEN</type>
                            <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                            <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>WHEN</type>
                            <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                            <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                          </stepMatch>
                          <stepMatch>
                            <type>THEN</type>
                            <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                            <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                          </stepMatch>
                        </matches>
                      </steps>
                      <afterSteps/>
                    </performableExample>
                  </exampleScenarios>
                  <givenStories/>
                  <beforeSteps/>
                  <steps/>
                  <afterSteps/>
                </performableScenario>
              </scenarios>
              <beforeSteps/>
              <afterSteps/>
              <timing>
                <durationInMillis>0</durationInMillis>
              </timing>
            </performableStory>
          </givenStories>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a trader of name %trader</annotatedPattern>
                <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is left with no stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the trader sells all stocks</annotatedPattern>
                <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Trader counts the days to go to Bermuda.</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given a date of 2010-06-21</string>
              <string>When 2 days pass</string>
              <string>Then the date is 2010-06-23</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/trader_sells_all_stocks.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a date of %date</annotatedPattern>
                <resolvedPattern>a\s+date\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the date is %date</annotatedPattern>
                <resolvedPattern>the\s+date\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>%days days pass</annotatedPattern>
                <resolvedPattern>(.*)\s+days\s+pass</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/traders_can_be_subset.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Traders can be searched by name</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
              <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
              <string>!-- This is a comment, which will be ignored in the execution</string>
              <string>When traders are subset to &quot;.*y&quot; by name</string>
              <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <scenario>
            <title>Traders can be searched by name in landscape format</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
{transformer=FROM_LANDSCAPE}
|name |Larry   |Moe     |Curly   |
|rank |Stooge 1|Stooge 2|Stooge 3|</string>
              <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <scenario>
            <title>Traders search fails</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
              <string>!-- Verification fails</string>
              <string>Then the traders returned are:
|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
        </scenarios>
        <name>traders_can_be_subset.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Traders can be searched by name</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
              <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
              <string>!-- This is a comment, which will be ignored in the execution</string>
              <string>When traders are subset to &quot;.*y&quot; by name</string>
              <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>traders are subset to &quot;%regex&quot; by name</annotatedPattern>
                <resolvedPattern>traders\s+are\s+subset\s+to\s+&quot;(.*)&quot;\s+by\s+name</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the current trader activity is: %activityTable</annotatedPattern>
                <resolvedPattern>the\s+current\s+trader\s+activity\s+is:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
                <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Traders can be searched by name in landscape format</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
{transformer=FROM_LANDSCAPE}
|name |Larry   |Moe     |Curly   |
|rank |Stooge 1|Stooge 2|Stooge 3|</string>
              <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
              <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the current trader activity is: %activityTable</annotatedPattern>
                <resolvedPattern>the\s+current\s+trader\s+activity\s+is:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
                <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Traders search fails</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString></tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers/>
              <data/>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
              <string>!-- Verification fails</string>
              <string>Then the traders returned are:
|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios/>
          <givenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
                <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
                <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
    <performableStory>
      <story>
        <path>org/jbehave/examples/trader/stories/unmatched_search_term.story</path>
        <description>
          <descriptionAsString></descriptionAsString>
        </description>
        <narrative>
          <inOrderTo></inOrderTo>
          <asA></asA>
          <iWantTo></iWantTo>
        </narrative>
        <meta>
          <properties/>
        </meta>
        <scenarios>
          <scenario>
            <title>Search term does match examples table header</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|ridiculousSearchTerm|&#xd;
|Hello Kitty|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>ridiculousSearchTerm</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>ridiculousSearchTerm</string>
                    <string>Hello Kitty</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given that I am on Google&apos;s Homepage</string>
              <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
              <string>Then I should see ridiculous things</string>
            </steps>
          </scenario>
          <scenario>
            <title>Search term does not match examples table header and step is marked as pending</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|ridiculoussearchterm|&#xd;
|Hello Kitty|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>ridiculoussearchterm</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>ridiculoussearchterm</string>
                    <string>Hello Kitty</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given that I am on Google&apos;s Homepage</string>
              <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
              <string>Then I should see ridiculous things</string>
            </steps>
          </scenario>
        </scenarios>
        <name>unmatched_search_term.story</name>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
      </story>
      <localizedNarrative></localizedNarrative>
      <allowed>true</allowed>
      <givenStories/>
      <scenarios>
        <performableScenario>
          <scenario>
            <title>Search term does match examples table header</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|ridiculousSearchTerm|&#xd;
|Hello Kitty|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>ridiculousSearchTerm</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>ridiculousSearchTerm</string>
                    <string>Hello Kitty</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given that I am on Google&apos;s Homepage</string>
              <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
              <string>Then I should see ridiculous things</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/unmatched_search_term.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>ridiculousSearchTerm</string>
                  <string>Hello Kitty</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>I should see ridiculous things</annotatedPattern>
                    <resolvedPattern>I\s+should\s+see\s+ridiculous\s+things</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>that I am on Google&apos;s Homepage</annotatedPattern>
                    <resolvedPattern>that\s+I\s+am\s+on\s+Google&apos;s\s+Homepage</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</annotatedPattern>
                    <resolvedPattern>I\s+enter\s+the\s+search\s+term\s+&lt;ridiculousSearchTerm&gt;\s+and\s+proceed</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
        <performableScenario>
          <scenario>
            <title>Search term does not match examples table header and step is marked as pending</title>
            <meta>
              <properties/>
            </meta>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
            <examplesTable>
              <tableAsString>|ridiculoussearchterm|&#xd;
|Hello Kitty|</tableAsString>
              <headerSeparator>|</headerSeparator>
              <valueSeparator>|</valueSeparator>
              <ignorableSeparator>|--</ignorableSeparator>
              <tableTransformers>
                <transformers>
                  <entry>
                    <string>FROM_LANDSCAPE</string>
                    <fromLandscape/>
                  </entry>
                </transformers>
              </tableTransformers>
              <headers>
                <string>ridiculoussearchterm</string>
              </headers>
              <data>
                <linked-hash-map>
                  <entry>
                    <string>ridiculoussearchterm</string>
                    <string>Hello Kitty</string>
                  </entry>
                </linked-hash-map>
              </data>
              <properties>
                <property name="headerSeparator" value="|"/>
                <property name="valueSeparator" value="|"/>
                <property name="ignorableSeparator" value="|--"/>
              </properties>
              <propertiesAsString></propertiesAsString>
              <namedParameters/>
              <trim>true</trim>
            </examplesTable>
            <steps>
              <string>Given that I am on Google&apos;s Homepage</string>
              <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
              <string>Then I should see ridiculous things</string>
            </steps>
          </scenario>
          <storyPath>org/jbehave/examples/trader/stories/unmatched_search_term.story</storyPath>
          <allowed>true</allowed>
          <exampleScenarios>
            <performableExample>
              <exampleParameters class="linked-hash-map">
                <entry>
                  <string>ridiculoussearchterm</string>
                  <string>Hello Kitty</string>
                </entry>
              </exampleParameters>
              <performableGivenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>I should see ridiculous things</annotatedPattern>
                    <resolvedPattern>I\s+should\s+see\s+ridiculous\s+things</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>that I am on Google&apos;s Homepage</annotatedPattern>
                    <resolvedPattern>that\s+I\s+am\s+on\s+Google&apos;s\s+Homepage</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</annotatedPattern>
                    <resolvedPattern>I\s+enter\s+the\s+search\s+term\s+&lt;ridiculousSearchTerm&gt;\s+and\s+proceed</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableExample>
          </exampleScenarios>
          <givenStories/>
          <beforeSteps/>
          <steps/>
          <afterSteps/>
        </performableScenario>
      </scenarios>
      <beforeSteps/>
      <afterSteps/>
      <timing>
        <durationInMillis>0</durationInMillis>
      </timing>
    </performableStory>
  </stories>
  <scenarios>
    <performableScenario>
      <scenario>
        <title>Pass on a step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
          <string>Then I pass</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/after_scenario_outcome.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I pass</annotatedPattern>
            <resolvedPattern>I\s+pass</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given I do nothing</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I do nothing</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then I pass</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then I pass</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Fail on a step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
          <string>Then I fail</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/after_scenario_outcome.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I fail</annotatedPattern>
            <resolvedPattern>I\s+fail</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given I do nothing</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I do nothing</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <failed>
            <step>Then I fail</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>Then I fail</detailMessage>
              <cause class="junit.framework.AssertionFailedError">
                <detailMessage>I failed!</detailMessage>
                <stackTrace>
                  <trace>junit.framework.Assert.fail(Assert.java:47)</trace>
                  <trace>org.jbehave.examples.trader.steps.SandpitSteps.doFail(SandpitSteps.java:17)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                  <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                  <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>20c4d8d7-a926-4be1-b87a-0627091d8024</uuid>
            </throwable>
            <parametrisedStep>Then I fail</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </failed>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>An initial And step should be marked as pending as there is not previous step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- What is this And of?  JBehave treats as pending</string>
          <string>And the wind blows</string>
          <string>!-- Look Ma&apos; - I can also use keywords in scenario title and step comments!</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/and_step.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the wind blows</annotatedPattern>
            <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the wind blows</annotatedPattern>
            <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <ignorable>
            <step>!-- What is this And of?  JBehave treats as pending</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <pending>
            <step>And the wind blows</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>And the wind blows</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>2090d4dc-4138-4f65-a09f-65d51ce5c4c7</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <ignorable>
            <step>!-- Look Ma&apos; - I can also use keywords in scenario title and step comments!</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>And steps should match the previous step type</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the wind blows</string>
          <string>!-- This And is equivalent to another Given</string>
          <string>And the wind blows</string>
          <string>!-- This And shows that we can chain multiple And steps</string>
          <string>And the wind blows</string>
          <string>When the wind blows</string>
          <string>!-- This And is equivalent to another When</string>
          <string>And the wind blows</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/and_step.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the wind blows</annotatedPattern>
            <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the wind blows</annotatedPattern>
            <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given the wind blows</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given the wind blows</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- This And is equivalent to another Given</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>And the wind blows</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>And the wind blows</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- This And shows that we can chain multiple And steps</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>And the wind blows</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>And the wind blows</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>When the wind blows</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When the wind blows</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- This And is equivalent to another When</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>And the wind blows</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>And the wind blows</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|date       |amount|
|none       |0.0   |
|01/06/2010 |2.15  |</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>date</string>
            <string>amount</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>date</string>
                <string>none</string>
              </entry>
              <entry>
                <string>amount</string>
                <string>0.0</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>date</string>
                <string>01/06/2010</string>
              </entry>
              <entry>
                <string>amount</string>
                <string>2.15</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a plan with calendar date of &lt;date&gt;</string>
          <string>Then the claimant should receive an amount of &lt;amount&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/claims_with_null_calendar.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>date</string>
              <string>none</string>
            </entry>
            <entry>
              <string>amount</string>
              <string>0.0</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a plan with calendar date of &lt;date&gt;</annotatedPattern>
                <resolvedPattern>a\s+plan\s+with\s+calendar\s+date\s+of\s+&lt;date&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the claimant should receive an amount of &lt;amount&gt;</annotatedPattern>
                <resolvedPattern>the\s+claimant\s+should\s+receive\s+an\s+amount\s+of\s+&lt;amount&gt;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a plan with calendar date of &lt;date&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a plan with calendar date of ｟none｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the claimant should receive an amount of &lt;amount&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the claimant should receive an amount of ｟0.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>date</string>
              <string>01/06/2010</string>
            </entry>
            <entry>
              <string>amount</string>
              <string>2.15</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a plan with calendar date of &lt;date&gt;</annotatedPattern>
                <resolvedPattern>a\s+plan\s+with\s+calendar\s+date\s+of\s+&lt;date&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the claimant should receive an amount of &lt;amount&gt;</annotatedPattern>
                <resolvedPattern>the\s+claimant\s+should\s+receive\s+an\s+amount\s+of\s+&lt;amount&gt;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a plan with calendar date of &lt;date&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a plan with calendar date of ｟01/06/2010｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the claimant should receive an amount of &lt;amount&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the claimant should receive an amount of ｟2.15｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- GivenStories:  ignore_me.story</string>
          <string>Given I do nothing</string>
          <string>!-- Examples: 
|I|am|just|lazy|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/do_nothing.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <ignorable>
            <step>!-- GivenStories:  ignore_me.story</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>Given I do nothing</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I do nothing</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- Examples: 
|I|am|just|lazy|</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Table parameter loaded from a classpath resource</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the traders: org/jbehave/examples/trader/stories/traders.table</string>
          <string>!-- This is a comment, which will be ignored in the execution</string>
          <string>When traders are subset to &quot;.*y&quot; by name</string>
          <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
          <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/examples_table_loaded_from_classpath.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>traders are subset to &quot;%regex&quot; by name</annotatedPattern>
            <resolvedPattern>traders\s+are\s+subset\s+to\s+&quot;(.*)&quot;\s+by\s+name</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
            <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the traders: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given the traders: org/jbehave/examples/trader/stories/traders.table</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given the traders: ［org/jbehave/examples/trader/stories/traders.table］</parametrisedStep>
            <durationInMillis>1</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- This is a comment, which will be ignored in the execution</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>When traders are subset to &quot;.*y&quot; by name</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When traders are subset to &quot;.*y&quot; by name</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the traders returned are:
［|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|］</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Parameters table loaded from a classpath resource</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>symbol</string>
            <string>threshold</string>
            <string>price</string>
            <string>status</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>5.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>OFF</string>
              </entry>
              <entry>
                <string>theme</string>
                <string>parametrisation</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>11.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>OFF</string>
              </entry>
              <entry>
                <string>theme</string>
                <string>parametrisation</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>16.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>ON</string>
              </entry>
              <entry>
                <string>theme</string>
                <string>parametrisation</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
          <string>When the stock is traded with &lt;price&gt;</string>
          <string>Then the trader is alerted with &lt;status&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/examples_table_loaded_from_classpath.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>5.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>OFF</string>
            </entry>
            <entry>
              <string>theme</string>
              <string>parametrisation</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded with &lt;price&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded with ｟5.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the trader is alerted with &lt;status&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>11.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>OFF</string>
            </entry>
            <entry>
              <string>theme</string>
              <string>parametrisation</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded with &lt;price&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded with ｟11.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the trader is alerted with &lt;status&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>16.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>ON</string>
            </entry>
            <entry>
              <string>theme</string>
              <string>parametrisation</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded with &lt;price&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded with ｟16.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the trader is alerted with &lt;status&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the trader is alerted with ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the alert status is OFF</string>
          <string>Given a trader of name Mauro</string>
          <string>And the alert status is OFF</string>
          <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
          <string>When the stock is traded at price 2.0</string>
          <string>Then the alert status is ON</string>
          <string>When the trader sells all stocks</string>
          <string>Then the trader is left with no stocks</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failing_after_stories.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a trader of name %trader</annotatedPattern>
            <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the trader is left with no stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the trader sells all stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given the alert status is OFF</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given the alert status is ｟OFF｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Given a trader of name Mauro</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a trader of name ｟Mauro｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>And the alert status is OFF</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>And the alert status is ｟OFF｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Given a stock of symbol STK1 and a threshold of 1.5</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟1.5｠</parametrisedStep>
            <durationInMillis>1</durationInMillis>
          </successful>
          <successful>
            <step>When the stock is traded at price 2.0</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When the stock is traded at price ｟2.0｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <failed>
            <step>Then the alert status is ON</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>Then the alert status is ON</detailMessage>
              <cause class="java.lang.AssertionError">
                <detailMessage>
Expected: &quot;ON&quot;
     got: &quot;OFF&quot;
</detailMessage>
                <stackTrace>
                  <trace>org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:21)</trace>
                  <trace>org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)</trace>
                  <trace>org.jbehave.examples.trader.steps.TraderSteps.theAlertStatusIs(TraderSteps.java:165)</trace>
                  <trace>sun.reflect.GeneratedMethodAccessor156.invoke(Unknown Source)</trace>
                  <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                  <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>19a3b8a4-063d-4ee8-bac5-3ee9373e61e1</uuid>
            </throwable>
            <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </failed>
          <notPerformed>
            <step>When the trader sells all stocks</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>When the trader sells all stocks</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Then the trader is left with no stocks</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Then the trader is left with no stocks</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Fail on a step in story 1</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>When a failure occurs in story 1</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failure_correlation_one.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches/>
        <results>
          <pending>
            <step>When a failure occurs in story 1</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>When a failure occurs in story 1</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>2e6c6ceb-21c1-4c1d-a57b-efa92de27439</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Fail on a step in story 2</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>When a failure occurs in story 2</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failure_correlation_two.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches/>
        <results>
          <pending>
            <step>When a failure occurs in story 2</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>When a failure occurs in story 2</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>a6e6e2ef-f8ed-4449-82e9-3ec4c357f6b9</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Fail on a step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
          <string>Then I fail</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I fail</annotatedPattern>
            <resolvedPattern>I\s+fail</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given I do nothing</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I do nothing</parametrisedStep>
            <durationInMillis>1</durationInMillis>
          </successful>
          <failed>
            <step>Then I fail</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>Then I fail</detailMessage>
              <cause class="junit.framework.AssertionFailedError">
                <detailMessage>I failed!</detailMessage>
                <stackTrace>
                  <trace>junit.framework.Assert.fail(Assert.java:47)</trace>
                  <trace>org.jbehave.examples.trader.steps.SandpitSteps.doFail(SandpitSteps.java:17)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                  <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                  <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>8ccb1bf7-da6b-46e0-9998-cad3ae4db534</uuid>
            </throwable>
            <parametrisedStep>Then I fail</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </failed>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Pass after given stories</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoryAsString>
              <parameters/>
              <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
              <anchor></anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
          <string>Then I pass</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
            <description>
              <descriptionAsString></descriptionAsString>
            </description>
            <narrative>
              <inOrderTo></inOrderTo>
              <asA></asA>
              <iWantTo></iWantTo>
            </narrative>
            <meta>
              <properties/>
            </meta>
            <scenarios>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>!-- GivenStories:  ignore_me.story</string>
                  <string>Given I do nothing</string>
                  <string>!-- Examples: 
|I|am|just|lazy|</string>
                </steps>
              </scenario>
            </scenarios>
            <name>do_nothing.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative></localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>!-- GivenStories:  ignore_me.story</string>
                  <string>Given I do nothing</string>
                  <string>!-- Examples: 
|I|am|just|lazy|</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/do_nothing.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>I do nothing</annotatedPattern>
                    <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <ignorable>
                    <step>!-- GivenStories:  ignore_me.story</step>
                    <type>IGNORABLE</type>
                    <durationInMillis>0</durationInMillis>
                  </ignorable>
                  <successful>
                    <step>Given I do nothing</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given I do nothing</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <ignorable>
                    <step>!-- Examples: 
|I|am|just|lazy|</step>
                    <type>IGNORABLE</type>
                    <durationInMillis>0</durationInMillis>
                  </ignorable>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                  <skipped>
                    <step></step>
                    <type>SKIPPED</type>
                    <durationInMillis>0</durationInMillis>
                  </skipped>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableScenario>
          </scenarios>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
          <timing>
            <durationInMillis>0</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I pass</annotatedPattern>
            <resolvedPattern>I\s+pass</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given I do nothing</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I do nothing</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then I pass</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then I pass</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that depends on a non successful story</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoryAsString>
              <parameters/>
              <path>org/jbehave/examples/trader/stories/non_successful.story</path>
              <anchor></anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the traders:
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/given_non_successful.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/non_successful.story</path>
            <description>
              <descriptionAsString></descriptionAsString>
            </description>
            <narrative>
              <inOrderTo></inOrderTo>
              <asA></asA>
              <iWantTo></iWantTo>
            </narrative>
            <meta>
              <properties/>
            </meta>
            <scenarios>
              <scenario>
                <title>A scenario with failed step</title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Then I fail</string>
                </steps>
              </scenario>
            </scenarios>
            <name>non_successful.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative></localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title>A scenario with failed step</title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Then I fail</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/non_successful.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>I fail</annotatedPattern>
                    <resolvedPattern>I\s+fail</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <failed>
                    <step>Then I fail</step>
                    <type>FAILED</type>
                    <throwable>
                      <detailMessage>Then I fail</detailMessage>
                      <cause class="junit.framework.AssertionFailedError">
                        <detailMessage>I failed!</detailMessage>
                        <stackTrace>
                          <trace>junit.framework.Assert.fail(Assert.java:47)</trace>
                          <trace>org.jbehave.examples.trader.steps.SandpitSteps.doFail(SandpitSteps.java:17)</trace>
                          <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                          <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                          <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                          <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                          <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                          <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                          <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                          <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                          <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                          <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                          <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:703)</trace>
                          <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                          <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                          <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                          <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                          <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                          <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                          <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                          <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                          <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                          <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                          <trace>java.lang.Thread.run(Thread.java:680)</trace>
                        </stackTrace>
                      </cause>
                      <stackTrace>
                        <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:703)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                        <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                        <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                        <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                        <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                        <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                        <trace>java.lang.Thread.run(Thread.java:680)</trace>
                      </stackTrace>
                      <uuid>99897732-564b-4964-ad61-4465c7a289ac</uuid>
                    </throwable>
                    <parametrisedStep>Then I fail</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </failed>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                  <skipped>
                    <step></step>
                    <type>SKIPPED</type>
                    <durationInMillis>0</durationInMillis>
                  </skipped>
                </results>
              </afterSteps>
            </performableScenario>
          </scenarios>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
          <timing>
            <durationInMillis>0</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the traders: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <notPerformed>
            <step>Given the traders:
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Given the traders:
［|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|］</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that depends on a given story with parameters specified as anchor pointing to specific examples row. 
The presence of the anchor implies that the scenario is executed normally and not parametrised by examples, i.e. that the scenario is not executed for each examples row.</title>
        <meta>
          <properties>
            <property name="theme" value="parametrisation"/>
            <property name="assetClass" value="FX"/>
          </properties>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
              <parameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>1.0</string>
                </entry>
              </parameters>
              <path>org/jbehave/examples/trader/stories/parametrised.story</path>
              <anchor>0</anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
          <examplesTable>
            <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers>
              <string>symbol</string>
              <string>threshold</string>
            </headers>
            <data>
              <linked-hash-map>
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>1.0</string>
                </entry>
              </linked-hash-map>
              <linked-hash-map>
                <entry>
                  <string>symbol</string>
                  <string>STK2</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>2.0</string>
                </entry>
              </linked-hash-map>
            </data>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>symbol</string>
            <string>threshold</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>1.0</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK2</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>2.0</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>When the stock is traded at price 1.1</string>
          <string>Then the alert status is ON</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_anchor.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/parametrised.story</path>
            <description>
              <descriptionAsString></descriptionAsString>
            </description>
            <narrative>
              <inOrderTo></inOrderTo>
              <asA></asA>
              <iWantTo></iWantTo>
            </narrative>
            <meta>
              <properties>
                <property name="theme" value="parametrisation"/>
              </properties>
            </meta>
            <scenarios>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
            </scenarios>
            <name>parametrised.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative></localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>the asset class %assetClass</annotatedPattern>
                    <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given the asset class &lt;assetClass&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given the asset class ｟FX｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of ｟STK1｠ and a ｟1.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                  <skipped>
                    <step></step>
                    <type>SKIPPED</type>
                    <durationInMillis>0</durationInMillis>
                  </skipped>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableScenario>
          </scenarios>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
          <timing>
            <durationInMillis>0</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>When the stock is traded at price 1.1</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When the stock is traded at price ｟1.1｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the alert status is ON</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that depends on given stories parametrised by examples. 
Here the entire scenario is parametrised by examples, i.e. the scenario is executed for each examples row.</title>
        <meta>
          <properties>
            <property name="assetClass" value="FX"/>
          </properties>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoryAsString>
              <parameters/>
              <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
              <anchor></anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|stockExchange|symbol|threshold|price|status|
|NASDAQ|STK1|10.0|5.0|OFF|
|FTSE|STK1|10.0|11.0|ON|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>stockExchange</string>
            <string>symbol</string>
            <string>threshold</string>
            <string>price</string>
            <string>status</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>stockExchange</string>
                <string>NASDAQ</string>
              </entry>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>10.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>5.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>OFF</string>
              </entry>
              <entry>
                <string>assetClass</string>
                <string>FX</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>stockExchange</string>
                <string>FTSE</string>
              </entry>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>10.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>11.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>ON</string>
              </entry>
              <entry>
                <string>assetClass</string>
                <string>FX</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a stock of symbol &lt;symbol&gt; and a threshold of &lt;threshold&gt;</string>
          <string>When the stock is traded at price &lt;price&gt;</string>
          <string>Then the alert status is &lt;status&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_examples.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>stockExchange</string>
              <string>NASDAQ</string>
            </entry>
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>10.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>5.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>OFF</string>
            </entry>
            <entry>
              <string>assetClass</string>
              <string>FX</string>
            </entry>
          </exampleParameters>
          <performableGivenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties/>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the stock exchange &lt;stockExchange&gt;</string>
                      <string>And the asset class &lt;assetClass&gt;</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>select_stock_exchange.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the stock exchange &lt;stockExchange&gt;</string>
                      <string>And the asset class &lt;assetClass&gt;</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>1</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the asset class %assetClass</annotatedPattern>
                        <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
                      </stepMatch>
                    </matches>
                    <results>
                      <successful>
                        <step>Given the stock exchange &lt;stockExchange&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given the stock exchange ｟NASDAQ｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>And the asset class &lt;assetClass&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>And the asset class ｟FX｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                    </results>
                  </steps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                      <skipped>
                        <step></step>
                        <type>SKIPPED</type>
                        <durationInMillis>0</durationInMillis>
                      </skipped>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                </performableScenario>
              </scenarios>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
              <timing>
                <durationInMillis>1</durationInMillis>
              </timing>
            </performableStory>
          </performableGivenStories>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a stock of symbol &lt;symbol&gt; and a threshold of &lt;threshold&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟10.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded at price &lt;price&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded at price ｟5.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the alert status is &lt;status&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the alert status is ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>stockExchange</string>
              <string>FTSE</string>
            </entry>
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>10.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>11.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>ON</string>
            </entry>
            <entry>
              <string>assetClass</string>
              <string>FX</string>
            </entry>
          </exampleParameters>
          <performableGivenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties/>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the stock exchange &lt;stockExchange&gt;</string>
                      <string>And the asset class &lt;assetClass&gt;</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>select_stock_exchange.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the stock exchange &lt;stockExchange&gt;</string>
                      <string>And the asset class &lt;assetClass&gt;</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the asset class %assetClass</annotatedPattern>
                        <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
                      </stepMatch>
                    </matches>
                    <results>
                      <successful>
                        <step>Given the stock exchange &lt;stockExchange&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given the stock exchange ｟FTSE｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>And the asset class &lt;assetClass&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>And the asset class ｟FX｠</parametrisedStep>
                        <durationInMillis>1</durationInMillis>
                      </successful>
                    </results>
                  </steps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                      <skipped>
                        <step></step>
                        <type>SKIPPED</type>
                        <durationInMillis>0</durationInMillis>
                      </skipped>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                </performableScenario>
              </scenarios>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
              <timing>
                <durationInMillis>1</durationInMillis>
              </timing>
            </performableStory>
          </performableGivenStories>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a stock of symbol &lt;symbol&gt; and a threshold of &lt;threshold&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟10.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded at price &lt;price&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded at price ｟11.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the alert status is &lt;status&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that is executed after the given stories parametrised by meta</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>When the stock is traded at price 1.1</string>
          <string>Then the alert status is ON</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_meta.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>When the stock is traded at price 1.1</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When the stock is traded at price ｟1.1｠</parametrisedStep>
            <durationInMillis>1</durationInMillis>
          </successful>
          <successful>
            <step>Then the alert status is ON</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario to be skipped
and not executed</title>
        <meta>
          <properties>
            <property name="skip" value=""/>
          </properties>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given I do nothing</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I do nothing</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario with an author</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given I do nothing</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I do nothing</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario with examples whose rows can be filtered on meta</title>
        <meta>
          <properties>
            <property name="run" value=""/>
          </properties>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|Meta:|Parameter|
|@run yes|value|
|@run not|value|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>Meta:</string>
            <string>Parameter</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>Meta:</string>
                <string>@run yes</string>
              </entry>
              <entry>
                <string>Parameter</string>
                <string>value</string>
              </entry>
              <entry>
                <string>author</string>
                <string>Mauro</string>
              </entry>
              <entry>
                <string>run</string>
                <string></string>
              </entry>
              <entry>
                <string>theme</string>
                <string>filtering</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>Meta:</string>
                <string>@run not</string>
              </entry>
              <entry>
                <string>Parameter</string>
                <string>value</string>
              </entry>
              <entry>
                <string>author</string>
                <string>Mauro</string>
              </entry>
              <entry>
                <string>run</string>
                <string></string>
              </entry>
              <entry>
                <string>theme</string>
                <string>filtering</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>Meta:</string>
              <string>@run yes</string>
            </entry>
            <entry>
              <string>Parameter</string>
              <string>value</string>
            </entry>
            <entry>
              <string>author</string>
              <string>Mauro</string>
            </entry>
            <entry>
              <string>run</string>
              <string></string>
            </entry>
            <entry>
              <string>theme</string>
              <string>filtering</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>Meta:</string>
              <string>@run not</string>
            </entry>
            <entry>
              <string>Parameter</string>
              <string>value</string>
            </entry>
            <entry>
              <string>author</string>
              <string>Mauro</string>
            </entry>
            <entry>
              <string>run</string>
              <string></string>
            </entry>
            <entry>
              <string>theme</string>
              <string>filtering</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given I do nothing</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given I do nothing</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>1</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>scenario with explicitly mentioned meta params</title>
        <meta>
          <properties>
            <property name="variant" value="named"/>
          </properties>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I have specified the &lt;theme&gt;</string>
          <string>And a &lt;variant&gt;</string>
          <string>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/meta_parametrisation.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a &lt;variant&gt;</annotatedPattern>
            <resolvedPattern>a\s+&lt;variant&gt;</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the theme is &apos;%theme&apos; with variant &apos;%variant&apos;</annotatedPattern>
            <resolvedPattern>the\s+theme\s+is\s+&apos;(.*)&apos;\s+with\s+variant\s+&apos;(.*)&apos;</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I have specified the &lt;theme&gt;</annotatedPattern>
            <resolvedPattern>I\s+have\s+specified\s+the\s+&lt;theme&gt;</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given I have specified the &lt;theme&gt;</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I have specified the ｟parameters｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>And a &lt;variant&gt;</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>And a ｟foo｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <failed>
            <step>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</detailMessage>
              <cause class="org.junit.ComparisonFailure">
                <detailMessage></detailMessage>
                <stackTrace>
                  <trace>org.junit.Assert.assertEquals(Assert.java:123)</trace>
                  <trace>org.junit.Assert.assertEquals(Assert.java:145)</trace>
                  <trace>org.jbehave.examples.trader.steps.MetaParametrisationSteps.thenTheThemeAndVariantAre(MetaParametrisationSteps.java:33)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                  <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                  <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
                <fExpected>named</fExpected>
                <fActual>foo</fActual>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>52795a40-3bdf-486e-bdd4-3eb761cbd765</uuid>
            </throwable>
            <parametrisedStep>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </failed>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>scenario with hidden meta params</title>
        <meta>
          <properties>
            <property name="variant" value="foo"/>
          </properties>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I have some step that implicitly requires meta params</string>
          <string>Then the theme is &apos;parameters&apos; with variant &apos;foo&apos;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/meta_parametrisation.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I have some step that implicitly requires meta params</annotatedPattern>
            <resolvedPattern>I\s+have\s+some\s+step\s+that\s+implicitly\s+requires\s+meta\s+params</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the theme is &apos;%theme&apos; with variant &apos;%variant&apos;</annotatedPattern>
            <resolvedPattern>the\s+theme\s+is\s+&apos;(.*)&apos;\s+with\s+variant\s+&apos;(.*)&apos;</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given I have some step that implicitly requires meta params</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I have some step that implicitly requires meta params</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the theme is &apos;parameters&apos; with variant &apos;foo&apos;</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the theme is &apos;parameters&apos; with variant &apos;foo&apos;</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Supported action and/or event story</title>
        <meta>
          <properties>
            <property name="notSupportedActions" value="FIX,SCHEDULE,RESCHEDULE,DETERMINE"/>
            <property name="supportedActions" value="TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP"/>
            <property name="notSupportedEventTypes" value="DONE,FETCHED,CREATED,TESTED,FIXED"/>
            <property name="supportedEventTypes" value="NEW,FRESH,CANCELLED,AMENDED,TERMINATED"/>
          </properties>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|actionSupportability   |eventTypeSupportability|&#xd;
|supported              |supported              |&#xd;
|notSupported           |supported              |&#xd;
|supported              |notSupported           |</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>actionSupportability</string>
            <string>eventTypeSupportability</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>actionSupportability</string>
                <string>supported</string>
              </entry>
              <entry>
                <string>eventTypeSupportability</string>
                <string>supported</string>
              </entry>
              <entry>
                <string>notSupportedActions</string>
                <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
              </entry>
              <entry>
                <string>notSupportedEventTypes</string>
                <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
              </entry>
              <entry>
                <string>supportedActions</string>
                <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
              </entry>
              <entry>
                <string>supportedEventTypes</string>
                <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>actionSupportability</string>
                <string>notSupported</string>
              </entry>
              <entry>
                <string>eventTypeSupportability</string>
                <string>supported</string>
              </entry>
              <entry>
                <string>notSupportedActions</string>
                <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
              </entry>
              <entry>
                <string>notSupportedEventTypes</string>
                <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
              </entry>
              <entry>
                <string>supportedActions</string>
                <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
              </entry>
              <entry>
                <string>supportedEventTypes</string>
                <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>actionSupportability</string>
                <string>supported</string>
              </entry>
              <entry>
                <string>eventTypeSupportability</string>
                <string>notSupported</string>
              </entry>
              <entry>
                <string>notSupportedActions</string>
                <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
              </entry>
              <entry>
                <string>notSupportedEventTypes</string>
                <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
              </entry>
              <entry>
                <string>supportedActions</string>
                <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
              </entry>
              <entry>
                <string>supportedEventTypes</string>
                <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</string>
          <string>When it is received</string>
          <string>Then message is consumed without error</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/named_annotations.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>actionSupportability</string>
              <string>supported</string>
            </entry>
            <entry>
              <string>eventTypeSupportability</string>
              <string>supported</string>
            </entry>
            <entry>
              <string>notSupportedActions</string>
              <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
            </entry>
            <entry>
              <string>notSupportedEventTypes</string>
              <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
            </entry>
            <entry>
              <string>supportedActions</string>
              <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
            </entry>
            <entry>
              <string>supportedEventTypes</string>
              <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>c769ec7c-dede-4edd-b364-5a331619fa50</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>When it is received</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When it is received</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>57922245-8df7-442a-ba60-1fd72377611b</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>Then message is consumed without error</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then message is consumed without error</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>e2cd1690-d6a5-47b4-b50b-6bea98311e53</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>actionSupportability</string>
              <string>notSupported</string>
            </entry>
            <entry>
              <string>eventTypeSupportability</string>
              <string>supported</string>
            </entry>
            <entry>
              <string>notSupportedActions</string>
              <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
            </entry>
            <entry>
              <string>notSupportedEventTypes</string>
              <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
            </entry>
            <entry>
              <string>supportedActions</string>
              <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
            </entry>
            <entry>
              <string>supportedEventTypes</string>
              <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>be59c03d-de17-4f65-a2df-c32b6b1f963e</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>When it is received</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When it is received</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>82d69e25-435d-4781-957a-6e42b57acbc4</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>Then message is consumed without error</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then message is consumed without error</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>80deed28-50ea-443d-9f4e-31c31e81b158</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>actionSupportability</string>
              <string>supported</string>
            </entry>
            <entry>
              <string>eventTypeSupportability</string>
              <string>notSupported</string>
            </entry>
            <entry>
              <string>notSupportedActions</string>
              <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
            </entry>
            <entry>
              <string>notSupportedEventTypes</string>
              <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
            </entry>
            <entry>
              <string>supportedActions</string>
              <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
            </entry>
            <entry>
              <string>supportedEventTypes</string>
              <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>b2061d88-581a-458f-8e9d-c39496dd329a</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>When it is received</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When it is received</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>aa76f83a-8956-4ca8-8161-c66cb128a173</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>Then message is consumed without error</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then message is consumed without error</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>4db9c74e-8baf-49ff-879e-097b98a03ea4</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>We want to verify that parameters can be matched by name preserving the natural order</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given parameters matched by name in natural order one and two</string>
          <string>Then parameters values are one and two</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/named_parameters.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>parameters matched by name in natural order %ith and %nth</annotatedPattern>
            <resolvedPattern>parameters\s+matched\s+by\s+name\s+in\s+natural\s+order\s+(.*)\s+and\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>parameters values are %ith and %nth</annotatedPattern>
            <resolvedPattern>parameters\s+values\s+are\s+(.*)\s+and\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given parameters matched by name in natural order one and two</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given parameters matched by name in natural order ｟one｠ and ｟two｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then parameters values are one and two</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then parameters values are ｟one｠ and ｟two｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>We want to verify that parameters can be matched by name inverting the natural order</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given parameters matched by name in inverse order one and two</string>
          <string>Then parameters values are one and two</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/named_parameters.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>parameters matched by name in inverse order %ith and %nth</annotatedPattern>
            <resolvedPattern>parameters\s+matched\s+by\s+name\s+in\s+inverse\s+order\s+(.*)\s+and\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>parameters values are %ith and %nth</annotatedPattern>
            <resolvedPattern>parameters\s+values\s+are\s+(.*)\s+and\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given parameters matched by name in inverse order one and two</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given parameters matched by name in inverse order ｟one｠ and ｟two｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then parameters values are one and two</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then parameters values are ｟one｠ and ｟two｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario with failed step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Then I fail</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/non_successful.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I fail</annotatedPattern>
            <resolvedPattern>I\s+fail</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <failed>
            <step>Then I fail</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>Then I fail</detailMessage>
              <cause class="junit.framework.AssertionFailedError">
                <detailMessage>I failed!</detailMessage>
                <stackTrace>
                  <trace>junit.framework.Assert.fail(Assert.java:47)</trace>
                  <trace>org.jbehave.examples.trader.steps.SandpitSteps.doFail(SandpitSteps.java:17)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                  <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                  <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>bf1fad71-4543-456e-be6e-b7dfcd53a0b2</uuid>
            </throwable>
            <parametrisedStep>Then I fail</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </failed>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>I want to show that different parameter delimiters can be configured via the ParameterControls</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|parameter|
|value|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>parameter</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>parameter</string>
                <string>value</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a [parameter]</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>parameter</string>
              <string>value</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given a [parameter]</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a [parameter]</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>dcb8b273-5f6f-4a4a-a554-5620e70c95b2</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>I want to show that parameter values are correctly delimited, even when the values are overlapping</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a stock of symbol 10ABCDEF and a threshold of 10</string>
          <string>Given a stock of symbol ABC10DEF and a threshold of 10</string>
          <string>Given a stock of symbol ABCDEF10 and a threshold of 10</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given a stock of symbol 10ABCDEF and a threshold of 10</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a stock of symbol ｟10ABCDEF｠ and a threshold of ｟10｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Given a stock of symbol ABC10DEF and a threshold of 10</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a stock of symbol ｟ABC10DEF｠ and a threshold of ｟10｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Given a stock of symbol ABCDEF10 and a threshold of 10</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a stock of symbol ｟ABCDEF10｠ and a threshold of ｟10｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>I want to show that parameter values are correctly delimited, but not in the table parameter</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the traders: 
|name | rank   |
|joe  | topdog |</string>
          <string>And a stock of symbol topdog and a threshold of 10</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the traders: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given the traders: 
|name | rank   |
|joe  | topdog |</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given the traders: 
［|name | rank   |
|joe  | topdog |］</parametrisedStep>
            <durationInMillis>1</durationInMillis>
          </successful>
          <successful>
            <step>And a stock of symbol topdog and a threshold of 10</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>And a stock of symbol ｟topdog｠ and a threshold of ｟10｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Use flexible parameters with examples table</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|client|item|
|Rui|chocolate|
|Figueira|car|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>client</string>
            <string>item</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>client</string>
                <string>Rui</string>
              </entry>
              <entry>
                <string>item</string>
                <string>chocolate</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>client</string>
                <string>Figueira</string>
              </entry>
              <entry>
                <string>item</string>
                <string>car</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given &lt;client&gt; is logged in</string>
          <string>And &lt;client&gt; has a cart</string>
          <string>When a &lt;item&gt; is added to the cart</string>
          <string>Then cart contains &lt;item&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parametrisation_by_delimited_name.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>client</string>
              <string>Rui</string>
            </entry>
            <entry>
              <string>item</string>
              <string>chocolate</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given &lt;client&gt; is logged in</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given &lt;client&gt; is logged in</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>5ef67851-e26e-4693-9c8a-d0acf3dcca59</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>And &lt;client&gt; has a cart</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>And &lt;client&gt; has a cart</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>03e7ef8b-3d42-48b1-8aa6-a59e2f81a80a</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>When a &lt;item&gt; is added to the cart</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When a &lt;item&gt; is added to the cart</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>9db6813f-ac29-43dc-aa91-c5ca589a2bf7</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>Then cart contains &lt;item&gt;</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then cart contains &lt;item&gt;</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>fa91ca72-3132-47c1-878c-85cb5ad42523</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>client</string>
              <string>Figueira</string>
            </entry>
            <entry>
              <string>item</string>
              <string>car</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given &lt;client&gt; is logged in</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given &lt;client&gt; is logged in</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>7a390f4d-5cc9-4a8d-ae21-38b7c17ffff0</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>And &lt;client&gt; has a cart</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>And &lt;client&gt; has a cart</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>b73a1962-3262-4b08-b862-321eadb249f1</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>When a &lt;item&gt; is added to the cart</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When a &lt;item&gt; is added to the cart</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>7dbd694e-1412-4d7f-a12f-7f0fdf5df6be</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <pending>
                <step>Then cart contains &lt;item&gt;</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Then cart contains &lt;item&gt;</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>b895eff3-660a-45db-bacf-a185a86da9c7</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the asset class &lt;assetClass&gt;</string>
          <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the asset class %assetClass</annotatedPattern>
            <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given the asset class &lt;assetClass&gt;</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given the asset class ｟&lt;assetClass&gt;｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <pending>
            <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:559)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>f95ba3ce-6ece-4999-ad01-f967484c2d60</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|scheme| 
|scheme1| 
|scheme2|
|scheme3|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>scheme</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>scheme</string>
                <string>scheme1</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>scheme</string>
                <string>scheme2</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>scheme</string>
                <string>scheme3</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a parametrised table:
|name|value|
|name1|scheme|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parametrised_table.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>scheme</string>
              <string>scheme1</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given a parametrised table:
|name|value|
|name1|scheme|</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a parametrised table:
|name|value|
|name1|scheme|</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>af15406f-9c6e-4b77-bb35-f858c36474b6</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>scheme</string>
              <string>scheme2</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given a parametrised table:
|name|value|
|name1|scheme|</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a parametrised table:
|name|value|
|name1|scheme|</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>22b4130e-577e-4be8-8e3d-b8b2a4a028e3</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>scheme</string>
              <string>scheme3</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches/>
            <results>
              <pending>
                <step>Given a parametrised table:
|name|value|
|name1|scheme|</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>Given a parametrised table:
|name|value|
|name1|scheme|</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>35a11abe-1903-4da1-ac8e-fc2270b30493</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Show that steps that don&apos;t match methods are treated as pending and @Pending annotated method stubs are generated</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a step has not been defined</string>
          <string>And another step has not been defined</string>
          <string>When a step has not been defined</string>
          <string>Then a step has not been defined</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches/>
        <results>
          <pending>
            <step>Given a step has not been defined</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Given a step has not been defined</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>5fa25ace-a05e-48b7-bf7c-675ca0002314</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>And another step has not been defined</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>And another step has not been defined</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>f2d113eb-b521-48d7-8bc5-80df120d1328</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>When a step has not been defined</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>When a step has not been defined</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>e2189668-ea26-426a-b4a4-0f3e143334c7</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>Then a step has not been defined</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Then a step has not been defined</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>a4e6b515-a686-42b1-9533-09ca09905196</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Show that steps that match methods already annotated by @Pending are treated as pending but no method stubs are generated</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a step is annotated as pending</string>
          <string>When a step is annotated as pending</string>
          <string>Then a step is annotated as pending</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a step is annotated as pending</annotatedPattern>
            <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>a step is annotated as pending</annotatedPattern>
            <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>a step is annotated as pending</annotatedPattern>
            <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <pending>
            <step>Given a step is annotated as pending</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Given a step is annotated as pending</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>a46dffa0-d1b5-49c6-80f8-b2e3a7916428</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>When a step is annotated as pending</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>When a step is annotated as pending</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>c52524d6-5dfd-4d92-8a28-338638c6016f</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>Then a step is annotated as pending</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Then a step is annotated as pending</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>24eae202-6aeb-446a-91a1-f1b9afc83830</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Show that multiple And steps can be used</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I am not logged in</string>
          <string>And I have been redirected from my intended page to the login page</string>
          <string>When I log in with good credentials</string>
          <string>Then I am redirected to my intended page</string>
          <string>And I am logged in</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches/>
        <results>
          <pending>
            <step>Given I am not logged in</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Given I am not logged in</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>42adfe1d-a38a-4206-b0ff-2b681bf67796</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>And I have been redirected from my intended page to the login page</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>And I have been redirected from my intended page to the login page</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>6d577997-5a57-43d2-ae3b-7ba8a8a68292</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>When I log in with good credentials</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>When I log in with good credentials</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>3fc41da3-ecb9-4bd3-a458-85f1142de962</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>Then I am redirected to my intended page</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Then I am redirected to my intended page</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>a7f615e1-0d73-4708-a47a-ab5b87bade68</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>And I am logged in</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>And I am logged in</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>867ec746-e065-444c-9be4-bea0718fab25</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps/>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/pending_stats.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches/>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario with some pending steps</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I am pending</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/pending_stats.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches/>
        <results>
          <pending>
            <step>Given I am pending</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Given I am pending</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>c02dedd0-0ffa-4e96-bb95-d71b88365c4c</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>7</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that verifies priority matching of steps, with the less-greedy pattern given higher priority</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- Matching regex &quot;a step that has %param&quot;</string>
          <string>Given a step that has a parameter</string>
          <string>Then the parameter value is &quot;a parameter&quot;</string>
          <string>!-- Matching regex &quot;a step that has exactly one %param&quot;</string>
          <string>Given a step that has exactly one of the parameters</string>
          <string>Then the parameter value is &quot;of the parameters&quot;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/priority_matching.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a step that has %param</annotatedPattern>
            <resolvedPattern>a\s+step\s+that\s+has\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a step that has exactly one %param</annotatedPattern>
            <resolvedPattern>a\s+step\s+that\s+has\s+exactly\s+one\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the parameter value is &quot;%param&quot;</annotatedPattern>
            <resolvedPattern>the\s+parameter\s+value\s+is\s+&quot;(.*)&quot;</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <ignorable>
            <step>!-- Matching regex &quot;a step that has %param&quot;</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>Given a step that has a parameter</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a step that has ｟a parameter｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the parameter value is &quot;a parameter&quot;</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the parameter value is &quot;a parameter&quot;</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- Matching regex &quot;a step that has exactly one %param&quot;</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>Given a step that has exactly one of the parameters</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a step that has exactly one ｟of the parameters｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the parameter value is &quot;of the parameters&quot;</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the parameter value is &quot;of the parameters&quot;</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the stock exchange &lt;stockExchange&gt;</string>
          <string>And the asset class &lt;assetClass&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the asset class %assetClass</annotatedPattern>
            <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
            <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given the stock exchange &lt;stockExchange&gt;</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given the stock exchange ｟&lt;stockExchange&gt;｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>And the asset class &lt;assetClass&gt;</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>And the asset class ｟&lt;assetClass&gt;｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario where before and after steps are executed only once even if there is a given story</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
              <parameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>1.0</string>
                </entry>
              </parameters>
              <path>org/jbehave/examples/trader/stories/parametrised.story</path>
              <anchor>0</anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
          <examplesTable>
            <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers>
              <string>symbol</string>
              <string>threshold</string>
            </headers>
            <data>
              <linked-hash-map>
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>1.0</string>
                </entry>
              </linked-hash-map>
            </data>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>symbol</string>
            <string>threshold</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>1.0</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>When the stock is traded at price 1.1</string>
          <string>Then the alert status is ON</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/skip_before_and_after_scenario_steps_if_given_story.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/parametrised.story</path>
            <description>
              <descriptionAsString></descriptionAsString>
            </description>
            <narrative>
              <inOrderTo></inOrderTo>
              <asA></asA>
              <iWantTo></iWantTo>
            </narrative>
            <meta>
              <properties>
                <property name="theme" value="parametrisation"/>
              </properties>
            </meta>
            <scenarios>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
            </scenarios>
            <name>parametrised.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative></localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>the asset class %assetClass</annotatedPattern>
                    <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given the asset class &lt;assetClass&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given the asset class ｟&lt;assetClass&gt;｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of ｟STK1｠ and a ｟1.0｠</parametrisedStep>
                    <durationInMillis>1</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                  <skipped>
                    <step></step>
                    <type>SKIPPED</type>
                    <durationInMillis>0</durationInMillis>
                  </skipped>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableScenario>
          </scenarios>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
          <timing>
            <durationInMillis>1</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>When the stock is traded at price 1.1</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When the stock is traded at price ｟1.1｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the alert status is ON</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario with failed step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
          <string>Then I fail</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I fail</annotatedPattern>
            <resolvedPattern>I\s+fail</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given I do nothing</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I do nothing</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <failed>
            <step>Then I fail</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>Then I fail</detailMessage>
              <cause class="junit.framework.AssertionFailedError">
                <detailMessage>I failed!</detailMessage>
                <stackTrace>
                  <trace>junit.framework.Assert.fail(Assert.java:47)</trace>
                  <trace>org.jbehave.examples.trader.steps.SandpitSteps.doFail(SandpitSteps.java:17)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                  <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                  <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>53dde8e7-ecb6-4e4f-993e-68196f281293</uuid>
            </throwable>
            <parametrisedStep>Then I fail</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </failed>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that is not executed because if followed a failed scenario</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given I do nothing</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given I do nothing</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Composite steps in action.</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- Composite steps are identified by the @Composite method-level annotation, which is independent of the</string>
          <string>!-- @Given/@When/@Then annotations.  The @Composite is optional and complements any of the @Given/@When/@Then annotations.</string>
          <string>!-- Once the composite step is matched (via any of the supported mechanisms, e.g. normal parameters matching or a parametrised scenario),</string>
          <string>!-- if the @Composite annotation is found on the matched method, the &quot;composed&quot; steps defined in the @Composite annotations are created</string>
          <string>!-- using the parameters specified in the @Named annotations of the composite step.   In other words, the composed steps are treated</string>
          <string>!-- as a group of parametrised steps, much in the same way as the steps in a parametrised scenario.</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches/>
        <results>
          <ignorable>
            <step>!-- Composite steps are identified by the @Composite method-level annotation, which is independent of the</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!-- @Given/@When/@Then annotations.  The @Composite is optional and complements any of the @Given/@When/@Then annotations.</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!-- Once the composite step is matched (via any of the supported mechanisms, e.g. normal parameters matching or a parametrised scenario),</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!-- if the @Composite annotation is found on the matched method, the &quot;composed&quot; steps defined in the @Composite annotations are created</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!-- using the parameters specified in the @Named annotations of the composite step.   In other words, the composed steps are treated</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!-- as a group of parametrised steps, much in the same way as the steps in a parametrised scenario.</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Using a composite step with normal parameter matching</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- Annotated method:</string>
          <string>!-- @Given(&quot;%customer has previously bought a %product&quot;) // used in normal parameter matching</string>
          <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
          <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
          <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
          <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
          <string>!-- }</string>
          <string>!--
</string>
          <string>Given Mr Jones has previously bought a ticket</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>%customer has previously bought a %product</annotatedPattern>
            <resolvedPattern>(.*)\s+has\s+previously\s+bought\s+a\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <ignorable>
            <step>!-- Annotated method:</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!-- @Given(&quot;%customer has previously bought a %product&quot;) // used in normal parameter matching</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <ignorable>
            <step>!-- }</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <pending>
            <step>!--
</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>!--
</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>03d6906a-29e5-43ca-8745-20cf1dd66206</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <notPerformed>
            <step>Given Mr Jones has previously bought a ticket</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Given ｟Mr Jones｠ has previously bought a ｟ticket｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Given &lt;customer&gt; is logged in</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Given ｟Mr Jones｠ is logged in</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Given &lt;customer&gt; has a cart</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Given ｟Mr Jones｠ has a cart</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>When a &lt;product&gt; is added to the cart</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>When a ｟ticket｠ is added to the cart</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
        </results>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Using a composite step in a parameterised scenario</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|customer|product|
|Mr Jones|ticket|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>customer</string>
            <string>product</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>customer</string>
                <string>Mr Jones</string>
              </entry>
              <entry>
                <string>product</string>
                <string>ticket</string>
              </entry>
              <entry>
                <string>theme</string>
                <string>parametrisation</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- Annotated method:</string>
          <string>!-- @Given(&quot;&lt;customer&gt; has previously bought a &lt;product&gt;&quot;) // used in parameterised scenario</string>
          <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
          <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
          <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
          <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
          <string>!-- }</string>
          <string>!--
</string>
          <string>Given &lt;customer&gt; has previously bought a &lt;product&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>customer</string>
              <string>Mr Jones</string>
            </entry>
            <entry>
              <string>product</string>
              <string>ticket</string>
            </entry>
            <entry>
              <string>theme</string>
              <string>parametrisation</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>%customer has previously bought a %product</annotatedPattern>
                <resolvedPattern>(.*)\s+has\s+previously\s+bought\s+a\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Using a composite step where one of the composed steps is not found.  
The composed step not found should be reported as pending and the subsequent composed steps not performed.</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- Annotated method:</string>
          <string>!-- @Given(&quot;%customer returns to cart&quot;)</string>
          <string>!-- @Composite(steps = { &quot;Given step not found&quot;,</string>
          <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;, })</string>
          <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer) { // composed steps use these named parameters</string>
          <string>!-- }</string>
          <string>!--
</string>
          <string>Given Mr Jones returns to cart</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>%customer returns to cart</annotatedPattern>
            <resolvedPattern>(.*)\s+returns\s+to\s+cart</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>As a story implementer I want to monitor parametrised successful step - before and after execution</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a successful step</string>
          <string>Then following step should be performed</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_monitoring.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches/>
        <results>
          <pending>
            <step>Given a successful step</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Given a successful step</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>0667fa1f-6e00-4b09-b7cc-b5d32abafde5</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>Then following step should be performed</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Then following step should be performed</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>3e2de5f1-153d-430d-bdd1-29524b2246ff</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>As a story implementer I want to monitor parametrized failing step - before and after execution</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a failing step</string>
          <string>Then following step should not be performed</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_monitoring.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches/>
        <results>
          <pending>
            <step>Given a failing step</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Given a failing step</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>156ba18a-8663-495d-a18d-3ee5b564386b</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
          <pending>
            <step>Then following step should not be performed</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Then following step should not be performed</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:621)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>8544efec-49c6-41fc-818e-b84263edce0a</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Composite nested steps in action.</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Then all buttons are enabled</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_nested_composition.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches/>
        <results>
          <pending>
            <step>Then all buttons are enabled</step>
            <type>PENDING</type>
            <throwable class="org.jbehave.core.failures.PendingStepFound">
              <detailMessage>Then all buttons are enabled</detailMessage>
              <stackTrace>
                <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                <trace>org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:617)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>81f382d5-0ad3-4f8f-8376-b5bb7af251f9</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </pending>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
          <string>When the stock is traded at price 5.0</string>
          <string>Then the alert status is OFF</string>
          <string>When the stock is sold at price 11.0</string>
          <string>Then the alert status is OFF</string>
          <string>When the stock is sold at price 16.0</string>
          <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
          <string>Then the alert status is ON</string>
          <string>Then the alert status is currently ON</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is sold at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+sold\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is currently %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+currently\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given a stock of symbol STK1 and a threshold of 15.0</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟15.0｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>When the stock is traded at price 5.0</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When the stock is traded at price ｟5.0｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the alert status is OFF</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the alert status is ｟OFF｠</parametrisedStep>
            <durationInMillis>1</durationInMillis>
          </successful>
          <successful>
            <step>When the stock is sold at price 11.0</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When the stock is sold at price ｟11.0｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the alert status is OFF</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the alert status is ｟OFF｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>When the stock is sold at price 16.0</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When the stock is sold at price ｟16.0｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>Then the alert status is ON</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the alert status is currently ON</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the alert status is currently ｟ON｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>symbol</string>
            <string>threshold</string>
            <string>price</string>
            <string>status</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>5.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>OFF</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>11.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>OFF</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>16.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>ON</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
          <string>When the stock is traded with &lt;price&gt;</string>
          <string>Then the trader is alerted with &lt;status&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>5.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>OFF</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded with &lt;price&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded with ｟5.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the trader is alerted with &lt;status&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>11.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>OFF</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                <durationInMillis>1</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded with &lt;price&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded with ｟11.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the trader is alerted with &lt;status&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>16.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>ON</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When the stock is traded with &lt;price&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When the stock is traded with ｟16.0｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then the trader is alerted with &lt;status&gt;</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then the trader is alerted with ｟ON｠</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Trader sells it all and goes to Bermuda.
This scenario shows that the same step pattern can be used for different step types</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoryAsString>
              <parameters/>
              <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
              <anchor></anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the alert status is OFF</string>
          <string>Given a trader of name Mauro</string>
          <string>And the alert status is OFF</string>
          <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
          <string>When the stock is traded at price 2.0</string>
          <string>Then the alert status is ON</string>
          <string>When the trader sells all stocks</string>
          <string>Then the trader is left with no stocks</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/trader_sells_all_stocks.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
            <description>
              <descriptionAsString>Trader is alerted of status</descriptionAsString>
            </description>
            <narrative>
              <inOrderTo>ensure a quick response</inOrderTo>
              <asA>trader</asA>
              <iWantTo>monitor stock prices</iWantTo>
            </narrative>
            <meta>
              <properties/>
            </meta>
            <scenarios>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
                  <string>When the stock is traded at price 5.0</string>
                  <string>Then the alert status is OFF</string>
                  <string>When the stock is sold at price 11.0</string>
                  <string>Then the alert status is OFF</string>
                  <string>When the stock is sold at price 16.0</string>
                  <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
                  <string>Then the alert status is ON</string>
                  <string>Then the alert status is currently ON</string>
                </steps>
              </scenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers>
                    <string>symbol</string>
                    <string>threshold</string>
                    <string>price</string>
                    <string>status</string>
                  </headers>
                  <data>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>5.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>OFF</string>
                      </entry>
                    </linked-hash-map>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>11.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>OFF</string>
                      </entry>
                    </linked-hash-map>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>16.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>ON</string>
                      </entry>
                    </linked-hash-map>
                  </data>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                  <string>When the stock is traded with &lt;price&gt;</string>
                  <string>Then the trader is alerted with &lt;status&gt;</string>
                </steps>
              </scenario>
            </scenarios>
            <name>trader_is_alerted_of_status.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative>In order to ensure a quick response
As a trader
I want to monitor stock prices</localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
                  <string>When the stock is traded at price 5.0</string>
                  <string>Then the alert status is OFF</string>
                  <string>When the stock is sold at price 11.0</string>
                  <string>Then the alert status is OFF</string>
                  <string>When the stock is sold at price 16.0</string>
                  <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
                  <string>Then the alert status is ON</string>
                  <string>Then the alert status is currently ON</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </beforeSteps>
              <steps>
                <matches>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the alert status is %status</annotatedPattern>
                    <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is sold at price %price</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+sold\s+at\s+price\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the alert status is currently %status</annotatedPattern>
                    <resolvedPattern>the\s+alert\s+status\s+is\s+currently\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
                <results>
                  <successful>
                    <step>Given a stock of symbol STK1 and a threshold of 15.0</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟15.0｠</parametrisedStep>
                    <durationInMillis>1</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is traded at price 5.0</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is traded at price ｟5.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the alert status is OFF</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the alert status is ｟OFF｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is sold at price 11.0</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is sold at price ｟11.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the alert status is OFF</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the alert status is ｟OFF｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>When the stock is sold at price 16.0</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>When the stock is sold at price ｟16.0｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <ignorable>
                    <step>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</step>
                    <type>IGNORABLE</type>
                    <durationInMillis>0</durationInMillis>
                  </ignorable>
                  <successful>
                    <step>Then the alert status is ON</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                  <successful>
                    <step>Then the alert status is currently ON</step>
                    <type>SUCCESSFUL</type>
                    <parametrisedStep>Then the alert status is currently ｟ON｠</parametrisedStep>
                    <durationInMillis>0</durationInMillis>
                  </successful>
                </results>
              </steps>
              <afterSteps>
                <results>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                  <skipped>
                    <step></step>
                    <type>SKIPPED</type>
                    <durationInMillis>0</durationInMillis>
                  </skipped>
                  <silent>
                    <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
                    <type>SUCCESSFUL</type>
                    <durationInMillis>0</durationInMillis>
                  </silent>
                </results>
              </afterSteps>
            </performableScenario>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers>
                    <string>symbol</string>
                    <string>threshold</string>
                    <string>price</string>
                    <string>status</string>
                  </headers>
                  <data>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>5.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>OFF</string>
                      </entry>
                    </linked-hash-map>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>11.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>OFF</string>
                      </entry>
                    </linked-hash-map>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>16.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>ON</string>
                      </entry>
                    </linked-hash-map>
                  </data>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                  <string>When the stock is traded with &lt;price&gt;</string>
                  <string>Then the trader is alerted with &lt;status&gt;</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios>
                <performableExample>
                  <exampleParameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>15.0</string>
                    </entry>
                    <entry>
                      <string>price</string>
                      <string>5.0</string>
                    </entry>
                    <entry>
                      <string>status</string>
                      <string>OFF</string>
                    </entry>
                  </exampleParameters>
                  <performableGivenStories/>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>WHEN</type>
                        <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                        <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                      </stepMatch>
                    </matches>
                    <results>
                      <successful>
                        <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                        <durationInMillis>1</durationInMillis>
                      </successful>
                      <successful>
                        <step>When the stock is traded with &lt;price&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>When the stock is traded with ｟5.0｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>Then the trader is alerted with &lt;status&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                    </results>
                  </steps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                </performableExample>
                <performableExample>
                  <exampleParameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>15.0</string>
                    </entry>
                    <entry>
                      <string>price</string>
                      <string>11.0</string>
                    </entry>
                    <entry>
                      <string>status</string>
                      <string>OFF</string>
                    </entry>
                  </exampleParameters>
                  <performableGivenStories/>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>WHEN</type>
                        <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                        <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                      </stepMatch>
                    </matches>
                    <results>
                      <successful>
                        <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>When the stock is traded with &lt;price&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>When the stock is traded with ｟11.0｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>Then the trader is alerted with &lt;status&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Then the trader is alerted with ｟OFF｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                    </results>
                  </steps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                </performableExample>
                <performableExample>
                  <exampleParameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>15.0</string>
                    </entry>
                    <entry>
                      <string>price</string>
                      <string>16.0</string>
                    </entry>
                    <entry>
                      <string>status</string>
                      <string>ON</string>
                    </entry>
                  </exampleParameters>
                  <performableGivenStories/>
                  <beforeSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </beforeSteps>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>WHEN</type>
                        <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                        <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                      </stepMatch>
                    </matches>
                    <results>
                      <successful>
                        <step>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Given a stock of ｟STK1｠ and a ｟15.0｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>When the stock is traded with &lt;price&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>When the stock is traded with ｟16.0｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                      <successful>
                        <step>Then the trader is alerted with &lt;status&gt;</step>
                        <type>SUCCESSFUL</type>
                        <parametrisedStep>Then the trader is alerted with ｟ON｠</parametrisedStep>
                        <durationInMillis>0</durationInMillis>
                      </successful>
                    </results>
                  </steps>
                  <afterSteps>
                    <results>
                      <silent>
                        <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                        <type>SUCCESSFUL</type>
                        <durationInMillis>0</durationInMillis>
                      </silent>
                    </results>
                  </afterSteps>
                </performableExample>
              </exampleScenarios>
              <givenStories/>
              <beforeSteps/>
              <steps/>
              <afterSteps/>
            </performableScenario>
          </scenarios>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeGivenStory()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterGivenStory()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
          <timing>
            <durationInMillis>3</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a trader of name %trader</annotatedPattern>
            <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the trader is left with no stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the trader sells all stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given the alert status is OFF</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given the alert status is ｟OFF｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Given a trader of name Mauro</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a trader of name ｟Mauro｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>And the alert status is OFF</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>And the alert status is ｟OFF｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Given a stock of symbol STK1 and a threshold of 1.5</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟1.5｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>When the stock is traded at price 2.0</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When the stock is traded at price ｟2.0｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the alert status is ON</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>When the trader sells all stocks</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When the trader sells all stocks</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the trader is left with no stocks</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the trader is left with no stocks</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Trader counts the days to go to Bermuda.</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a date of 2010-06-21</string>
          <string>When 2 days pass</string>
          <string>Then the date is 2010-06-23</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/trader_sells_all_stocks.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a date of %date</annotatedPattern>
            <resolvedPattern>a\s+date\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the date is %date</annotatedPattern>
            <resolvedPattern>the\s+date\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>%days days pass</annotatedPattern>
            <resolvedPattern>(.*)\s+days\s+pass</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given a date of 2010-06-21</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given a date of ｟2010-06-21｠</parametrisedStep>
            <durationInMillis>4</durationInMillis>
          </successful>
          <successful>
            <step>When 2 days pass</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When ｟2｠ days pass</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the date is 2010-06-23</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the date is ｟2010-06-23｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Traders can be searched by name</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
          <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
          <string>!-- This is a comment, which will be ignored in the execution</string>
          <string>When traders are subset to &quot;.*y&quot; by name</string>
          <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
          <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>traders are subset to &quot;%regex&quot; by name</annotatedPattern>
            <resolvedPattern>traders\s+are\s+subset\s+to\s+&quot;(.*)&quot;\s+by\s+name</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the current trader activity is: %activityTable</annotatedPattern>
            <resolvedPattern>the\s+current\s+trader\s+activity\s+is:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
            <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given the trader ranks: 
［|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|］</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the current trader activity is: 
［|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |］</parametrisedStep>
            <durationInMillis>1</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- This is a comment, which will be ignored in the execution</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>When traders are subset to &quot;.*y&quot; by name</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>When traders are subset to &quot;.*y&quot; by name</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <successful>
            <step>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the traders returned are:
［|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|］</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Traders can be searched by name in landscape format</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the trader ranks: 
{transformer=FROM_LANDSCAPE}
|name |Larry   |Moe     |Curly   |
|rank |Stooge 1|Stooge 2|Stooge 3|</string>
          <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
          <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the current trader activity is: %activityTable</annotatedPattern>
            <resolvedPattern>the\s+current\s+trader\s+activity\s+is:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
            <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given the trader ranks: 
{transformer=FROM_LANDSCAPE}
|name |Larry   |Moe     |Curly   |
|rank |Stooge 1|Stooge 2|Stooge 3|</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given the trader ranks: 
［{transformer=FROM_LANDSCAPE}
|name |Larry   |Moe     |Curly   |
|rank |Stooge 1|Stooge 2|Stooge 3|］</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <successful>
            <step>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the current trader activity is: 
［|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |］</parametrisedStep>
            <durationInMillis>1</durationInMillis>
          </successful>
          <successful>
            <step>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Then the traders returned are:
［|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|］</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>1</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterSuccessfulScenario()</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Traders search fails</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
          <string>!-- Verification fails</string>
          <string>Then the traders returned are:
|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
            <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <successful>
            <step>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</step>
            <type>SUCCESSFUL</type>
            <parametrisedStep>Given the trader ranks: 
［|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|］</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </successful>
          <ignorable>
            <step>!-- Verification fails</step>
            <type>IGNORABLE</type>
            <durationInMillis>0</durationInMillis>
          </ignorable>
          <failed>
            <step>Then the traders returned are:
|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>Then the traders returned are:
|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|</detailMessage>
              <cause class="org.jbehave.core.model.OutcomesTable$OutcomesFailed">
                <stackTrace>
                  <trace>org.jbehave.core.model.OutcomesTable.verify(OutcomesTable.java:55)</trace>
                  <trace>org.jbehave.examples.trader.steps.TraderSteps.theTradersReturnedAre(TraderSteps.java:115)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                  <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                  <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                  <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:553)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
                <uuid>b982bc08-7682-4c4c-bd98-15d2ff816113</uuid>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:568)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:706)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>6e7bd25f-5330-49ec-9a7a-34d0cc33a5c6</uuid>
            </throwable>
            <parametrisedStep>Then the traders returned are:
［|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|］</parametrisedStep>
            <durationInMillis>1</durationInMillis>
          </failed>
        </results>
      </steps>
      <afterSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Search term does match examples table header</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|ridiculousSearchTerm|&#xd;
|Hello Kitty|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>ridiculousSearchTerm</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>ridiculousSearchTerm</string>
                <string>Hello Kitty</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given that I am on Google&apos;s Homepage</string>
          <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
          <string>Then I should see ridiculous things</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/unmatched_search_term.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>ridiculousSearchTerm</string>
              <string>Hello Kitty</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I should see ridiculous things</annotatedPattern>
                <resolvedPattern>I\s+should\s+see\s+ridiculous\s+things</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>that I am on Google&apos;s Homepage</annotatedPattern>
                <resolvedPattern>that\s+I\s+am\s+on\s+Google&apos;s\s+Homepage</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</annotatedPattern>
                <resolvedPattern>I\s+enter\s+the\s+search\s+term\s+&lt;ridiculousSearchTerm&gt;\s+and\s+proceed</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given that I am on Google&apos;s Homepage</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given that I am on Google&apos;s Homepage</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>When I enter the search term ｟Hello Kitty｠ and proceed</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <successful>
                <step>Then I should see ridiculous things</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Then I should see ridiculous things</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Search term does not match examples table header and step is marked as pending</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|ridiculoussearchterm|&#xd;
|Hello Kitty|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>ridiculoussearchterm</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>ridiculoussearchterm</string>
                <string>Hello Kitty</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given that I am on Google&apos;s Homepage</string>
          <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
          <string>Then I should see ridiculous things</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/unmatched_search_term.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>ridiculoussearchterm</string>
              <string>Hello Kitty</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </beforeSteps>
          <steps>
            <matches>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I should see ridiculous things</annotatedPattern>
                <resolvedPattern>I\s+should\s+see\s+ridiculous\s+things</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>that I am on Google&apos;s Homepage</annotatedPattern>
                <resolvedPattern>that\s+I\s+am\s+on\s+Google&apos;s\s+Homepage</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</annotatedPattern>
                <resolvedPattern>I\s+enter\s+the\s+search\s+term\s+&lt;ridiculousSearchTerm&gt;\s+and\s+proceed</resolvedPattern>
              </stepMatch>
            </matches>
            <results>
              <successful>
                <step>Given that I am on Google&apos;s Homepage</step>
                <type>SUCCESSFUL</type>
                <parametrisedStep>Given that I am on Google&apos;s Homepage</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </successful>
              <pending>
                <step>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</step>
                <type>PENDING</type>
                <throwable class="org.jbehave.core.failures.PendingStepFound">
                  <detailMessage>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.core.steps.AbstractStepResult$Pending.&lt;init&gt;(AbstractStepResult.java:58)</trace>
                    <trace>org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:174)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:559)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableExampleScenario.perform(PerformableTree.java:760)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:691)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                  <uuid>0f9d358d-b95b-495b-b27b-6751c18d29cd</uuid>
                </throwable>
                <durationInMillis>0</durationInMillis>
              </pending>
              <notPerformed>
                <step>Then I should see ridiculous things</step>
                <type>NOT_PERFORMED</type>
                <parametrisedStep>Then I should see ridiculous things</parametrisedStep>
                <durationInMillis>0</durationInMillis>
              </notPerformed>
            </results>
          </steps>
          <afterSteps>
            <results>
              <silent>
                <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterExampleScenario()</step>
                <type>SUCCESSFUL</type>
                <durationInMillis>0</durationInMillis>
              </silent>
            </results>
          </afterSteps>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the alert status is OFF</string>
          <string>Given a trader of name Mauro</string>
          <string>And the alert status is OFF</string>
          <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
          <string>When the stock is traded at price 2.0</string>
          <string>Then the alert status is ON</string>
          <string>When the trader sells all stocks</string>
          <string>Then the trader is left with no stocks</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failing_before_after.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <failed>
            <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeScenario()</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method beforeScenario (annotated with @BeforeScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before scenario</detailMessage>
              <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                <detailMessage>Method beforeScenario (annotated with @BeforeScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before scenario</detailMessage>
                <cause class="java.lang.RuntimeException">
                  <detailMessage>Failure before scenario</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeScenario(FailingBeforeAfterSteps.java:17)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                    <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                    <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                </cause>
                <stackTrace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>465ae15d-62ac-426c-b13f-4f0027f1ac01</uuid>
            </throwable>
            <durationInMillis>2</durationInMillis>
          </failed>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a trader of name %trader</annotatedPattern>
            <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the trader is left with no stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the trader sells all stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <notPerformed>
            <step>Given the alert status is OFF</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Given the alert status is ｟OFF｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Given a trader of name Mauro</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Given a trader of name ｟Mauro｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>And the alert status is OFF</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>And the alert status is ｟OFF｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Given a stock of symbol STK1 and a threshold of 1.5</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟1.5｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>When the stock is traded at price 2.0</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>When the stock is traded at price ｟2.0｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Then the alert status is ON</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>When the trader sells all stocks</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>When the trader sells all stocks</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Then the trader is left with no stocks</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Then the trader is left with no stocks</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
        </results>
      </steps>
      <afterSteps>
        <results>
          <failed>
            <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterScenario()</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method afterScenario (annotated with @AfterScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after scenario</detailMessage>
              <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                <detailMessage>Method afterScenario (annotated with @AfterScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after scenario</detailMessage>
                <cause class="java.lang.RuntimeException">
                  <detailMessage>Failure after scenario</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterScenario(FailingBeforeAfterSteps.java:22)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                    <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                    <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                </cause>
                <stackTrace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>85789c3c-4d52-4ed8-a595-30202731f40f</uuid>
            </throwable>
            <durationInMillis>1</durationInMillis>
          </failed>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the alert status is OFF</string>
          <string>Given a trader of name Mauro</string>
          <string>And the alert status is OFF</string>
          <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
          <string>When the stock is traded at price 2.0</string>
          <string>Then the alert status is ON</string>
          <string>When the trader sells all stocks</string>
          <string>Then the trader is left with no stocks</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failing_before_stories.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps>
        <results>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.beforeScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <failed>
            <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeScenario()</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method beforeScenario (annotated with @BeforeScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before scenario</detailMessage>
              <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                <detailMessage>Method beforeScenario (annotated with @BeforeScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure before scenario</detailMessage>
                <cause class="java.lang.RuntimeException">
                  <detailMessage>Failure before scenario</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.beforeScenario(FailingBeforeAfterSteps.java:17)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                    <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                    <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                </cause>
                <stackTrace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:254)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:699)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>6b91c260-4d05-4037-9bbb-7531bd20d8d8</uuid>
            </throwable>
            <durationInMillis>0</durationInMillis>
          </failed>
        </results>
      </beforeSteps>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a trader of name %trader</annotatedPattern>
            <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the trader is left with no stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the trader sells all stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
        <results>
          <notPerformed>
            <step>Given the alert status is OFF</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Given the alert status is ｟OFF｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Given a trader of name Mauro</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Given a trader of name ｟Mauro｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>And the alert status is OFF</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>And the alert status is ｟OFF｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Given a stock of symbol STK1 and a threshold of 1.5</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Given a stock of symbol ｟STK1｠ and a threshold of ｟1.5｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>When the stock is traded at price 2.0</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>When the stock is traded at price ｟2.0｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Then the alert status is ON</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Then the alert status is ｟ON｠</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>When the trader sells all stocks</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>When the trader sells all stocks</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
          <notPerformed>
            <step>Then the trader is left with no stocks</step>
            <type>NOT_PERFORMED</type>
            <parametrisedStep>Then the trader is left with no stocks</parametrisedStep>
            <durationInMillis>0</durationInMillis>
          </notPerformed>
        </results>
      </steps>
      <afterSteps>
        <results>
          <failed>
            <step>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterScenario()</step>
            <type>FAILED</type>
            <throwable>
              <detailMessage>org.jbehave.core.failures.BeforeOrAfterFailed: Method afterScenario (annotated with @AfterScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after scenario</detailMessage>
              <cause class="org.jbehave.core.failures.BeforeOrAfterFailed">
                <detailMessage>Method afterScenario (annotated with @AfterScenario in class org.jbehave.examples.trader.steps.FailingBeforeAfterSteps) failed: java.lang.RuntimeException: Failure after scenario</detailMessage>
                <cause class="java.lang.RuntimeException">
                  <detailMessage>Failure after scenario</detailMessage>
                  <stackTrace>
                    <trace>org.jbehave.examples.trader.steps.FailingBeforeAfterSteps.afterScenario(FailingBeforeAfterSteps.java:22)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</trace>
                    <trace>sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</trace>
                    <trace>sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</trace>
                    <trace>java.lang.reflect.Method.invoke(Method.java:597)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$MethodInvoker.invoke(StepCreator.java:674)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:459)</trace>
                    <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                    <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                    <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                    <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                    <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                    <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                    <trace>java.lang.Thread.run(Thread.java:680)</trace>
                  </stackTrace>
                </cause>
                <stackTrace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                  <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                  <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                  <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                  <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                  <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                  <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                  <trace>java.lang.Thread.run(Thread.java:680)</trace>
                </stackTrace>
              </cause>
              <stackTrace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462)</trace>
                <trace>org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:475)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:282)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:799)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:707)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:604)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:594)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:311)</trace>
                <trace>org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:291)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:227)</trace>
                <trace>org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:206)</trace>
                <trace>java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</trace>
                <trace>java.util.concurrent.FutureTask.run(FutureTask.java:138)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)</trace>
                <trace>java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)</trace>
                <trace>java.lang.Thread.run(Thread.java:680)</trace>
              </stackTrace>
              <uuid>79a18238-0732-4643-8065-e5e322366059</uuid>
            </throwable>
            <durationInMillis>1</durationInMillis>
          </failed>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterScenario(java.lang.String,java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <silent>
            <step>org.jbehave.examples.trader.steps.BeforeAfterSteps.afterFailedScenario(java.lang.String)</step>
            <type>SUCCESSFUL</type>
            <durationInMillis>0</durationInMillis>
          </silent>
          <skipped>
            <step></step>
            <type>SKIPPED</type>
            <durationInMillis>0</durationInMillis>
          </skipped>
        </results>
      </afterSteps>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Pass on a step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
          <string>Then I pass</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/after_scenario_outcome.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I pass</annotatedPattern>
            <resolvedPattern>I\s+pass</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Fail on a step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
          <string>Then I fail</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/after_scenario_outcome.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I fail</annotatedPattern>
            <resolvedPattern>I\s+fail</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>An initial And step should be marked as pending as there is not previous step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- What is this And of?  JBehave treats as pending</string>
          <string>And the wind blows</string>
          <string>!-- Look Ma&apos; - I can also use keywords in scenario title and step comments!</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/and_step.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the wind blows</annotatedPattern>
            <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the wind blows</annotatedPattern>
            <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>And steps should match the previous step type</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the wind blows</string>
          <string>!-- This And is equivalent to another Given</string>
          <string>And the wind blows</string>
          <string>!-- This And shows that we can chain multiple And steps</string>
          <string>And the wind blows</string>
          <string>When the wind blows</string>
          <string>!-- This And is equivalent to another When</string>
          <string>And the wind blows</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/and_step.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the wind blows</annotatedPattern>
            <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the wind blows</annotatedPattern>
            <resolvedPattern>the\s+wind\s+blows</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|date       |amount|
|none       |0.0   |
|01/06/2010 |2.15  |</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>date</string>
            <string>amount</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>date</string>
                <string>none</string>
              </entry>
              <entry>
                <string>amount</string>
                <string>0.0</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>date</string>
                <string>01/06/2010</string>
              </entry>
              <entry>
                <string>amount</string>
                <string>2.15</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a plan with calendar date of &lt;date&gt;</string>
          <string>Then the claimant should receive an amount of &lt;amount&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/claims_with_null_calendar.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>date</string>
              <string>none</string>
            </entry>
            <entry>
              <string>amount</string>
              <string>0.0</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a plan with calendar date of &lt;date&gt;</annotatedPattern>
                <resolvedPattern>a\s+plan\s+with\s+calendar\s+date\s+of\s+&lt;date&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the claimant should receive an amount of &lt;amount&gt;</annotatedPattern>
                <resolvedPattern>the\s+claimant\s+should\s+receive\s+an\s+amount\s+of\s+&lt;amount&gt;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>date</string>
              <string>01/06/2010</string>
            </entry>
            <entry>
              <string>amount</string>
              <string>2.15</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a plan with calendar date of &lt;date&gt;</annotatedPattern>
                <resolvedPattern>a\s+plan\s+with\s+calendar\s+date\s+of\s+&lt;date&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the claimant should receive an amount of &lt;amount&gt;</annotatedPattern>
                <resolvedPattern>the\s+claimant\s+should\s+receive\s+an\s+amount\s+of\s+&lt;amount&gt;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- GivenStories:  ignore_me.story</string>
          <string>Given I do nothing</string>
          <string>!-- Examples: 
|I|am|just|lazy|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/do_nothing.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Table parameter loaded from a classpath resource</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the traders: org/jbehave/examples/trader/stories/traders.table</string>
          <string>!-- This is a comment, which will be ignored in the execution</string>
          <string>When traders are subset to &quot;.*y&quot; by name</string>
          <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
          <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/examples_table_loaded_from_classpath.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>traders are subset to &quot;%regex&quot; by name</annotatedPattern>
            <resolvedPattern>traders\s+are\s+subset\s+to\s+&quot;(.*)&quot;\s+by\s+name</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
            <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the traders: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Parameters table loaded from a classpath resource</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>symbol</string>
            <string>threshold</string>
            <string>price</string>
            <string>status</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>5.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>OFF</string>
              </entry>
              <entry>
                <string>theme</string>
                <string>parametrisation</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>11.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>OFF</string>
              </entry>
              <entry>
                <string>theme</string>
                <string>parametrisation</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>16.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>ON</string>
              </entry>
              <entry>
                <string>theme</string>
                <string>parametrisation</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
          <string>When the stock is traded with &lt;price&gt;</string>
          <string>Then the trader is alerted with &lt;status&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/examples_table_loaded_from_classpath.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>5.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>OFF</string>
            </entry>
            <entry>
              <string>theme</string>
              <string>parametrisation</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>11.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>OFF</string>
            </entry>
            <entry>
              <string>theme</string>
              <string>parametrisation</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>16.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>ON</string>
            </entry>
            <entry>
              <string>theme</string>
              <string>parametrisation</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the alert status is OFF</string>
          <string>Given a trader of name Mauro</string>
          <string>And the alert status is OFF</string>
          <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
          <string>When the stock is traded at price 2.0</string>
          <string>Then the alert status is ON</string>
          <string>When the trader sells all stocks</string>
          <string>Then the trader is left with no stocks</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failing_after_stories.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a trader of name %trader</annotatedPattern>
            <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the trader is left with no stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the trader sells all stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Fail on a step in story 1</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>When a failure occurs in story 1</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failure_correlation_one.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches/>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Fail on a step in story 2</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>When a failure occurs in story 2</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failure_correlation_two.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches/>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Fail on a step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
          <string>Then I fail</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I fail</annotatedPattern>
            <resolvedPattern>I\s+fail</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Pass after given stories</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoryAsString>
              <parameters/>
              <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
              <anchor></anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/do_nothing.story</givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
          <string>Then I pass</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/do_nothing.story</path>
            <description>
              <descriptionAsString></descriptionAsString>
            </description>
            <narrative>
              <inOrderTo></inOrderTo>
              <asA></asA>
              <iWantTo></iWantTo>
            </narrative>
            <meta>
              <properties/>
            </meta>
            <scenarios>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>!-- GivenStories:  ignore_me.story</string>
                  <string>Given I do nothing</string>
                  <string>!-- Examples: 
|I|am|just|lazy|</string>
                </steps>
              </scenario>
            </scenarios>
            <name>do_nothing.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative></localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>!-- GivenStories:  ignore_me.story</string>
                  <string>Given I do nothing</string>
                  <string>!-- Examples: 
|I|am|just|lazy|</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/do_nothing.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>I do nothing</annotatedPattern>
                    <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableScenario>
          </scenarios>
          <beforeSteps/>
          <afterSteps/>
          <timing>
            <durationInMillis>0</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I pass</annotatedPattern>
            <resolvedPattern>I\s+pass</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that depends on a non successful story</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoryAsString>
              <parameters/>
              <path>org/jbehave/examples/trader/stories/non_successful.story</path>
              <anchor></anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/non_successful.story</givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the traders:
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/given_non_successful.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/non_successful.story</path>
            <description>
              <descriptionAsString></descriptionAsString>
            </description>
            <narrative>
              <inOrderTo></inOrderTo>
              <asA></asA>
              <iWantTo></iWantTo>
            </narrative>
            <meta>
              <properties/>
            </meta>
            <scenarios>
              <scenario>
                <title>A scenario with failed step</title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Then I fail</string>
                </steps>
              </scenario>
            </scenarios>
            <name>non_successful.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative></localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title>A scenario with failed step</title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Then I fail</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/non_successful.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>I fail</annotatedPattern>
                    <resolvedPattern>I\s+fail</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableScenario>
          </scenarios>
          <beforeSteps/>
          <afterSteps/>
          <timing>
            <durationInMillis>0</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the traders: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that depends on a given story with parameters specified as anchor pointing to specific examples row. 
The presence of the anchor implies that the scenario is executed normally and not parametrised by examples, i.e. that the scenario is not executed for each examples row.</title>
        <meta>
          <properties>
            <property name="theme" value="parametrisation"/>
            <property name="assetClass" value="FX"/>
          </properties>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
              <parameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>1.0</string>
                </entry>
              </parameters>
              <path>org/jbehave/examples/trader/stories/parametrised.story</path>
              <anchor>0</anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
          <examplesTable>
            <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers>
              <string>symbol</string>
              <string>threshold</string>
            </headers>
            <data>
              <linked-hash-map>
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>1.0</string>
                </entry>
              </linked-hash-map>
              <linked-hash-map>
                <entry>
                  <string>symbol</string>
                  <string>STK2</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>2.0</string>
                </entry>
              </linked-hash-map>
            </data>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|symbol|threshold|
|STK1  |1.0|
|STK2  |2.0|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>symbol</string>
            <string>threshold</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>1.0</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK2</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>2.0</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>When the stock is traded at price 1.1</string>
          <string>Then the alert status is ON</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_anchor.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/parametrised.story</path>
            <description>
              <descriptionAsString></descriptionAsString>
            </description>
            <narrative>
              <inOrderTo></inOrderTo>
              <asA></asA>
              <iWantTo></iWantTo>
            </narrative>
            <meta>
              <properties>
                <property name="theme" value="parametrisation"/>
              </properties>
            </meta>
            <scenarios>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
            </scenarios>
            <name>parametrised.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative></localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>the asset class %assetClass</annotatedPattern>
                    <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableScenario>
          </scenarios>
          <beforeSteps/>
          <afterSteps/>
          <timing>
            <durationInMillis>0</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that depends on given stories parametrised by examples. 
Here the entire scenario is parametrised by examples, i.e. the scenario is executed for each examples row.</title>
        <meta>
          <properties>
            <property name="assetClass" value="FX"/>
          </properties>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoryAsString>
              <parameters/>
              <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
              <anchor></anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/select_stock_exchange.story</givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|stockExchange|symbol|threshold|price|status|
|NASDAQ|STK1|10.0|5.0|OFF|
|FTSE|STK1|10.0|11.0|ON|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>stockExchange</string>
            <string>symbol</string>
            <string>threshold</string>
            <string>price</string>
            <string>status</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>stockExchange</string>
                <string>NASDAQ</string>
              </entry>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>10.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>5.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>OFF</string>
              </entry>
              <entry>
                <string>assetClass</string>
                <string>FX</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>stockExchange</string>
                <string>FTSE</string>
              </entry>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>10.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>11.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>ON</string>
              </entry>
              <entry>
                <string>assetClass</string>
                <string>FX</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a stock of symbol &lt;symbol&gt; and a threshold of &lt;threshold&gt;</string>
          <string>When the stock is traded at price &lt;price&gt;</string>
          <string>Then the alert status is &lt;status&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_examples.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>stockExchange</string>
              <string>NASDAQ</string>
            </entry>
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>10.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>5.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>OFF</string>
            </entry>
            <entry>
              <string>assetClass</string>
              <string>FX</string>
            </entry>
          </exampleParameters>
          <performableGivenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties/>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the stock exchange &lt;stockExchange&gt;</string>
                      <string>And the asset class &lt;assetClass&gt;</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>select_stock_exchange.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the stock exchange &lt;stockExchange&gt;</string>
                      <string>And the asset class &lt;assetClass&gt;</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps/>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the asset class %assetClass</annotatedPattern>
                        <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
                      </stepMatch>
                    </matches>
                  </steps>
                  <afterSteps/>
                </performableScenario>
              </scenarios>
              <beforeSteps/>
              <afterSteps/>
              <timing>
                <durationInMillis>0</durationInMillis>
              </timing>
            </performableStory>
          </performableGivenStories>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>stockExchange</string>
              <string>FTSE</string>
            </entry>
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>10.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>11.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>ON</string>
            </entry>
            <entry>
              <string>assetClass</string>
              <string>FX</string>
            </entry>
          </exampleParameters>
          <performableGivenStories>
            <performableStory>
              <story>
                <path>org/jbehave/examples/trader/stories/select_stock_exchange.story</path>
                <description>
                  <descriptionAsString></descriptionAsString>
                </description>
                <narrative>
                  <inOrderTo></inOrderTo>
                  <asA></asA>
                  <iWantTo></iWantTo>
                </narrative>
                <meta>
                  <properties/>
                </meta>
                <scenarios>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the stock exchange &lt;stockExchange&gt;</string>
                      <string>And the asset class &lt;assetClass&gt;</string>
                    </steps>
                  </scenario>
                </scenarios>
                <name>select_stock_exchange.story</name>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
              </story>
              <localizedNarrative></localizedNarrative>
              <allowed>true</allowed>
              <givenStories/>
              <scenarios>
                <performableScenario>
                  <scenario>
                    <title></title>
                    <meta>
                      <properties/>
                    </meta>
                    <givenStories>
                      <givenStories/>
                      <givenStoriesAsString></givenStoriesAsString>
                      <examplesTable>
                        <tableAsString></tableAsString>
                        <headerSeparator>|</headerSeparator>
                        <valueSeparator>|</valueSeparator>
                        <ignorableSeparator>|--</ignorableSeparator>
                        <tableTransformers>
                          <transformers>
                            <entry>
                              <string>FROM_LANDSCAPE</string>
                              <fromLandscape/>
                            </entry>
                          </transformers>
                        </tableTransformers>
                        <headers/>
                        <data/>
                        <properties>
                          <property name="headerSeparator" value="|"/>
                          <property name="valueSeparator" value="|"/>
                          <property name="ignorableSeparator" value="|--"/>
                        </properties>
                        <propertiesAsString></propertiesAsString>
                        <namedParameters/>
                        <trim>true</trim>
                      </examplesTable>
                    </givenStories>
                    <examplesTable>
                      <tableAsString></tableAsString>
                      <headerSeparator>|</headerSeparator>
                      <valueSeparator>|</valueSeparator>
                      <ignorableSeparator>|--</ignorableSeparator>
                      <tableTransformers>
                        <transformers>
                          <entry>
                            <string>FROM_LANDSCAPE</string>
                            <fromLandscape/>
                          </entry>
                        </transformers>
                      </tableTransformers>
                      <headers/>
                      <data/>
                      <properties>
                        <property name="headerSeparator" value="|"/>
                        <property name="valueSeparator" value="|"/>
                        <property name="ignorableSeparator" value="|--"/>
                      </properties>
                      <propertiesAsString></propertiesAsString>
                      <namedParameters/>
                      <trim>true</trim>
                    </examplesTable>
                    <steps>
                      <string>Given the stock exchange &lt;stockExchange&gt;</string>
                      <string>And the asset class &lt;assetClass&gt;</string>
                    </steps>
                  </scenario>
                  <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
                  <allowed>true</allowed>
                  <exampleScenarios/>
                  <givenStories/>
                  <beforeSteps/>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the asset class %assetClass</annotatedPattern>
                        <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
                      </stepMatch>
                    </matches>
                  </steps>
                  <afterSteps/>
                </performableScenario>
              </scenarios>
              <beforeSteps/>
              <afterSteps/>
              <timing>
                <durationInMillis>0</durationInMillis>
              </timing>
            </performableStory>
          </performableGivenStories>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the alert status is %status</annotatedPattern>
                <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that is executed after the given stories parametrised by meta</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>When the stock is traded at price 1.1</string>
          <string>Then the alert status is ON</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/given_stories_parametrised_by_meta.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario to be skipped
and not executed</title>
        <meta>
          <properties>
            <property name="skip" value=""/>
          </properties>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario with an author</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario with examples whose rows can be filtered on meta</title>
        <meta>
          <properties>
            <property name="run" value=""/>
          </properties>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|Meta:|Parameter|
|@run yes|value|
|@run not|value|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>Meta:</string>
            <string>Parameter</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>Meta:</string>
                <string>@run yes</string>
              </entry>
              <entry>
                <string>Parameter</string>
                <string>value</string>
              </entry>
              <entry>
                <string>author</string>
                <string>Mauro</string>
              </entry>
              <entry>
                <string>run</string>
                <string></string>
              </entry>
              <entry>
                <string>theme</string>
                <string>filtering</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>Meta:</string>
                <string>@run not</string>
              </entry>
              <entry>
                <string>Parameter</string>
                <string>value</string>
              </entry>
              <entry>
                <string>author</string>
                <string>Mauro</string>
              </entry>
              <entry>
                <string>run</string>
                <string></string>
              </entry>
              <entry>
                <string>theme</string>
                <string>filtering</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/meta_filtering.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>Meta:</string>
              <string>@run yes</string>
            </entry>
            <entry>
              <string>Parameter</string>
              <string>value</string>
            </entry>
            <entry>
              <string>author</string>
              <string>Mauro</string>
            </entry>
            <entry>
              <string>run</string>
              <string></string>
            </entry>
            <entry>
              <string>theme</string>
              <string>filtering</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>Meta:</string>
              <string>@run not</string>
            </entry>
            <entry>
              <string>Parameter</string>
              <string>value</string>
            </entry>
            <entry>
              <string>author</string>
              <string>Mauro</string>
            </entry>
            <entry>
              <string>run</string>
              <string></string>
            </entry>
            <entry>
              <string>theme</string>
              <string>filtering</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>I do nothing</annotatedPattern>
                <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>scenario with explicitly mentioned meta params</title>
        <meta>
          <properties>
            <property name="variant" value="named"/>
          </properties>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I have specified the &lt;theme&gt;</string>
          <string>And a &lt;variant&gt;</string>
          <string>Then the theme is &apos;parameters&apos; with variant &apos;named&apos;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/meta_parametrisation.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a &lt;variant&gt;</annotatedPattern>
            <resolvedPattern>a\s+&lt;variant&gt;</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the theme is &apos;%theme&apos; with variant &apos;%variant&apos;</annotatedPattern>
            <resolvedPattern>the\s+theme\s+is\s+&apos;(.*)&apos;\s+with\s+variant\s+&apos;(.*)&apos;</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I have specified the &lt;theme&gt;</annotatedPattern>
            <resolvedPattern>I\s+have\s+specified\s+the\s+&lt;theme&gt;</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>scenario with hidden meta params</title>
        <meta>
          <properties>
            <property name="variant" value="foo"/>
          </properties>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I have some step that implicitly requires meta params</string>
          <string>Then the theme is &apos;parameters&apos; with variant &apos;foo&apos;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/meta_parametrisation.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I have some step that implicitly requires meta params</annotatedPattern>
            <resolvedPattern>I\s+have\s+some\s+step\s+that\s+implicitly\s+requires\s+meta\s+params</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the theme is &apos;%theme&apos; with variant &apos;%variant&apos;</annotatedPattern>
            <resolvedPattern>the\s+theme\s+is\s+&apos;(.*)&apos;\s+with\s+variant\s+&apos;(.*)&apos;</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Supported action and/or event story</title>
        <meta>
          <properties>
            <property name="notSupportedActions" value="FIX,SCHEDULE,RESCHEDULE,DETERMINE"/>
            <property name="supportedActions" value="TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP"/>
            <property name="notSupportedEventTypes" value="DONE,FETCHED,CREATED,TESTED,FIXED"/>
            <property name="supportedEventTypes" value="NEW,FRESH,CANCELLED,AMENDED,TERMINATED"/>
          </properties>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|actionSupportability   |eventTypeSupportability|&#xd;
|supported              |supported              |&#xd;
|notSupported           |supported              |&#xd;
|supported              |notSupported           |</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>actionSupportability</string>
            <string>eventTypeSupportability</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>actionSupportability</string>
                <string>supported</string>
              </entry>
              <entry>
                <string>eventTypeSupportability</string>
                <string>supported</string>
              </entry>
              <entry>
                <string>notSupportedActions</string>
                <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
              </entry>
              <entry>
                <string>notSupportedEventTypes</string>
                <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
              </entry>
              <entry>
                <string>supportedActions</string>
                <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
              </entry>
              <entry>
                <string>supportedEventTypes</string>
                <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>actionSupportability</string>
                <string>notSupported</string>
              </entry>
              <entry>
                <string>eventTypeSupportability</string>
                <string>supported</string>
              </entry>
              <entry>
                <string>notSupportedActions</string>
                <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
              </entry>
              <entry>
                <string>notSupportedEventTypes</string>
                <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
              </entry>
              <entry>
                <string>supportedActions</string>
                <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
              </entry>
              <entry>
                <string>supportedEventTypes</string>
                <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>actionSupportability</string>
                <string>supported</string>
              </entry>
              <entry>
                <string>eventTypeSupportability</string>
                <string>notSupported</string>
              </entry>
              <entry>
                <string>notSupportedActions</string>
                <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
              </entry>
              <entry>
                <string>notSupportedEventTypes</string>
                <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
              </entry>
              <entry>
                <string>supportedActions</string>
                <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
              </entry>
              <entry>
                <string>supportedEventTypes</string>
                <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a message with &lt;actionSupportability&gt; action and &lt;eventTypeSupportability&gt; event</string>
          <string>When it is received</string>
          <string>Then message is consumed without error</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/named_annotations.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>actionSupportability</string>
              <string>supported</string>
            </entry>
            <entry>
              <string>eventTypeSupportability</string>
              <string>supported</string>
            </entry>
            <entry>
              <string>notSupportedActions</string>
              <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
            </entry>
            <entry>
              <string>notSupportedEventTypes</string>
              <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
            </entry>
            <entry>
              <string>supportedActions</string>
              <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
            </entry>
            <entry>
              <string>supportedEventTypes</string>
              <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>actionSupportability</string>
              <string>notSupported</string>
            </entry>
            <entry>
              <string>eventTypeSupportability</string>
              <string>supported</string>
            </entry>
            <entry>
              <string>notSupportedActions</string>
              <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
            </entry>
            <entry>
              <string>notSupportedEventTypes</string>
              <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
            </entry>
            <entry>
              <string>supportedActions</string>
              <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
            </entry>
            <entry>
              <string>supportedEventTypes</string>
              <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>actionSupportability</string>
              <string>supported</string>
            </entry>
            <entry>
              <string>eventTypeSupportability</string>
              <string>notSupported</string>
            </entry>
            <entry>
              <string>notSupportedActions</string>
              <string>FIX,SCHEDULE,RESCHEDULE,DETERMINE</string>
            </entry>
            <entry>
              <string>notSupportedEventTypes</string>
              <string>DONE,FETCHED,CREATED,TESTED,FIXED</string>
            </entry>
            <entry>
              <string>supportedActions</string>
              <string>TEST,CREATE,CANCEL,TERMINATE,AMEND,RECREATE,FACILITATE,SLEEP</string>
            </entry>
            <entry>
              <string>supportedEventTypes</string>
              <string>NEW,FRESH,CANCELLED,AMENDED,TERMINATED</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>We want to verify that parameters can be matched by name preserving the natural order</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given parameters matched by name in natural order one and two</string>
          <string>Then parameters values are one and two</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/named_parameters.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>parameters matched by name in natural order %ith and %nth</annotatedPattern>
            <resolvedPattern>parameters\s+matched\s+by\s+name\s+in\s+natural\s+order\s+(.*)\s+and\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>parameters values are %ith and %nth</annotatedPattern>
            <resolvedPattern>parameters\s+values\s+are\s+(.*)\s+and\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>We want to verify that parameters can be matched by name inverting the natural order</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given parameters matched by name in inverse order one and two</string>
          <string>Then parameters values are one and two</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/named_parameters.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>parameters matched by name in inverse order %ith and %nth</annotatedPattern>
            <resolvedPattern>parameters\s+matched\s+by\s+name\s+in\s+inverse\s+order\s+(.*)\s+and\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>parameters values are %ith and %nth</annotatedPattern>
            <resolvedPattern>parameters\s+values\s+are\s+(.*)\s+and\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario with failed step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Then I fail</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/non_successful.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I fail</annotatedPattern>
            <resolvedPattern>I\s+fail</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>I want to show that different parameter delimiters can be configured via the ParameterControls</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|parameter|
|value|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>parameter</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>parameter</string>
                <string>value</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a [parameter]</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>parameter</string>
              <string>value</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>I want to show that parameter values are correctly delimited, even when the values are overlapping</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a stock of symbol 10ABCDEF and a threshold of 10</string>
          <string>Given a stock of symbol ABC10DEF and a threshold of 10</string>
          <string>Given a stock of symbol ABCDEF10 and a threshold of 10</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>I want to show that parameter values are correctly delimited, but not in the table parameter</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the traders: 
|name | rank   |
|joe  | topdog |</string>
          <string>And a stock of symbol topdog and a threshold of 10</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parameter_delimiters.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the traders: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+traders:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Use flexible parameters with examples table</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|client|item|
|Rui|chocolate|
|Figueira|car|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>client</string>
            <string>item</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>client</string>
                <string>Rui</string>
              </entry>
              <entry>
                <string>item</string>
                <string>chocolate</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>client</string>
                <string>Figueira</string>
              </entry>
              <entry>
                <string>item</string>
                <string>car</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given &lt;client&gt; is logged in</string>
          <string>And &lt;client&gt; has a cart</string>
          <string>When a &lt;item&gt; is added to the cart</string>
          <string>Then cart contains &lt;item&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parametrisation_by_delimited_name.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>client</string>
              <string>Rui</string>
            </entry>
            <entry>
              <string>item</string>
              <string>chocolate</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>client</string>
              <string>Figueira</string>
            </entry>
            <entry>
              <string>item</string>
              <string>car</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the asset class &lt;assetClass&gt;</string>
          <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the asset class %assetClass</annotatedPattern>
            <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|scheme| 
|scheme1| 
|scheme2|
|scheme3|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>scheme</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>scheme</string>
                <string>scheme1</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>scheme</string>
                <string>scheme2</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>scheme</string>
                <string>scheme3</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a parametrised table:
|name|value|
|name1|scheme|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/parametrised_table.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>scheme</string>
              <string>scheme1</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>scheme</string>
              <string>scheme2</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>scheme</string>
              <string>scheme3</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches/>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Show that steps that don&apos;t match methods are treated as pending and @Pending annotated method stubs are generated</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a step has not been defined</string>
          <string>And another step has not been defined</string>
          <string>When a step has not been defined</string>
          <string>Then a step has not been defined</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches/>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Show that steps that match methods already annotated by @Pending are treated as pending but no method stubs are generated</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a step is annotated as pending</string>
          <string>When a step is annotated as pending</string>
          <string>Then a step is annotated as pending</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a step is annotated as pending</annotatedPattern>
            <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>a step is annotated as pending</annotatedPattern>
            <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>a step is annotated as pending</annotatedPattern>
            <resolvedPattern>a\s+step\s+is\s+annotated\s+as\s+pending</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Show that multiple And steps can be used</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I am not logged in</string>
          <string>And I have been redirected from my intended page to the login page</string>
          <string>When I log in with good credentials</string>
          <string>Then I am redirected to my intended page</string>
          <string>And I am logged in</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/pending.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches/>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps/>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/pending_stats.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches/>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario with some pending steps</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I am pending</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/pending_stats.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches/>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that verifies priority matching of steps, with the less-greedy pattern given higher priority</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- Matching regex &quot;a step that has %param&quot;</string>
          <string>Given a step that has a parameter</string>
          <string>Then the parameter value is &quot;a parameter&quot;</string>
          <string>!-- Matching regex &quot;a step that has exactly one %param&quot;</string>
          <string>Given a step that has exactly one of the parameters</string>
          <string>Then the parameter value is &quot;of the parameters&quot;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/priority_matching.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a step that has %param</annotatedPattern>
            <resolvedPattern>a\s+step\s+that\s+has\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a step that has exactly one %param</annotatedPattern>
            <resolvedPattern>a\s+step\s+that\s+has\s+exactly\s+one\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the parameter value is &quot;%param&quot;</annotatedPattern>
            <resolvedPattern>the\s+parameter\s+value\s+is\s+&quot;(.*)&quot;</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the stock exchange &lt;stockExchange&gt;</string>
          <string>And the asset class &lt;assetClass&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/select_stock_exchange.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the asset class %assetClass</annotatedPattern>
            <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the stock exchange %stockExchange</annotatedPattern>
            <resolvedPattern>the\s+stock\s+exchange\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario where before and after steps are executed only once even if there is a given story</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoryAsString>
              <parameters class="linked-hash-map">
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>1.0</string>
                </entry>
              </parameters>
              <path>org/jbehave/examples/trader/stories/parametrised.story</path>
              <anchor>0</anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/parametrised.story#{0}</givenStoriesAsString>
          <examplesTable>
            <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers>
              <string>symbol</string>
              <string>threshold</string>
            </headers>
            <data>
              <linked-hash-map>
                <entry>
                  <string>symbol</string>
                  <string>STK1</string>
                </entry>
                <entry>
                  <string>threshold</string>
                  <string>1.0</string>
                </entry>
              </linked-hash-map>
            </data>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|symbol|threshold|
|STK1  |1.0|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>symbol</string>
            <string>threshold</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>1.0</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>When the stock is traded at price 1.1</string>
          <string>Then the alert status is ON</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/skip_before_and_after_scenario_steps_if_given_story.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/parametrised.story</path>
            <description>
              <descriptionAsString></descriptionAsString>
            </description>
            <narrative>
              <inOrderTo></inOrderTo>
              <asA></asA>
              <iWantTo></iWantTo>
            </narrative>
            <meta>
              <properties>
                <property name="theme" value="parametrisation"/>
              </properties>
            </meta>
            <scenarios>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
            </scenarios>
            <name>parametrised.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative></localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given the asset class &lt;assetClass&gt;</string>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/parametrised.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>the asset class %assetClass</annotatedPattern>
                    <resolvedPattern>the\s+asset\s+class\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableScenario>
          </scenarios>
          <beforeSteps/>
          <afterSteps/>
          <timing>
            <durationInMillis>0</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario with failed step</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
          <string>Then I fail</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>I fail</annotatedPattern>
            <resolvedPattern>I\s+fail</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>A scenario that is not executed because if followed a failed scenario</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given I do nothing</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>I do nothing</annotatedPattern>
            <resolvedPattern>I\s+do\s+nothing</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Composite steps in action.</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- Composite steps are identified by the @Composite method-level annotation, which is independent of the</string>
          <string>!-- @Given/@When/@Then annotations.  The @Composite is optional and complements any of the @Given/@When/@Then annotations.</string>
          <string>!-- Once the composite step is matched (via any of the supported mechanisms, e.g. normal parameters matching or a parametrised scenario),</string>
          <string>!-- if the @Composite annotation is found on the matched method, the &quot;composed&quot; steps defined in the @Composite annotations are created</string>
          <string>!-- using the parameters specified in the @Named annotations of the composite step.   In other words, the composed steps are treated</string>
          <string>!-- as a group of parametrised steps, much in the same way as the steps in a parametrised scenario.</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches/>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Using a composite step with normal parameter matching</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- Annotated method:</string>
          <string>!-- @Given(&quot;%customer has previously bought a %product&quot;) // used in normal parameter matching</string>
          <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
          <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
          <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
          <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
          <string>!-- }</string>
          <string>!--
</string>
          <string>Given Mr Jones has previously bought a ticket</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>%customer has previously bought a %product</annotatedPattern>
            <resolvedPattern>(.*)\s+has\s+previously\s+bought\s+a\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Using a composite step in a parameterised scenario</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|customer|product|
|Mr Jones|ticket|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>customer</string>
            <string>product</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>customer</string>
                <string>Mr Jones</string>
              </entry>
              <entry>
                <string>product</string>
                <string>ticket</string>
              </entry>
              <entry>
                <string>theme</string>
                <string>parametrisation</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- Annotated method:</string>
          <string>!-- @Given(&quot;&lt;customer&gt; has previously bought a &lt;product&gt;&quot;) // used in parameterised scenario</string>
          <string>!-- @Composite(steps = { &quot;Given &lt;customer&gt; is logged in&quot;,</string>
          <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;,</string>
          <string>!--                      &quot;When a &lt;product&gt; is added to the cart&quot; })</string>
          <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer, @Named(&quot;product&quot;) String product) { // composed steps use these named parameters</string>
          <string>!-- }</string>
          <string>!--
</string>
          <string>Given &lt;customer&gt; has previously bought a &lt;product&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>customer</string>
              <string>Mr Jones</string>
            </entry>
            <entry>
              <string>product</string>
              <string>ticket</string>
            </entry>
            <entry>
              <string>theme</string>
              <string>parametrisation</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>%customer has previously bought a %product</annotatedPattern>
                <resolvedPattern>(.*)\s+has\s+previously\s+bought\s+a\s+(.*)</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Using a composite step where one of the composed steps is not found.  
The composed step not found should be reported as pending and the subsequent composed steps not performed.</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>!-- Annotated method:</string>
          <string>!-- @Given(&quot;%customer returns to cart&quot;)</string>
          <string>!-- @Composite(steps = { &quot;Given step not found&quot;,</string>
          <string>!--                      &quot;Given &lt;customer&gt; has a cart&quot;, })</string>
          <string>!-- public void aCompositeStep(@Named(&quot;customer&quot;) String customer) { // composed steps use these named parameters</string>
          <string>!-- }</string>
          <string>!--
</string>
          <string>Given Mr Jones returns to cart</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_composition.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>%customer returns to cart</annotatedPattern>
            <resolvedPattern>(.*)\s+returns\s+to\s+cart</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>As a story implementer I want to monitor parametrised successful step - before and after execution</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a successful step</string>
          <string>Then following step should be performed</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_monitoring.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches/>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>As a story implementer I want to monitor parametrized failing step - before and after execution</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a failing step</string>
          <string>Then following step should not be performed</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_monitoring.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches/>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Composite nested steps in action.</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Then all buttons are enabled</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/step_nested_composition.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches/>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
          <string>When the stock is traded at price 5.0</string>
          <string>Then the alert status is OFF</string>
          <string>When the stock is sold at price 11.0</string>
          <string>Then the alert status is OFF</string>
          <string>When the stock is sold at price 16.0</string>
          <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
          <string>Then the alert status is ON</string>
          <string>Then the alert status is currently ON</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is sold at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+sold\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is currently %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+currently\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title></title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>symbol</string>
            <string>threshold</string>
            <string>price</string>
            <string>status</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>5.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>OFF</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>11.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>OFF</string>
              </entry>
            </linked-hash-map>
            <linked-hash-map>
              <entry>
                <string>symbol</string>
                <string>STK1</string>
              </entry>
              <entry>
                <string>threshold</string>
                <string>15.0</string>
              </entry>
              <entry>
                <string>price</string>
                <string>16.0</string>
              </entry>
              <entry>
                <string>status</string>
                <string>ON</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
          <string>When the stock is traded with &lt;price&gt;</string>
          <string>Then the trader is alerted with &lt;status&gt;</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>5.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>OFF</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>11.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>OFF</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>symbol</string>
              <string>STK1</string>
            </entry>
            <entry>
              <string>threshold</string>
              <string>15.0</string>
            </entry>
            <entry>
              <string>price</string>
              <string>16.0</string>
            </entry>
            <entry>
              <string>status</string>
              <string>ON</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Trader sells it all and goes to Bermuda.
This scenario shows that the same step pattern can be used for different step types</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories>
            <givenStory>
              <givenStoryAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoryAsString>
              <parameters/>
              <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
              <anchor></anchor>
            </givenStory>
          </givenStories>
          <givenStoriesAsString>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the alert status is OFF</string>
          <string>Given a trader of name Mauro</string>
          <string>And the alert status is OFF</string>
          <string>Given a stock of symbol STK1 and a threshold of 1.5</string>
          <string>When the stock is traded at price 2.0</string>
          <string>Then the alert status is ON</string>
          <string>When the trader sells all stocks</string>
          <string>Then the trader is left with no stocks</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/trader_sells_all_stocks.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories>
        <performableStory>
          <story>
            <path>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</path>
            <description>
              <descriptionAsString>Trader is alerted of status</descriptionAsString>
            </description>
            <narrative>
              <inOrderTo>ensure a quick response</inOrderTo>
              <asA>trader</asA>
              <iWantTo>monitor stock prices</iWantTo>
            </narrative>
            <meta>
              <properties/>
            </meta>
            <scenarios>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
                  <string>When the stock is traded at price 5.0</string>
                  <string>Then the alert status is OFF</string>
                  <string>When the stock is sold at price 11.0</string>
                  <string>Then the alert status is OFF</string>
                  <string>When the stock is sold at price 16.0</string>
                  <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
                  <string>Then the alert status is ON</string>
                  <string>Then the alert status is currently ON</string>
                </steps>
              </scenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers>
                    <string>symbol</string>
                    <string>threshold</string>
                    <string>price</string>
                    <string>status</string>
                  </headers>
                  <data>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>5.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>OFF</string>
                      </entry>
                    </linked-hash-map>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>11.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>OFF</string>
                      </entry>
                    </linked-hash-map>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>16.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>ON</string>
                      </entry>
                    </linked-hash-map>
                  </data>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                  <string>When the stock is traded with &lt;price&gt;</string>
                  <string>Then the trader is alerted with &lt;status&gt;</string>
                </steps>
              </scenario>
            </scenarios>
            <name>trader_is_alerted_of_status.story</name>
            <givenStories>
              <givenStories/>
              <givenStoriesAsString></givenStoriesAsString>
              <examplesTable>
                <tableAsString></tableAsString>
                <headerSeparator>|</headerSeparator>
                <valueSeparator>|</valueSeparator>
                <ignorableSeparator>|--</ignorableSeparator>
                <tableTransformers>
                  <transformers>
                    <entry>
                      <string>FROM_LANDSCAPE</string>
                      <fromLandscape/>
                    </entry>
                  </transformers>
                </tableTransformers>
                <headers/>
                <data/>
                <properties>
                  <property name="headerSeparator" value="|"/>
                  <property name="valueSeparator" value="|"/>
                  <property name="ignorableSeparator" value="|--"/>
                </properties>
                <propertiesAsString></propertiesAsString>
                <namedParameters/>
                <trim>true</trim>
              </examplesTable>
            </givenStories>
          </story>
          <localizedNarrative>In order to ensure a quick response
As a trader
I want to monitor stock prices</localizedNarrative>
          <allowed>true</allowed>
          <givenStories/>
          <scenarios>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString></tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers/>
                  <data/>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given a stock of symbol STK1 and a threshold of 15.0</string>
                  <string>When the stock is traded at price 5.0</string>
                  <string>Then the alert status is OFF</string>
                  <string>When the stock is sold at price 11.0</string>
                  <string>Then the alert status is OFF</string>
                  <string>When the stock is sold at price 16.0</string>
                  <string>!-- The next steps show step priority in action, since both textual steps could be matched by same regex pattern,  
we set a higher priority to the less-greedy pattern</string>
                  <string>Then the alert status is ON</string>
                  <string>Then the alert status is currently ON</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios/>
              <givenStories/>
              <beforeSteps/>
              <steps>
                <matches>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is traded at price %price</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the alert status is %status</annotatedPattern>
                    <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>WHEN</type>
                    <annotatedPattern>the stock is sold at price %price</annotatedPattern>
                    <resolvedPattern>the\s+stock\s+is\s+sold\s+at\s+price\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>GIVEN</type>
                    <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
                    <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
                  </stepMatch>
                  <stepMatch>
                    <type>THEN</type>
                    <annotatedPattern>the alert status is currently %status</annotatedPattern>
                    <resolvedPattern>the\s+alert\s+status\s+is\s+currently\s+(.*)</resolvedPattern>
                  </stepMatch>
                </matches>
              </steps>
              <afterSteps/>
            </performableScenario>
            <performableScenario>
              <scenario>
                <title></title>
                <meta>
                  <properties/>
                </meta>
                <givenStories>
                  <givenStories/>
                  <givenStoriesAsString></givenStoriesAsString>
                  <examplesTable>
                    <tableAsString></tableAsString>
                    <headerSeparator>|</headerSeparator>
                    <valueSeparator>|</valueSeparator>
                    <ignorableSeparator>|--</ignorableSeparator>
                    <tableTransformers>
                      <transformers>
                        <entry>
                          <string>FROM_LANDSCAPE</string>
                          <fromLandscape/>
                        </entry>
                      </transformers>
                    </tableTransformers>
                    <headers/>
                    <data/>
                    <properties>
                      <property name="headerSeparator" value="|"/>
                      <property name="valueSeparator" value="|"/>
                      <property name="ignorableSeparator" value="|--"/>
                    </properties>
                    <propertiesAsString></propertiesAsString>
                    <namedParameters/>
                    <trim>true</trim>
                  </examplesTable>
                </givenStories>
                <examplesTable>
                  <tableAsString>|symbol|threshold|price|status|
|STK1  |15.0|5.0 |OFF|
|STK1  |15.0|11.0|OFF|
|STK1  |15.0|16.0|ON |</tableAsString>
                  <headerSeparator>|</headerSeparator>
                  <valueSeparator>|</valueSeparator>
                  <ignorableSeparator>|--</ignorableSeparator>
                  <tableTransformers>
                    <transformers>
                      <entry>
                        <string>FROM_LANDSCAPE</string>
                        <fromLandscape/>
                      </entry>
                    </transformers>
                  </tableTransformers>
                  <headers>
                    <string>symbol</string>
                    <string>threshold</string>
                    <string>price</string>
                    <string>status</string>
                  </headers>
                  <data>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>5.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>OFF</string>
                      </entry>
                    </linked-hash-map>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>11.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>OFF</string>
                      </entry>
                    </linked-hash-map>
                    <linked-hash-map>
                      <entry>
                        <string>symbol</string>
                        <string>STK1</string>
                      </entry>
                      <entry>
                        <string>threshold</string>
                        <string>15.0</string>
                      </entry>
                      <entry>
                        <string>price</string>
                        <string>16.0</string>
                      </entry>
                      <entry>
                        <string>status</string>
                        <string>ON</string>
                      </entry>
                    </linked-hash-map>
                  </data>
                  <properties>
                    <property name="headerSeparator" value="|"/>
                    <property name="valueSeparator" value="|"/>
                    <property name="ignorableSeparator" value="|--"/>
                  </properties>
                  <propertiesAsString></propertiesAsString>
                  <namedParameters/>
                  <trim>true</trim>
                </examplesTable>
                <steps>
                  <string>Given a stock of &lt;symbol&gt; and a &lt;threshold&gt;</string>
                  <string>When the stock is traded with &lt;price&gt;</string>
                  <string>Then the trader is alerted with &lt;status&gt;</string>
                </steps>
              </scenario>
              <storyPath>org/jbehave/examples/trader/stories/trader_is_alerted_of_status.story</storyPath>
              <allowed>true</allowed>
              <exampleScenarios>
                <performableExample>
                  <exampleParameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>15.0</string>
                    </entry>
                    <entry>
                      <string>price</string>
                      <string>5.0</string>
                    </entry>
                    <entry>
                      <string>status</string>
                      <string>OFF</string>
                    </entry>
                  </exampleParameters>
                  <performableGivenStories/>
                  <beforeSteps/>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>WHEN</type>
                        <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                        <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                      </stepMatch>
                    </matches>
                  </steps>
                  <afterSteps/>
                </performableExample>
                <performableExample>
                  <exampleParameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>15.0</string>
                    </entry>
                    <entry>
                      <string>price</string>
                      <string>11.0</string>
                    </entry>
                    <entry>
                      <string>status</string>
                      <string>OFF</string>
                    </entry>
                  </exampleParameters>
                  <performableGivenStories/>
                  <beforeSteps/>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>WHEN</type>
                        <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                        <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                      </stepMatch>
                    </matches>
                  </steps>
                  <afterSteps/>
                </performableExample>
                <performableExample>
                  <exampleParameters class="linked-hash-map">
                    <entry>
                      <string>symbol</string>
                      <string>STK1</string>
                    </entry>
                    <entry>
                      <string>threshold</string>
                      <string>15.0</string>
                    </entry>
                    <entry>
                      <string>price</string>
                      <string>16.0</string>
                    </entry>
                    <entry>
                      <string>status</string>
                      <string>ON</string>
                    </entry>
                  </exampleParameters>
                  <performableGivenStories/>
                  <beforeSteps/>
                  <steps>
                    <matches>
                      <stepMatch>
                        <type>GIVEN</type>
                        <annotatedPattern>a stock of &lt;symbol&gt; and a &lt;threshold&gt;</annotatedPattern>
                        <resolvedPattern>a\s+stock\s+of\s+&lt;symbol&gt;\s+and\s+a\s+&lt;threshold&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>WHEN</type>
                        <annotatedPattern>the stock is traded with &lt;price&gt;</annotatedPattern>
                        <resolvedPattern>the\s+stock\s+is\s+traded\s+with\s+&lt;price&gt;</resolvedPattern>
                      </stepMatch>
                      <stepMatch>
                        <type>THEN</type>
                        <annotatedPattern>the trader is alerted with &lt;status&gt;</annotatedPattern>
                        <resolvedPattern>the\s+trader\s+is\s+alerted\s+with\s+&lt;status&gt;</resolvedPattern>
                      </stepMatch>
                    </matches>
                  </steps>
                  <afterSteps/>
                </performableExample>
              </exampleScenarios>
              <givenStories/>
              <beforeSteps/>
              <steps/>
              <afterSteps/>
            </performableScenario>
          </scenarios>
          <beforeSteps/>
          <afterSteps/>
          <timing>
            <durationInMillis>0</durationInMillis>
          </timing>
        </performableStory>
      </givenStories>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the stock is traded at price %price</annotatedPattern>
            <resolvedPattern>the\s+stock\s+is\s+traded\s+at\s+price\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a trader of name %trader</annotatedPattern>
            <resolvedPattern>a\s+trader\s+of\s+name\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the trader is left with no stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+is\s+left\s+with\s+no\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>the trader sells all stocks</annotatedPattern>
            <resolvedPattern>the\s+trader\s+sells\s+all\s+stocks</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a stock of symbol %symbol and a threshold of %threshold</annotatedPattern>
            <resolvedPattern>a\s+stock\s+of\s+symbol\s+(.*)\s+and\s+a\s+threshold\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the alert status is %status</annotatedPattern>
            <resolvedPattern>the\s+alert\s+status\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Trader counts the days to go to Bermuda.</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given a date of 2010-06-21</string>
          <string>When 2 days pass</string>
          <string>Then the date is 2010-06-23</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/trader_sells_all_stocks.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>a date of %date</annotatedPattern>
            <resolvedPattern>a\s+date\s+of\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the date is %date</annotatedPattern>
            <resolvedPattern>the\s+date\s+is\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>%days days pass</annotatedPattern>
            <resolvedPattern>(.*)\s+days\s+pass</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Traders can be searched by name</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
          <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
          <string>!-- This is a comment, which will be ignored in the execution</string>
          <string>When traders are subset to &quot;.*y&quot; by name</string>
          <string>!-- This is another comment, also ignored, 
but look Ma! I&apos;m on a new line!</string>
          <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>WHEN</type>
            <annotatedPattern>traders are subset to &quot;%regex&quot; by name</annotatedPattern>
            <resolvedPattern>traders\s+are\s+subset\s+to\s+&quot;(.*)&quot;\s+by\s+name</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the current trader activity is: %activityTable</annotatedPattern>
            <resolvedPattern>the\s+current\s+trader\s+activity\s+is:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
            <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Traders can be searched by name in landscape format</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the trader ranks: 
{transformer=FROM_LANDSCAPE}
|name |Larry   |Moe     |Curly   |
|rank |Stooge 1|Stooge 2|Stooge 3|</string>
          <string>Then the current trader activity is: 
|name |trades|
|Larry|30000 |
|Moe  |10000 |
|Curly|20000 |</string>
          <string>Then the traders returned are:
|name |rank    |
|Larry|Stooge 3|
|Curly|Stooge 2|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the current trader activity is: %activityTable</annotatedPattern>
            <resolvedPattern>the\s+current\s+trader\s+activity\s+is:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
            <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Traders search fails</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString></tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers/>
          <data/>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given the trader ranks: 
|name |rank    |
|Larry|Stooge 3|
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
          <string>!-- Verification fails</string>
          <string>Then the traders returned are:
|name |rank    |
|Moe  |Stooge 1|
|Curly|Stooge 2|</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/traders_can_be_subset.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios/>
      <givenStories/>
      <beforeSteps/>
      <steps>
        <matches>
          <stepMatch>
            <type>THEN</type>
            <annotatedPattern>the traders returned are: %tradersTable</annotatedPattern>
            <resolvedPattern>the\s+traders\s+returned\s+are:\s+(.*)</resolvedPattern>
          </stepMatch>
          <stepMatch>
            <type>GIVEN</type>
            <annotatedPattern>the trader ranks: %ranksTable</annotatedPattern>
            <resolvedPattern>the\s+trader\s+ranks:\s+(.*)</resolvedPattern>
          </stepMatch>
        </matches>
      </steps>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Search term does match examples table header</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|ridiculousSearchTerm|&#xd;
|Hello Kitty|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>ridiculousSearchTerm</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>ridiculousSearchTerm</string>
                <string>Hello Kitty</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given that I am on Google&apos;s Homepage</string>
          <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
          <string>Then I should see ridiculous things</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/unmatched_search_term.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>ridiculousSearchTerm</string>
              <string>Hello Kitty</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I should see ridiculous things</annotatedPattern>
                <resolvedPattern>I\s+should\s+see\s+ridiculous\s+things</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>that I am on Google&apos;s Homepage</annotatedPattern>
                <resolvedPattern>that\s+I\s+am\s+on\s+Google&apos;s\s+Homepage</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</annotatedPattern>
                <resolvedPattern>I\s+enter\s+the\s+search\s+term\s+&lt;ridiculousSearchTerm&gt;\s+and\s+proceed</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
    <performableScenario>
      <scenario>
        <title>Search term does not match examples table header and step is marked as pending</title>
        <meta>
          <properties/>
        </meta>
        <givenStories>
          <givenStories/>
          <givenStoriesAsString></givenStoriesAsString>
          <examplesTable>
            <tableAsString></tableAsString>
            <headerSeparator>|</headerSeparator>
            <valueSeparator>|</valueSeparator>
            <ignorableSeparator>|--</ignorableSeparator>
            <tableTransformers>
              <transformers>
                <entry>
                  <string>FROM_LANDSCAPE</string>
                  <fromLandscape/>
                </entry>
              </transformers>
            </tableTransformers>
            <headers/>
            <data/>
            <properties>
              <property name="headerSeparator" value="|"/>
              <property name="valueSeparator" value="|"/>
              <property name="ignorableSeparator" value="|--"/>
            </properties>
            <propertiesAsString></propertiesAsString>
            <namedParameters/>
            <trim>true</trim>
          </examplesTable>
        </givenStories>
        <examplesTable>
          <tableAsString>|ridiculoussearchterm|&#xd;
|Hello Kitty|</tableAsString>
          <headerSeparator>|</headerSeparator>
          <valueSeparator>|</valueSeparator>
          <ignorableSeparator>|--</ignorableSeparator>
          <tableTransformers>
            <transformers>
              <entry>
                <string>FROM_LANDSCAPE</string>
                <fromLandscape/>
              </entry>
            </transformers>
          </tableTransformers>
          <headers>
            <string>ridiculoussearchterm</string>
          </headers>
          <data>
            <linked-hash-map>
              <entry>
                <string>ridiculoussearchterm</string>
                <string>Hello Kitty</string>
              </entry>
            </linked-hash-map>
          </data>
          <properties>
            <property name="headerSeparator" value="|"/>
            <property name="valueSeparator" value="|"/>
            <property name="ignorableSeparator" value="|--"/>
          </properties>
          <propertiesAsString></propertiesAsString>
          <namedParameters/>
          <trim>true</trim>
        </examplesTable>
        <steps>
          <string>Given that I am on Google&apos;s Homepage</string>
          <string>When I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</string>
          <string>Then I should see ridiculous things</string>
        </steps>
      </scenario>
      <storyPath>org/jbehave/examples/trader/stories/unmatched_search_term.story</storyPath>
      <allowed>true</allowed>
      <exampleScenarios>
        <performableExample>
          <exampleParameters class="linked-hash-map">
            <entry>
              <string>ridiculoussearchterm</string>
              <string>Hello Kitty</string>
            </entry>
          </exampleParameters>
          <performableGivenStories/>
          <beforeSteps/>
          <steps>
            <matches>
              <stepMatch>
                <type>THEN</type>
                <annotatedPattern>I should see ridiculous things</annotatedPattern>
                <resolvedPattern>I\s+should\s+see\s+ridiculous\s+things</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>GIVEN</type>
                <annotatedPattern>that I am on Google&apos;s Homepage</annotatedPattern>
                <resolvedPattern>that\s+I\s+am\s+on\s+Google&apos;s\s+Homepage</resolvedPattern>
              </stepMatch>
              <stepMatch>
                <type>WHEN</type>
                <annotatedPattern>I enter the search term &lt;ridiculousSearchTerm&gt; and proceed</annotatedPattern>
                <resolvedPattern>I\s+enter\s+the\s+search\s+term\s+&lt;ridiculousSearchTerm&gt;\s+and\s+proceed</resolvedPattern>
              </stepMatch>
            </matches>
          </steps>
          <afterSteps/>
        </performableExample>
      </exampleScenarios>
      <givenStories/>
      <beforeSteps/>
      <steps/>
      <afterSteps/>
    </performableScenario>
  </scenarios>
</xref>